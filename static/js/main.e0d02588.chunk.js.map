{"version":3,"sources":["env.ts","features/drinking-games/registrations.ts","features/drinking-games/DrinkingGameItems.tsx","app/AppDrawer.tsx","utils/path.ts","features/game/actions.ts","app/MainAppBar.tsx","app/AppDrawerContainer.tsx","features/play/actions.ts","features/play/components/AddPlayerForm.tsx","core/player-info.ts","features/play/selectors.ts","features/play/components/PlayerListItem.tsx","features/play/components/PlayerList.tsx","features/play/components/PlayerArrangements.tsx","features/play/components/PlayerArrangementsDialog.tsx","routes/PlayRoute.tsx","features/settings/actions.ts","features/settings/selectors.ts","features/settings/components/AddSourceForm.tsx","features/settings/components/SourcesListItem.tsx","features/settings/components/SourcesList.tsx","routes/SourcesRoute.tsx","features/settings/components/configuration/ChangeLanguage.tsx","features/settings/components/configuration/PlayerPairing.tsx","preferences.ts","features/settings/components/configuration/SocialMediaPlatform.tsx","features/settings/components/configuration/ItemPreferences.tsx","utils/statistics.ts","features/settings/components/configuration/SlidePreferences.tsx","features/settings/components/configuration/TagsPerferences.tsx","features/settings/components/Configuration.tsx","routes/ConfigurationRoute.tsx","features/game/utils.ts","features/game/slides/base/helper.tsx","features/game/slides/OpeningSlide.tsx","utils/fullscreen.ts","features/game/components/GameOptions.tsx","features/game/components/InsightsCurrentSlide.tsx","features/game/components/InsightsWillPowerView.tsx","core/selection/insights.ts","core/selection/utils.ts","core/selection/selection-algorithm-base.ts","core/selection/melina-algorithm.ts","core/cards-loader.ts","core/cards/player-setting.ts","core/parsing/parser-helper.ts","core/parsing/base-card-parser.ts","core/cards/text-element.ts","core/cards/text-translation.ts","core/parsing/text-content-parser.ts","core/parsing/text-card-parser.ts","core/cards/text-card.ts","core/cards/base-card.ts","impl/cards/fact-card.ts","impl/parsing/fact-card-parser.ts","impl/cards/virus-card.ts","impl/parsing/virus-card-parser.ts","impl/parsing/default-text-card-parser.ts","impl/cards/down-card.ts","impl/cards/never-ever-card.ts","impl/cards/joke-card.ts","impl/cards/question-card.ts","impl/cards/task-card.ts","impl/cards/would-you-rather-card.ts","impl/cards/drink-card.ts","impl/cards/group-game-card.ts","impl/cards/no-idea-loses-card.ts","impl/registrations.tsx","services/api/cards-loader.ts","impl/default-card-parser-factory.ts","services/index.ts","features/settings/epics.ts","core/text-fragment.ts","core/fragments/raw-text-fragment.ts","core/fragments/variable-fragment.ts","core/fragments/player-reference-fragment.ts","core/fragments/sips-fragment.ts","core/fragments/random-number-fragment.ts","core/fragments/random-text-fragment.ts","core/fragments/gender-based-selection-fragment.ts","core/fragments/social-media-platform-fragment.ts","core/parsing/text-decoder/default-text-decoder.ts","core/parsing/text-decoder/text-decoder-consts.ts","features/game/formatter/text-formatter.ts","features/game/slides/base/text-slide-presenter.ts","features/game/slides/base/card-presenter.ts","features/game/slides/colors.ts","features/game/slides/TruthOrDareSlide.tsx","features/game/slides/DownSlide.tsx","features/game/slides/FactSlide.tsx","features/game/slides/NeverEverSlide.tsx","features/game/slides/WouldYouRatherSlide.tsx","features/game/slides/DrinkSlide.tsx","features/game/slides/VirusSlide.tsx","features/game/slides/NoIdeaLosesSlide.tsx","features/game/slides/GroupGameSlide.tsx","features/game/slides/TaskSlide.tsx","features/game/component-registry.ts","features/game/epics.ts","features/game/slides-processor.ts","store/root-epic.ts","store/utils.ts","features/game/reducer.ts","features/settings/reducer.ts","features/play/reducer.ts","store/root-reducer.ts","store/index.ts","store/storage.ts","features/game/game-engine.ts","features/game/components/InsightsCards.tsx","utils/string-extensions.ts","features/game/components/InsightsView.tsx","features/game/components/InsightsDialog.tsx","features/game/components/SettingsView.tsx","features/game/components/SettingsDialog.tsx","features/game/components/SlideWrapper.tsx","features/game/components/GameComponent.tsx","features/drinking-games/DrinkingGame.tsx","routes/DrinkingGameRoute.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["process","LOCAL_STORAGE_VERSION","games","name","translations","lang","compose","withLocalize","withRouter","_ref","activeLanguage","history","undefined","code","map","game","translation","find","x","path","concat","react_default","a","createElement","index_es","key","button","onClick","push","selected","location","pathname","primary","drinctetRoutes","icon","FlightTakeoff_default","Layers_default","Settings_default","secondaryRoutes","Person_default","renderRoutes","routes","translate","route","startsWith","substring","DrinkingGamesMenu","state","isOpen","handleClick","_this","setState","_this$props","this","props","classes","Fragment","Receipt_default","ExpandLess_default","ExpandMore_default","in","timeout","unmountOnExit","disablePadding","className","nested","DrinkingGameItems","React","Component","withStyles","theme","createStyles","toolbar","Object","objectSpread","mixins","paddingLeft","display","alignItems","spacing","unit","variant","AppDrawer_DrinkingGamesMenu","getRootPath","match","exec","length","startGame","createStandardAction","cancelGame","requestSlideAsync","createAsyncAction","applyCard","setSlideState","enqueueFollowUp","activateFollowUp","setWillPowerLocked","setWillPower","addWillPowerMemory","dispatchProps","actions","menuButton","defineProperty","marginLeft","marginRight","breakpoints","up","grow","flexGrow","appbar","connect","sources","settings","players","play","handleToggleDrawer","arePlayersSelected","areSourcesAdded","filter","cards","areSourcesLoading","isLoading","canPlay","position","color","aria-label","Menu_default","noWrap","react_localize_redux_es","id","es_Route","render","People_default","disabled","AppDrawerContainer","mobileOpen","handleDrawerToggle","setDrawerOpen","_this2","app_MainAppBar","appBar","drawer","mdUp","implementation","anchor","direction","open","onClose","onOpen","paper","drawerPaper","tabIndex","role","onKeyDown","AppDrawer","smDown","width","flexShrink","withTheme","addPlayer","playerInfo","payload","gender","cuid","updatePlayer","removePlayer","addPlayerArrangment","removePlayerArrangment","AddPlayerForm","handlePlayerNameChange","ev","currentTarget","value","handleAddClick","endsWith","handleFormKeyDown","e","preventDefault","react","style","Input_default","type","placeholder","onChange","Button_default","PlayerInfo","classCallCheck","getPlayers","getIconButtonStyle","margin","height","onRemoveClick","onSwapGenderClick","onNameChanged","IconButton_default","react_fontawesome_index_es","faMars","faVenus","error","onBlur","Delete_default","fontSize","selectors","List_default","player","ListItem_default","components_PlayerListItem","arrangements","arrangmentItem","borderBottom","paddingBottom","arrangementSelect","down","container","findIndex","p2","arrangment","p1","arrangedPlayerId","item","xs","lg","htmlFor","target","input","y","Transition","assign","withMobileDialog","breakpoint","flex","content","padding","dialogPaper","fullscreenPaper","fullScreen","Dialog_default","goBack","TransitionComponent","fullWidth","maxWidth","paperScrollPaper","paperFullScreen","components_PlayerArrangements","tabContainer","flexDirection","headerMargin","paddingTop","paddingRight","fillRemaining","overflowY","components_AddPlayerForm","components_PlayerList","Route","component","PlayerArrangementsDialog","addSource","url","errorMessage","weight","tags","removeSource","loadSourceAsync","setSourceWeight","setPreferOppositeGenders","setSocialMediaPlatform","setSlideWeight","setTagWeight","getSources","loadSource","request","AddSourceForm","handleUrlChange","sourceExists","LoadingItem","LoadingFailedItem","onReloadClick","WeightSlider","_ref2","onChangeWeight","lab_index_es","max","min","step","_","n","root","backgroundColor","palette","background","title","textOverflow","wordBreak","overflow","_ref3","cardsCount","badgeContent","showZero","avatar","checked","b","titleTypographyProps","action","subheader","source","components_SourcesListItem","components_AddSourceForm","components_SourcesList","languages","setActiveLanguage","sm","md","inputProps","preferOppositeGenders","control","c","label","socialMediaPlatforms","slideWeights","FactSlide","DownSlide","NeverEverSlide","TruthOrDareSlide","WouldYouRatherSlide","DrinkSlide","VirusSlide","NoIdeaLosesSlide","GroupGameSlide","TaskSlide","higherArrangementPropabilityTags","platform","socialMediaPlatform","gutterBottom","marginTop","ItemPreferences","items","opacity","v","percentageFixedTotal","values","getPercentage","percentageValues","percent","total","reduce","result","Array","sum","prevBaseline","i","_percentageValues$i","sumRounded","Math","round","part","slides","slidePercentages","configuration_ItemPreferences","data","count","fontWeight","decks","weights","uniq","flatMap","Configuration","marginBottom","configuration_ChangeLanguage","PlayerPairing","SocialMediaPlatform","configuration_SlidePreferences","TagsPerferences","overflowX","components_Configuration","toTranslator","localize","languageCode","getContentStyles","textAlign","spaceHeaderStyles","visibility","getHeaderStyles","defaultMarkdownOptions","overrides","p","_ref4","children","objectWithoutProperties","marginBlockStart","marginBlockEnd","h3","_ref5","h4","_ref6","progressColor","nextSlide","slideState","justifyContent","cursor","-webkit-tap-highlight-color","rootProgress","top","left","bottom","zIndex","header","continuationDate","remaining","abs","Date","now","Container","Keyframes","Spring","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","from","config","duration","stop","_x","apply","arguments","tapToContinueProps","useSpring","delay","native","renderprops","div","esm","options","web","OpeningSlide","slideType","requiredCards","createClass","date","setSeconds","getSeconds","Error","insights","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","webkit","moz","ms","document","window","vendor","keys","Fullscreen","element","handler","addEventListener","removeEventListener","bind","Boolean","toLowerCase","styles","GameOptions","anchorEl","isFullscreen","handleMenuOpenClick","event","handleClose","handleNavigate","toggleFullscreen","documentElement","handleExit","onfullscreenchange","_this3","selectedCard","_this$state","MoreVert_default","PaperProps","DonutLarge_default","Feedback_default","FullscreenExit_default","Fullscreen_default","ArrowBack_default","selectedSlide","activeFollowUp","section","scrollableTable","tableCellNoBreak","whiteSpace","renderPlayerInsights","playerInsights","predefined","join","renderPredefinedPlayers","rounds","statistics","number","playerId","conditionalBold","chosen","isBold","InsightsCurrentSlide","cardRef","card","wp","willPower","deckUrl","slide","slideInsights","renderSlideWeights","toggleContainer","currentWillPower","isLocked","isWillPowerLocked","exclusive","row","Insights","playerSelection","defaultRandomGenerator","random","selectRandomWeighted","getWeight","totalWeight","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","randomWeight","_i","MelinaAlgorithm","_SelectionAlgorithmBa","_getPrototypeOf2","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","deckExhaustionLimit","inherits","cardType","weightedDecks","weightCards","status","deckWeights","willPowerWeights","willPowerCounter","allCards","_loop","deck","toConsumableArray","boostWillPower","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_loop2","willPowerWeightsArray","propName","Number","totalCards","playerSettings","definedPlayers","forArrangement","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop4","arrangement","_iterator3","resultCounter","_loop3","sourceList","includes","malesCount","femalesCount","selectionRoundInsights","some","dominant","changed","_this4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop5","_iterator4","_loop6","_i4","_this5","perfectCards","unplayedCards","cardsHistory","percentage","unplayedWeight","console","log","factor","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","perfectCard","availableSlides","_this6","uniqueCardTypes","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_loop7","_iterator8","requestedCards","cardTypeRatings","_i5","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","cardDeck","weightedSlides","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_loop8","slideSettings","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iterator7","slidesHistory","lastSlideType","lastSlide","floor","getRandom","_this7","filtered","weightedTag","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_loop9","cardsPlayed","exhaustionFactor","pow","weightedCards","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","rateWillPower","getHistoryFactor","getTagsFactor","_iterator11","memory","addedMemory","getHours","slidesCount","tagWeights","historyPosition","cardWillPower","filteredDecks","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","verifyPlayerSpecification","weightedZero","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","tag","checkIfWeightedZero","condition","specification","specificationMales","actualMales","specificationFemales","actualFemales","SelectionAlgorithmBase","selectRandomFromWeightedList","CardsLoader","requestFile","parserFactory","domParser","DOMParser","_loadFromUrl","loadFile","abrupt","_loadFile","_callee2","xml","xmlDoc","cardElements","xmlElement","parser","_context2","sent","parseFromString","getElementsByTagName","parentElement","nodeName","parseDeckReference","createParser","deserialize","indexOf","_x2","_x3","_x4","getAttribute","deckWhitelist","referenceRequests","cardRefs","idAttr","cardId","PlayerSetting","playerIndex","ParserHelper","s","index","isNaN","genderRequirementMap","split","m","male","f","female","o","opposite","same","BaseCardParser","createCard","getDefaultAttributes","parseAttributes","subElements","tagName","parseElement","parsePlayers","parsePlayer","parsePlayerTag","requiredGender","genderAttr","genderReq","parseGenderRequirement","TextElement","TextTranslation","TextContentParser","isConditionalElement","parseTextElement","parseTranslation","textElement","texts","textXmlNode","textContent","TextCardParser","_BaseCardParser","textContentParser","rootXml","followUpAttr","followUpProbability","followUpPropability","followUpDelay","seconds","parseTimeSpanStringToSeconds","addElement","subElement","followUp","TextCard","_BaseCard","language","BaseCard","FactCard","_TextCard","isTrueFact","FactCardParser","_TextCardParser","get","prototype","attr","toBool","VirusCard","VirusCardParser","DefaultTextCardParser","factory","DownCard","NeverEverCard","JokeCard","QuestionCard","TaskCard","WouldYouRatherCard","DrinkCard","GroupGameCard","NoIdeaLosesCard","parsers","WyrCard","loader","DefaultCardParserFactory","response","axios","loadCards","_loadCards","loadFromUrl","services","api","cardsLoader","loadSourceEpic","action$","_state$","pipe","isActionOf","mergeMap","success","catchError","message","of","failure","TextFragment","RawTextFragment","_TextFragment","text","VariableFragment","PlayerReferenceFragment","_VariableFragment","SipsFragment","minSips","sipsIndex","RandomNumberFragment","numbers","NumberRange","StaticNumber","RandomTextFragment","GenderBasedSelectionFragment","femaleText","maleText","referencedPlayerIndex","SocialMediaPlatformFragment","DefaultTextDecoder","lastTokenIndex","token","readToken","parseVariableFragment","parseRandomSelectionFragment","parseGenderSelectionFragment","playerTag","playerRef","parameterBegin","genderString","parsePlayerIndex","sipsTag","sipsFragment","test","parseNumberArray","splitQuoted","currentNumber","numberStart","isRangeToken","num","delimiter","tokenStart","withinQuotes","replace","nextChar","fragment","splitterIndex","reference","endChar","char","TextFormatter","fragments","requiredPlayers","groupBy","hasOwnProperty","rootSetting","sips","selection","lastPlayerFragment","boldPlayerNames","boldSips","sip","referencedPlayer","playerKeys","getCount","TextSlidePresenter","_CardPresenter","translator","gameEngine","selectText","_this$formatText","formatText","formatted","initializeState","due","createFollowUp","param","_this$selectFollowUpT","selectFollowUpText","initializeFollowUpState","followUps","CardPresenter","selectCard","initializeCard","initializeFollowUpCard","decode","getRequiredPlayers","requiredSips","getRequiredSips","indexedPlayers","sipInfo","getSips","store","getState","format","viableContents","toLocaleLowerCase","colors","drink","fact","groupGame","neverEver","noIdeaLoses","truthOrDare","virus","wouldYouRather","task","clickableRoot","spaceHeader","questionPaper","questionButtonsContainer","refuseMessage","isDeciding","selectedPlayer","select","decision","springProps","transform","QuestionComponent","markdownContent","DareComponent","TruthComponent","selectedText","getRandomSelectionAlgorithm","TruthOrDareSlide_Component","wobbly","to","_TextSlidePresenter","DownSlide_Component","isFollowUp","isTrue","availableFactSlideModes","selectedMode","FactSlide_Component","cardText","instruction","_selection","mode","NeverEverSlide_Component","_card","_players","WouldYouRatherSlide_Component","DrinkSlide_Component","VirusSlide_Component","NoIdeaLosesSlide_Component","GroupGameSlide_Component","slideComponents","TaskSlide_Component","nextSlideEpic","dueFollowUps","sortBy","slideInitalizer","slideActions","initializeFollowUp","components","getSlideRegistrations","_selection$recomputeW","recomputeWillPower","willPowerMemory","willPowerActions","selectNextSlide","initialize","redirectOnGameStartedEpic","tap","ignoreElements","combineEpics","settingsEpics","gameEpics","composeEnhancers","combineReducers","getType","isStarted","startTime","currentSlideStatus","flatten","weightsList","GetSlideWeightedArray","rootReducer","playReducer","gameReducer","settingsReducer","localizeReducer","epicMiddleware","createEpicMiddleware","dependencies","middlewares","enhancer","applyMiddleware","initialState","localStorage","getItem","JSON","parse","loadState","createStore","subscribe","toStore","setItem","stringify","run","rootEpic","selectPlayers","seedrandom","active","extractGameStatus","chart","InsightsCards","selectedCardType","setSelectedCardType","cardTypes","getAllCardDeckStatistics","decksStatistics","willPowerStatistics","info","displayEmpty","renderValue","es6","dataKey","tickFormatter","formatter","labelFormatter","fill","maxBarSize","entry","InsightsView","components_InsightsWillPowerView","components_InsightsCurrentSlide","components_InsightsCards","InsightsView_InsightsView","SettingsView","handleChange","_event","handleChangeIndex","indicatorColor","textColor","PlayRoute","SourcesRoute","ConfigurationRoute","firstChildMargins","components_SettingsView","GameComponent","openingSlide","dispatch","components_SlideWrapper","right","components_GameOptions","Switch","SettingsDialog","InsightsDialog","current","DrinkingGameComponent","isLoadingLang","getLang","Axios","then","currentLang","transitionDelay","DrinkingGameRoute","DrinkingGame","flexFlow","BrowserRouter","basename","components_GameComponent","Redirect","app_AppDrawerContainer","exact","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","src_iteratorNormalCompletion","src_didIteratorError","src_iteratorError","src_step","src_iterator","src","src_step2","src_iterator2","src_iteratorNormalCompletion2","userLang","userLanguage","drinctetTranslations","renderToStaticMarkup","defaultLanguage","es","app_App","getElementById","URL","href","origin","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mpMACAA,uDAAYC,sBAAwB,8lBCsDrBC,EA7Ce,CAC1B,CACIC,KAAM,mBACNC,aAAc,CACV,CAAEC,KAAM,KAAMF,KAAM,iBACpB,CAAEE,KAAM,KAAMF,KAAM,mBAG5B,CACIA,KAAM,eACNC,aAAc,CACV,CAAEC,KAAM,KAAMF,KAAM,gBACpB,CAAEE,KAAM,KAAMF,KAAM,kBAG5B,CACIA,KAAM,aACNC,aAAc,CACV,CAAEC,KAAM,KAAMF,KAAM,cACpB,CAAEE,KAAM,KAAMF,KAAM,gBAG5B,CACIA,KAAM,YACNC,aAAc,CACV,CAAEC,KAAM,KAAMF,KAAM,gBACpB,CAAEE,KAAM,KAAMF,KAAM,eAG5B,CACIA,KAAM,aACNC,aAAc,CACV,CAAEC,KAAM,KAAMF,KAAM,cACpB,CAAEE,KAAM,KAAMF,KAAM,gBAG5B,CACIA,KAAM,eACNC,aAAc,CACV,CAAEC,KAAM,KAAMF,KAAM,mBACpB,CAAEE,KAAM,KAAMF,KAAM,mBClBjBG,kBACXC,IACAC,IAFWF,CAvBf,SAAAG,GAAuD,IAAlCC,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,QAC3BN,OAA0BO,IAAnBF,EAA+B,KAAOA,EAAeG,KAElE,OAAOX,EAAMY,IAAI,SAAAC,GACb,IAAMC,EACFD,EAAKX,aAAaa,KAAK,SAAAC,GAAC,OAAIA,EAAEb,OAASA,KACvCU,EAAKX,aAAaa,KAAK,SAAAC,GAAC,MAAe,OAAXA,EAAEb,QAC9BU,EAAKX,aAAa,GAChBe,EAAI,kBAAAC,OAAqBL,EAAKZ,MAEpC,OACIkB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,IAAKV,EAAKZ,KACVuB,QAAM,EACNC,QAAS,kBAAMhB,EAAQiB,KAAKT,IAC5BU,SAAUlB,EAAQmB,SAASC,WAAaZ,GAExCE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcQ,QAAShB,EAAYb,YCoB7C8B,EAA0B,CAC5B,CACId,KAAM,QACNe,KAAMb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,OAEV,CACIH,KAAM,WACNe,KAAMb,EAAAC,EAAAC,cAACa,EAAAd,EAAD,OAEV,CACIH,KAAM,iBACNe,KAAMb,EAAAC,EAAAC,cAACc,EAAAf,EAAD,QAIRgB,EAA2B,CAC7B,CACInB,KAAM,SACNe,KAAMb,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,QAId,SAASkB,EAAT/B,EAAqDgC,GAAiB,IAA9CC,EAA8CjC,EAA9CiC,UAAW/B,EAAmCF,EAAnCE,QAC/B,OAAO8B,EAAO3B,IAAI,SAAA6B,GAAK,OACnBtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,IAAKkB,EAAMxB,KACXO,QAAM,EACNG,SAAUlB,EAAQmB,SAASC,SAASa,WAAWD,EAAMxB,MACrDQ,QAAS,kBAAMhB,EAAQiB,KAAKe,EAAMxB,QAElCE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAemB,EAAMT,MACrBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcQ,QAASU,EAAS,QAAAtB,OAASuB,EAAMxB,KAAK0B,UAAU,cASpEC,6MACOC,MAAQ,CAAEC,QAAQ,KAE3BC,YAAc,WACVC,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAEC,QAASD,EAAMC,mFAGpC,IAAAI,EAC0BC,KAAKC,MAA5BZ,EADHU,EACGV,UAAWa,EADdH,EACcG,QACXP,EAAWK,KAAKN,MAAhBC,OAER,OACI3B,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUE,QAAM,EAACC,QAAS0B,KAAKJ,YAAapB,UAAU,GAClDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,OAEJD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcQ,QAASU,EAAS,QAAAtB,OAP/B,oBAQA4B,EAAS3B,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,MAAqBD,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,OAEnCD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUoC,GAAIZ,EAAQa,QAAQ,OAAOC,eAAa,GAC9CzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuC,gBAAc,GAChB1C,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQU,QACpB5C,EAAAC,EAAAC,cAAC2C,EAAD,iBAvBIC,IAAMC,WAqDvB9D,kBACX+D,qBAlHW,SAACC,GAAD,OACXC,uBAAa,CACTC,QAAQC,OAAAC,EAAA,EAAAD,CAAA,GACDH,EAAMK,OAAOH,QADb,CAEHI,YAAa,GACbC,QAAS,OACTC,WAAY,WAEhBb,OAAQ,CACJW,YAAkC,EAArBN,EAAMS,QAAQC,UA0GnCxE,IACAD,IAHWD,CArBf,SAAoBgD,GAAc,IACtBC,EAAYD,EAAZC,QACR,OACIlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQiB,SACpBnD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,MAApB,YACA5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,qCAGRH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAOgB,EAAac,EAAOrB,IAC3BZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC2D,EAAsB5B,GACvBjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAOgB,EAAac,EAAOhB,qDCrIpC,SAAS6C,EAAYhE,GACxB,IAAMiE,EAAQ,aAAaC,KAAKlE,GAChC,OAAiB,OAAViE,GAAkBA,EAAME,OAAS,EAAIF,EAAM,GAAK,iBCK9CG,GAAYC,+BAAqB,aAArBA,GAEZC,GAAaD,+BAAqB,cAArBA,GAEbE,GAAoBC,4BAC7B,qBACA,qBACA,qBAH6BA,GAMpBC,GAAYJ,+BAAqB,aAArBA,GAEZK,GAAgBL,+BAAqB,kBAArBA,GAEhBM,GAAkBN,+BAAqB,gBAArBA,GAClBO,GAAmBP,+BAAqB,qBAArBA,GAEnBQ,GAAqBR,+BAAqB,wBAArBA,GACrBS,GAAeT,+BAAqB,iBAArBA,GACfU,GAAqBV,+BAAqB,wBAArBA,GCe5BW,GAAgB,CAClBZ,UAAWa,IAwDA/B,4BA7EA,SAACC,GAAD,OACXC,uBAAa,CACT8B,WAAW5B,OAAA6B,EAAA,EAAA7B,CAAA,CACP8B,YAAa,GACbC,YAAa,IACZlC,EAAMmC,YAAYC,GAAG,MAAQ,CAC1B7B,QAAS,SAGjB8B,KAAM,CACFC,SAAU,GAEdC,OAAQ,MAiEDxC,CACX9D,YACIC,YACIsG,YAjEY,SAAC/D,GAAD,MAAuB,CAC3CgE,QAAShE,EAAMiE,SAASD,QACxBE,QAASlE,EAAMmE,KAAKD,UAiERd,GAFJW,CA7CZ,SAAArG,GAAkG,IAA5E8C,EAA4E9C,EAA5E8C,QAAS4D,EAAmE1G,EAAnE0G,mBAAoBxG,EAA+CF,EAA/CE,QAASoG,EAAsCtG,EAAtCsG,QAASE,EAA6BxG,EAA7BwG,QAAS1B,EAAoB9E,EAApB8E,UACpE6B,EAAqBH,EAAQ3B,OAAS,EACtC+B,EAAkBN,EAAQO,OAAO,SAAApG,GAAC,YAAgBN,IAAZM,EAAEqG,QAAqBjC,OAAS,EACtEkC,EAAoBT,EAAQO,OAAO,SAAApG,GAAC,OAAIA,EAAEuG,YAAWnC,OAAS,EAE9DoC,EAAUN,GAAsBC,IAAoBG,EAE1D,OACInG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmG,SAAS,QAAQ3D,UAAWT,EAAQsD,QACxCxF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIwC,UAAWT,EAAQ8C,WACnBuB,MAAM,UACNC,aAAW,OACXlG,QAASwF,GAET9F,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,OAEJD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,KAAK2C,MAAM,UAAU5D,UAAWT,EAAQoD,KAAMoB,QAAM,GACpE1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAE,QAAA7G,OAAU+D,EAAYxE,EAAQmB,SAASC,cAExDV,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACI/G,KAAK,QACLgH,OAAQ,kBACJ9G,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoG,MAAM,UACNjG,QAAS,kBAAMhB,EAAQiB,KAAK,wBAE5BP,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,OAEJD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoG,MAAM,UAAUS,UAAWX,EAAS/F,QAAS,kBAAM4D,EAAU5E,KACjEU,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,2BChDxCK,8MACOvF,MAAe,CACpBwF,YAAY,KAGhBC,mBAAqB,WACjBtF,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAEwF,YAAaxF,EAAMwF,iBAGjDE,cAAgB,SAACzF,GACbE,EAAKC,SAAS,CAAEoF,WAAYvF,6EAGvB,IAAA0F,EAAArF,KAAAD,EACsBC,KAAKC,MAAxBC,EADHH,EACGG,QAASe,EADZlB,EACYkB,MACTiE,EAAelF,KAAKN,MAApBwF,WAER,OACIlH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoH,GAAD,CACIpF,QAAS,CAAEsD,OAAQtD,EAAQqF,QAC3BzB,mBAAoB9D,KAAKmF,qBAE7BnH,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQsF,QACpBxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQsH,MAAI,EAACC,eAAe,OACxB1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIyD,QAAQ,YACR+D,OAA4B,QAApB1E,EAAM2E,UAAsB,QAAU,OAC9CC,KAAMX,EACNY,QAAS,kBAAMT,EAAKD,eAAc,IAClCW,OAAQ,kBAAMV,EAAKD,eAAc,IACjClF,QAAS,CACL8F,MAAO9F,EAAQ+F,cAGnBjI,EAAAC,EAAAC,cAAA,OACIgI,SAAU,EACVC,KAAK,SACL7H,QAAS,kBAAM+G,EAAKD,eAAc,IAClCgB,UAAW,kBAAMf,EAAKD,eAAc,KAEpCpH,EAAAC,EAAAC,cAACmI,EAAD,SAIZrI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmI,QAAM,EAACZ,eAAe,OAC1B1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI+B,QAAS,CACL8F,MAAO9F,EAAQ+F,aAEnBrE,QAAQ,YACRiE,MAAI,GAEJ7H,EAAAC,EAAAC,cAACmI,EAAD,iBArDKvF,IAAMC,WA8DxBC,wBAtFA,SAACC,GAAD,OACXC,uBAAa,CACTsE,OAAOpE,OAAA6B,EAAA,EAAA7B,CAAA,GACFH,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BkD,MANI,IAOJC,WAAY,IAGpBP,YAAa,CACTM,MAXQ,KAaZhB,OAAOnE,OAAA6B,EAAA,EAAA7B,CAAA,CACH8B,WAdQ,KAePjC,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BkD,MAAK,eAAAxI,OAhBD,IAgBC,YAwEa,CAAE0I,WAAW,GAAhCzF,CAAwCiE,yBCjG1CyB,GAAYvE,+BAAqB,cAAc1E,IACxD,SAACkJ,GAAD,MAA4E,CACxEC,QAAS,CACL9J,KAAM6J,EAAW7J,KACjB+J,OAAQF,EAAWE,OACnBjC,GAAIkC,WAKHC,GAAe5E,+BAAqB,gBAArBA,GACf6E,GAAe7E,+BAAqB,gBAArBA,GAEf8E,GAAsB9E,+BAAqB,yBAArBA,GAGtB+E,GAAyB/E,+BAAqB,4BAArBA,4CCbhCW,GAAgB,CAClB4D,cASES,8MACOzH,MAAQ,CAAE5C,KAAM,MAEzBsK,uBAAyB,SAACC,GACtBxH,EAAKC,SAAS,CAAEhD,KAAMuK,EAAGC,cAAcC,WAG3CC,eAAiB,WACb,IAAIX,EAAiB,OACjBhH,EAAKH,MAAM5C,KAAK2K,SAAS,OAEzBZ,EAAS,UAEbhH,EAAKI,MAAMyG,UAAU,CAAE5J,KAAM+C,EAAKH,MAAM5C,KAAM+J,WAC9ChH,EAAKC,SAAS,CAAEhD,KAAM,QAG1B4K,kBAAoB,SAACC,GACH,UAAVA,EAAEvJ,MACFuJ,EAAEC,iBAEE/H,EAAKH,MAAM5C,MAAM+C,EAAK2H,2FAIzB,IACG1K,EAASkD,KAAKN,MAAd5C,KACAuC,EAAcW,KAAKC,MAAnBZ,UAER,OACIwI,EAAA,sBAAMzB,UAAWpG,KAAK0H,mBAClBG,EAAA,qBAAKC,MAAO,CAAEtG,QAAS,SACnBqG,EAAA,cAACE,GAAA9J,EAAD,CACI6J,MAAO,CAAEvE,SAAU,GACnByE,KAAK,OACLT,MAAOzK,EACPmL,YAAa5I,EAAU,+BACvB6I,SAAUlI,KAAKoH,yBAEnBS,EAAA,cAACM,GAAAlK,EAAD,CACI6J,MAAO,CAAE5E,WAAY,GACrB8B,UAAWlI,EACXwB,QAAS0B,KAAKwH,gBAEdK,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,kBA5CV9D,aAoDb2C,eACX,KACAX,GAFWW,CAGbvG,YAAaiK,6CCzEFiB,GACT,SAAAA,EAAmBxD,EAAmB9H,EAAqB+J,GAAiBzF,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAoI,GAAApI,KAAA4E,KAAA5E,KAAAlD,OAAAkD,KAAA6G,UCCnEyB,GAAa,SAAC5I,GAAD,OAAsBA,EAAMkE,sECgBhD2E,GAAqB,iBAA4B,CACnDC,QAAS,GACTjC,MAAO,GACPkC,OAAQ,KAqCGvL,mBAlCf,SAAAE,GAA6G,IAAnFN,EAAmFM,EAAnFN,KAAM+J,EAA6EzJ,EAA7EyJ,OAAQ6B,EAAqEtL,EAArEsL,cAAeC,EAAsDvL,EAAtDuL,kBAAmBC,EAAmCxL,EAAnCwL,cAAevJ,EAAoBjC,EAApBiC,UACrF,OACIrB,EAAAC,EAAAC,cAAA,OAAK4J,MAAO,CAAEtG,QAAS,SACnBxD,EAAAC,EAAAC,cAAC2K,GAAA5K,EAAD,CACIuG,aAAW,cACXlG,QAASqK,EACTb,MAAK1G,OAAAC,EAAA,EAAAD,CAAA,GAAOmH,KAAP,CAA6BpF,YAAa,KAE/CnF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAiBjK,KAAiB,SAAXgI,EAAoBkC,KAASC,SAG5DhL,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CACIgL,OAAQnM,EACRoM,OAAQ,WACCpM,GAAM4L,KAEfZ,MAAO,CAAEvE,SAAU,EAAGL,WAAY,EAAGC,YAAa,GAClD8E,YAAa5I,EAAU,0BACvBkI,MAAOzK,EACPoL,SAAU,SAAAb,GAAE,OAAIuB,EAAcvB,EAAGC,cAAcC,UAEnDvJ,EAAAC,EAAAC,cAAC2K,GAAA5K,EAAD,CACIuG,aAAW,SACXlG,QAASoK,EACTZ,MAAK1G,OAAAC,EAAA,EAAAD,CAAA,GAAOmH,KAAP,CAA6BrF,WAAY,IAC9CgD,UAAW,GAEXlI,EAAAC,EAAAC,cAACiL,GAAAlL,EAAD,CAAYmL,SAAS,gBCrC/BtG,GAAgB,CACpBkE,gBACAD,iBAmCatD,mBAzCS,SAAC/D,GAAD,MAAuB,CAC7CkE,QAASyF,GAAqB3J,EAAMmE,QA0CpCf,GAFaW,CA9Bf,SAAArG,GAAoE,IAA9CwG,EAA8CxG,EAA9CwG,QAASoD,EAAqC5J,EAArC4J,aAAcD,EAAuB3J,EAAvB2J,aAC3C,OACEc,EAAA,cAACyB,GAAArL,EAAD,KACG2F,EAAQnG,IAAI,SAAA8L,GAAM,OACjB1B,EAAA,cAAC2B,GAAAvL,EAAD,CAAUG,IAAKmL,EAAO3E,IACpBiD,EAAA,cAAC1J,EAAA,EAAD,KACE0J,EAAA,cAAC4B,GAAD,CACE3M,KAAMyM,EAAOzM,KACb+J,OAAQ0C,EAAO1C,OACf6B,cAAe,kBAAM1B,EAAauC,EAAO3E,KACzCgE,cAAe,SAAA9L,GAAI,OACjBiK,EAAa,IAAIqB,GAAWmB,EAAO3E,GAAI9H,EAAMyM,EAAO1C,UAEtD8B,kBAAmB,kBACjB5B,EACE,IAAIqB,GACFmB,EAAO3E,GACP2E,EAAOzM,KACW,WAAlByM,EAAO1C,OAAsB,OAAS,uECDpD/D,GAAgB,CAClBmE,uBACAC,2BA2FWjK,mBACXwG,YAnGoB,SAAC/D,GAAD,MAAuB,CAC3CkE,QAASlE,EAAMmE,KAAKD,QACpB8F,aAAchK,EAAMmE,KAAK6F,eAmGrB5G,IAEJ9B,qBArHW,SAACC,GAAD,OACXC,uBAAa,CACTyI,eAAgB,CACZC,aAAc,oBACdC,cAAe,GAEnBC,kBAAkB1I,OAAA6B,EAAA,EAAA7B,CAAA,CACdmF,MAAO,KACNtF,EAAMmC,YAAY2G,KAAK,MAAQ,CAC5BxD,MAAO,aA6GnBrJ,IANWD,CAnFf,SAAAG,GAMU,IALN8C,EAKM9C,EALN8C,QACA0D,EAIMxG,EAJNwG,QACA8F,EAGMtM,EAHNsM,aACAzC,EAEM7J,EAFN6J,oBACAC,EACM9J,EADN8J,uBAEA,OACIlJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,aAChB5D,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,yCAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,qDAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6L,WAAS,GACVpG,EACIK,OAAO,SAAAsF,GAAM,OAAyD,IAArDG,EAAaO,UAAU,SAAApM,GAAC,OAAIA,EAAEqM,KAAOX,EAAO3E,OAC7DnH,IAAI,SAAA8L,GACD,IAAMY,EAAaT,EAAa9L,KAAK,SAAAC,GAAC,OAAIA,EAAEuM,KAAOb,EAAO3E,KACpDyF,OAAkC9M,IAAf4M,EAA2B,GAAKA,EAAWD,GACpE,OACIlM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACImM,MAAI,EACJN,WAAS,EACTvI,WAAW,WACXd,UAAWT,EAAQyJ,eACnBvL,IAAKmL,EAAO3E,IAEZ5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClBxM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,aAAa2H,EAAOzM,OAE5CkB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClBxM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAawC,UAAWT,EAAQ4J,mBAC5B9L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsM,QAAQ,oBAChBzM,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,kDAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoJ,MAAO8C,EACPnC,SAAU,SAAAb,GACN,IAAME,EAAQF,EAAGqD,OAAOnD,MACV,KAAVA,EACAL,EAAuBqC,EAAO3E,IAE9BqC,EAAoB,CAChBmD,GAAIb,EAAO3E,GACXsF,GAAI3C,KAIhBoD,MAAO3M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyG,GAAG,sBAEjB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUoJ,MAAM,IACZvJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,+CAGrBhB,EACIK,OACG,SAAApG,GAAC,OACGA,EAAE+G,KAAO2E,EAAO3E,KAKT,IAJP8E,EAAaO,UACT,SAAAW,GAAC,OACIA,EAAER,KAAOvM,EAAE+G,IAAMgG,EAAEV,KAAOrM,EAAE+G,KAC7BgG,EAAER,KAAOb,EAAO3E,OAG/BnH,IAAI,SAAAI,GAAC,OACFG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,IAAKP,EAAE+G,GAAI2C,MAAO1J,EAAE+G,IACzB/G,EAAEf,kBClG3D,SAAS+N,GAAW5K,GAChB,OAAOjC,EAAAC,EAAAC,cAACC,EAAA,EAADiD,OAAA0J,OAAA,CAAOlF,UAAU,MAAS3F,IA6DtBhD,mBACX8N,KAAiB,CAAEC,WAAY,OAC/BhK,qBA5DW,SAACC,GAAD,OACXC,uBAAa,CACTqE,OAAQ,CACJjB,SAAU,YAEd2G,KAAM,CACFA,KAAM,GAEVC,QAAS,CACL3H,SAAU,EACV4H,QAA8B,EAArBlK,EAAMS,QAAQC,MAE3ByJ,YAAa,CACT3C,OAAQ,QAEZ4C,gBAAiB,CACb5C,OAAQ,aA6ChBvL,IACAC,IAJWF,CA/Bf,SAAAG,GAA2E,IAAvCkO,EAAuClO,EAAvCkO,WAAYpL,EAA2B9C,EAA3B8C,QAAS5C,EAAkBF,EAAlBE,QACrD,OACIU,EAAAC,EAAAC,cAACqN,GAAAtN,EAAD,CACIqN,WAAYA,EACZzF,MAAM,EACNC,QAAS,kBAAMxI,EAAQkO,UACvBC,oBAAqBZ,GACrBa,WAAW,EACXC,SAAS,KACTzL,QAAS,CACL0L,iBAAkB1L,EAAQkL,YAC1BS,gBAAiB3L,EAAQmL,kBAG7BrN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQwC,UAAWT,EAAQqF,QACvBvH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,KAAK2C,MAAM,UAAU5D,UAAWT,EAAQ+K,MACxDjN,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,6BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoG,MAAM,UAAUjG,QAAS,kBAAMhB,EAAQkO,WAC3CxN,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,aAI1B5G,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQgL,SACpBlN,EAAAC,EAAAC,cAAC4N,GAAD,UC7BD7O,mBACX+D,qBAxCW,SAACC,GAAD,OACXC,uBAAa,CACT6K,aAAc,CACVvK,QAAS,OACTwK,cAAe,SACfvD,OAAQ,OACRkD,SAAU,KAEdM,aAAc,CACVC,WAAiC,EAArBjL,EAAMS,QAAQC,KAC1BJ,YAAkC,EAArBN,EAAMS,QAAQC,KAC3BwK,aAAmC,EAArBlL,EAAMS,QAAQC,MAEhCyK,cAAe,CACX7I,SAAU,EACVkF,OAAQ,EACR4D,UAAW,YAyBnBlP,KAFWF,CAjBf,SAAAG,GAA2C,IAAlB8C,EAAkB9C,EAAlB8C,QACrB,OACIlC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwC,UAAWT,EAAQ6L,cACrB/N,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQ+L,cACpBjO,EAAAC,EAAAC,cAACoO,GAAD,OAEJtO,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQkM,eACpBpO,EAAAC,EAAAC,cAACqO,GAAD,QAIRvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAO1O,KAAK,qBAAqB2O,UAAWC,QCrC3CC,GAAYxK,+BAAqB,cAAc1E,IACxD,SAACmP,GAAD,MAA2C,CACvChG,QAAS,CACLgG,MACAxI,WAAW,EACXyI,aAAc,KACd3I,MAAO,KACP4I,OAAQ,GACRC,KAAM,OAILC,GAAe7K,+BAAqB,gBAArBA,GAEf8K,GAAkB3K,4BAC3B,sBACA,sBACA,sBAH2BA,GAMlB4K,GAAkB/K,+BAAqB,oBAArBA,GAElBgL,GAA2BhL,+BAAqB,8BAArBA,GAI3BiL,GAAyBjL,+BAAqB,4BAArBA,GAEzBkL,GAAiBlL,+BAAqB,mBAArBA,GAEjBmL,GAAenL,+BAAqB,iBAArBA,GCjCfoL,GAAa,SAAC7N,GAAD,OAA0BA,EAAMgE,SCWpDZ,GAAgB,CAClB6J,aACAa,WAAYP,GAAgBQ,SAS1BC,8MACOhO,MAAQ,CAAEkN,IAAK,MAExBe,gBAAkB,SAACtG,GACfxH,EAAKC,SAAS,CAAE8M,IAAKvF,EAAGC,cAAcC,WAG1CC,eAAiB,YACR3H,EAAKH,MAAMkN,KAAO/M,EAAKI,MAAMyD,QAAQuG,UAAU,SAAApM,GAAC,OAAIA,EAAE+O,MAAQ/M,EAAKH,MAAMkN,OAAQ,IAItF/M,EAAKI,MAAM0M,UAAU9M,EAAKH,MAAMkN,KAChC/M,EAAKI,MAAMuN,WAAW3N,EAAKH,MAAMkN,KACjC/M,EAAKC,SAAS,CAAE8M,IAAK,SAGzBlF,kBAAoB,SAACC,GACH,UAAVA,EAAEvJ,MACFuJ,EAAEC,iBAEE/H,EAAKH,MAAMkN,KACX/M,EAAK2H,2FAKR,IAAAnC,EAAArF,KACG4M,EAAQ5M,KAAKN,MAAbkN,IACAvN,EAAcW,KAAKC,MAAnBZ,UACFuO,EAAe5N,KAAKC,MAAMyD,QAAQuG,UAAU,SAAApM,GAAC,OAAIA,EAAE+O,MAAQvH,EAAK3F,MAAMkN,OAAQ,EAEpF,OACI/E,EAAA,sBAAMzB,UAAWpG,KAAK0H,mBAClBG,EAAA,qBAAKC,MAAO,CAAEtG,QAAS,SACnBqG,EAAA,cAACE,GAAA9J,EAAD,CACI6J,MAAO,CAAEvE,SAAU,GACnByE,KAAK,OACLT,MAAOqF,EACP3E,YAAa5I,EAAU,8BACvB4J,MAAO2E,EACP1F,SAAUlI,KAAK2N,kBAEnB9F,EAAA,cAACM,GAAAlK,EAAD,CACI6J,MAAO,CAAE5E,WAAY,GACrB8B,UAAW4H,GAAOgB,EAClBtP,QAAS0B,KAAKwH,gBAEdK,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,kBAhDV9D,aAwDb2C,eAvES,SAAC/D,GAAD,MAAuB,CAC3CgE,QAAS2F,GAAqB3J,EAAMiE,YAwEpCb,GAFWW,CAGbvG,YAAawQ,cC/Bf,SAASG,KACL,OAAO7P,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAGX,SAAS2P,GAAT1Q,GAAoF,IAAvDyP,EAAuDzP,EAAvDyP,aAAckB,EAAyC3Q,EAAzC2Q,cACvC,OACI/P,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYoG,MAAM,YAAY3C,QAAQ,QAAQ6K,UAAU,SAAxD,GAAA1O,OACQ8O,GACJ7O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI2J,MAAO,CAAE5E,WAAY,IACrBuJ,UAAU,SACV7K,QAAQ,QACRtD,QAASyP,GAJb,WAYZ,SAASC,GAATC,GAA+D,IAAvCnB,EAAuCmB,EAAvCnB,OAAQoB,EAA+BD,EAA/BC,eAC5B,OACIlQ,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,CACIC,IAAK,EACLC,IAAK,EACLC,KAAM,IACNxG,MAAO,CAAEU,OAAQ,GAAI2C,QAAS,WAC9B5D,MAAOuF,EACP5E,SAAU,SAACqG,EAAGC,GAAJ,OAAUN,EAAeM,MA0DhCxN,4BA9GA,SAACC,GAAD,OACXC,uBAAa,CACTuN,KAAM,CACFC,gBAAiBzN,EAAM0N,QAAQC,WAAW5I,MAC1CyC,OAAQ,QAEZoG,MAAO,CACHC,aAAc,UACdC,UAAW,YACXC,SAAU,UAEdtD,UAAW,CACPnF,MAAO,WAkGe,CAAEE,WAAW,GAAhCzF,CArDf,SAAAiO,GAUU,IATNrC,EASMqC,EATNrC,IACA1M,EAQM+O,EARN/O,QACAkE,EAOM6K,EAPN7K,UACAyI,EAMMoC,EANNpC,aACAqC,EAKMD,EALNC,WACApC,EAIMmC,EAJNnC,OACApE,EAGMuG,EAHNvG,cACAqF,EAEMkB,EAFNlB,cACAG,EACMe,EADNf,eAEA,OACIlQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIgR,aAAcD,EACd3K,MAAM,UACN6J,IAAK,KACLzN,UAAWT,EAAQwL,UACnB0D,UAAU,GAEVpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwC,UAAWT,EAAQwL,WACrB1N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIkR,OACIrR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACImR,QAAoB,IAAXxC,EACThF,MAAO,CAAEU,QAAS,IAClBN,SAAU,SAACqG,EAAGgB,GAAJ,OAAerB,EAAJqB,EAAmB,GAAsB,MAGtEC,qBAAsB,CAAE7O,UAAWT,EAAQ2O,OAC3CA,MAAOjC,EACP6C,OACIzR,EAAAC,EAAAC,cAAC2K,GAAA5K,EAAD,CAAYK,QAASoK,GACjB1K,EAAAC,EAAAC,cAACiL,GAAAlL,EAAD,OAGRyR,UACItL,EACIpG,EAAAC,EAAAC,cAAC2P,GAAD,MACAhB,EACA7O,EAAAC,EAAAC,cAAC4P,GAAD,CACIjB,aAAcA,EACdkB,cAAeA,IAGnB/P,EAAAC,EAAAC,cAAC8P,GAAD,CAAclB,OAAQA,EAAQoB,eAAgBA,UCnHpEpL,GAAgB,CAClB0K,WAAYP,GAAgBQ,QAC5BT,gBACAE,oBA8BWzJ,mBArCS,SAAC/D,GAAD,MAAuB,CAC3CgE,QAAS2F,GAAqB3J,EAAMiE,YAsCpCb,GAFWW,CAzBf,SAAArG,GAAoF,IAA7DsG,EAA6DtG,EAA7DsG,QAASsJ,EAAoD5P,EAApD4P,aAAcQ,EAAsCpQ,EAAtCoQ,WAAYN,EAA0B9P,EAA1B8P,gBACtD,OACIrF,EAAA,cAACyB,GAAArL,EAAD,KACKyF,EAAQjG,IAAI,SAAAkS,GAAM,OACf9H,EAAA,cAAC2B,GAAAvL,EAAD,CAAUG,IAAKuR,EAAO/C,KAClB/E,EAAA,cAAC1J,EAAA,EAAD,KACI0J,EAAA,cAAC+H,GAAD,CACIhD,IAAK+C,EAAO/C,IACZxI,UAAWuL,EAAOvL,UAClByI,aAAc8C,EAAO9C,aACrBqC,WAAaS,EAAOzL,OAASyL,EAAOzL,MAAMjC,QAAW,EACrD6K,OAAQ6C,EAAO7C,OACfoB,eAAgB,SAAApB,GAAM,OAClBI,EAAgB,CAAE3F,MAAOoI,EAAO/C,IAAKE,YAEzCpE,cAAe,kBAAMsE,EAAa2C,EAAO/C,MACzCmB,cAAe,kBAAMP,EAAWmC,EAAO/C,eCCpD5L,4BAlCA,SAACC,GAAD,OACXC,uBAAa,CACT6K,aAAc,CACVvK,QAAS,OACTwK,cAAe,SACfvD,OAAQ,QAEZ2D,cAAe,CACX7I,SAAU,EACVkF,OAAQ,EACR4D,UAAW,QAEfJ,aAAc,CACVC,WAAiC,EAArBjL,EAAMS,QAAQC,KAC1BJ,YAAkC,EAArBN,EAAMS,QAAQC,KAC3BwK,aAAmC,EAArBlL,EAAMS,QAAQC,SAmBzBX,CAbf,SAAA5D,GAA8C,IAAlB8C,EAAkB9C,EAAlB8C,QACxB,OACIlC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwC,UAAWT,EAAQ6L,cACrB/N,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQ+L,cACpBjO,EAAAC,EAAAC,cAAC2R,GAAD,OAEJ7R,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQkM,eACpBpO,EAAAC,EAAAC,cAAC4R,GAAD,UCeD9O,4BAnCA,kBACXE,uBAAa,CACTuN,KAAM,CACFlI,MAAO,WAgCJvF,CAAmB9D,YA1BlC,SAAAE,GAA0F,IAAhEC,EAAgED,EAAhEC,eAAgB0S,EAAgD3S,EAAhD2S,UAAWC,EAAqC5S,EAArC4S,kBAAmB9P,EAAkB9C,EAAlB8C,QACpE,OACI2H,EAAA,cAAC1J,EAAA,EAAD,CAAM6L,WAAS,GACXnC,EAAA,cAAC1J,EAAA,EAAD,CAAMmM,MAAI,EAACC,GAAI,GAAI0F,GAAI,GAAIC,GAAI,EAAG1F,GAAI,GAClC3C,EAAA,cAAC1J,EAAA,EAAD,CAAawC,UAAWT,EAAQuO,MAC5B5G,EAAA,cAAC1J,EAAA,EAAD,CAAYsM,QAAQ,kBAChB5C,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,qCAElBiD,EAAA,cAAC1J,EAAA,EAAD,CACIgS,WAAY,CACRvL,GAAI,kBAERkD,MAAO,CAAEvB,MAAO,QAChBgB,WAA0BhK,IAAnBF,EAA+B,KAAOA,EAAeG,KAC5D0K,SAAU,SAAAb,GAAE,OAAI2I,EAAkB3I,EAAGqD,OAAOnD,SAE3CwI,EAAUtS,IAAI,SAAAT,GAAI,OACf6K,EAAA,cAAC1J,EAAA,EAAD,CAAUC,IAAKpB,EAAKQ,KAAM+J,MAAOvK,EAAKQ,MAAOR,EAAKF,eC3BxEgG,GAAgB,CAClBqK,6BAwBWlQ,mBACXwG,YA9BoB,SAAC/D,GAAD,MAAuB,CAC3C0Q,sBAAuB1Q,EAAMiE,SAASyM,wBA+BlCtN,IAEJ5F,IALWD,CAnBf,SAAAG,GAAoF,IAA1DgT,EAA0DhT,EAA1DgT,sBAAuBjD,EAAmC/P,EAAnC+P,yBAC7C,OACItF,EAAA,yBACIA,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,MAChBiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,2CAElBiD,EAAA,cAAC1J,EAAA,EAAD,CACIkS,QACIxI,EAAA,cAAC1J,EAAA,EAAD,CACImR,QAASc,EACTlI,SAAU,SAACqG,EAAG+B,GAAJ,OAAUnD,EAAyBmD,MAGrDC,MAAO1I,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,mEC/BxB4L,GAAuB,CAAC,WAAY,YAAa,YAgBjDC,GAA0C,CACnDC,UAAW,GACXC,UAAW,GACXC,eAAgB,GAChBC,iBAAkB,IAClBC,oBAAqB,GACrBC,WAAY,GACZC,WAAY,IACZC,iBAAkB,GAClBC,eAAgB,GAChBC,UAAW,IAKFC,GAAmC,CAAC,UCnB3CtO,GAAgB,CAClBsK,2BA+BW3J,mBApCS,SAAC/D,GAAD,MAAuB,CAC3C2R,SAAU3R,EAAMiE,SAAS2N,sBAqCzBxO,GAFWW,CAGbvG,YA7BF,SAAAE,GAAqE,IAA3CiU,EAA2CjU,EAA3CiU,SAAUjE,EAAiChQ,EAAjCgQ,uBAChC,OACIvF,EAAA,yBACIA,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,MAChBiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,gDAElBiD,EAAA,cAAC1J,EAAA,EAAD,CAAYoT,cAAY,GACpB1J,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,4DAElBiD,EAAA,cAAC1J,EAAA,EAAD,KACI0J,EAAA,cAAC1J,EAAA,EAAD,CAAQ2J,MAAO,CAACvB,MAAO,IAAKiL,UAAW,IACnCjK,MAAO8J,EACPnJ,SAAU,SAAAb,GAAE,OAAI+F,EAAuB/F,EAAGqD,OAAOnD,QACjDoD,MAAO9C,EAAA,cAAC1J,EAAA,EAAD,OAENqS,GAAqB/S,IAAI,SAAAI,GAAC,OACvBgK,EAAA,cAAC1J,EAAA,EAAD,CAAUC,IAAKP,EAAG0J,MAAO1J,GACpBA,WCyCd4T,oLAjEF,IAAA1R,EAC6BC,KAAKC,MAA/ByR,EADH3R,EACG2R,MAAOxD,EADVnO,EACUmO,eAEf,OACIrG,EAAA,2BACIA,EAAA,2BACK6J,EAAMjU,IAAI,SAAAI,GAAC,OACRgK,EAAA,oBAAIzJ,IAAKP,EAAE0J,OACPM,EAAA,wBACIA,EAAA,cAAC1J,EAAA,EAAD,CACI2J,MAAO,CACH6J,QAAsB,IAAb9T,EAAEiP,OAAe,GAAM,IAGnCjP,EAAE0J,QAGXM,EAAA,oBAAIC,MAAO,CAACvB,MAAO,SACfsB,EAAA,cAACsG,GAAA,EAAD,CACIC,IAAK,EACLC,IAAK,EACLvG,MAAO,CAAEqD,QAAS,kBAAmB5E,MAAO,QAC5C+H,KAAM,IACN/G,MAAO1J,EAAEiP,OACT5E,SAAU,SAACqG,EAAGqD,GAAJ,OACN1D,EAAe,CAAE3G,MAAO1J,EAAE0J,MAAOuF,OAAQ8E,oBA1BnD9Q,aCVvB,SAAS+Q,GACZC,EACAC,EACArH,GAUA,IAPA,IAAMsH,EAAmBF,EAAOrU,IAAI,SAAA8J,GAAK,MAAK,CAAEA,QAAO0K,QAASF,EAAcxK,MACxE2K,EAAQF,EAAiBG,OAAO,SAACtU,EAAG+M,GAAJ,OAAU/M,EAAI+M,EAAEqH,SAAS,GAEzDG,EAAS,IAAIC,MACfC,EAAM,EACNC,EAAe,EAEVC,EAAI,EAAGA,EAAIR,EAAiB/P,OAAQuQ,IAAK,KAAAC,EACrBT,EAAiBQ,GAAnCjL,EADuCkL,EACvClL,MAEP+K,GAH8CG,EAChCR,QAEGC,EAAQxH,EACzB,IAAMgI,EAAaC,KAAKC,MAAMN,GAE9BF,EAAO7T,KAAK,CAAEgJ,QAAOsL,KAAMH,EAAaH,IACxCA,EAAeG,EAGnB,OAAON,ECbX,IAIMtP,GAAgB,CAClBuK,mBA+BW5J,mBApCS,SAAC/D,GAAD,MAAuB,CAC3CoT,OAAQpT,EAAMiE,SAASmP,SAqCvBhQ,GAFWW,CAGbvG,YA7BF,SAAAE,GAA6D,IAAjC0V,EAAiC1V,EAAjC0V,OAAQzF,EAAyBjQ,EAAzBiQ,eAE1B0F,EAAmBlB,GAAqBiB,EAAQ,SAAAjV,GAAC,OAAIA,EAAEiP,QAD1C,IAGnB,OACIjF,EAAA,yBACIA,EAAA,cAAC1J,EAAA,EAAD,CAAYoT,cAAY,EAAC3P,QAAQ,MAC7BiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,mCAElBiD,EAAA,cAACmL,GAAD,CAAiBtB,MAAOoB,EAAQ5E,eAAgB,SAAArQ,GAAC,OAAIwP,EAAexP,MACpEgK,EAAA,cAAC1J,EAAA,EAAD,KACI0J,EAAA,cAAClD,EAAA,EAAD,CACIC,GAAG,0CACHqO,KAAM,CAAEC,MAZL,MAcNH,EAAiBtV,IAAI,SAACI,EAAG2U,GAAJ,OAClB3K,EAAA,cAACA,EAAA,SAAD,CAAgBzJ,IAAKP,EAAE0J,MAAMA,OACzBM,EAAA,mBAAGC,MAAO,CAACqL,WAAY,WAAYtV,EAAE0J,MAAMA,OAD/C,KAC4D1J,EAAEgV,KACzDL,EAAIO,EAAiB9Q,OAAS,EAAI,KAAO,iCCxB5Da,GAAgB,CAClBwK,iBA0BW7J,mBAhCS,SAAC/D,GAAD,MAAuB,CAC3CqN,KAAMrN,EAAMiE,SAASoJ,KACrBqG,MAAO1T,EAAMiE,SAASD,UAgCtBZ,GAFWW,CAGbvG,YAxBF,SAAAE,GAA8D,IAApC2P,EAAoC3P,EAApC2P,KAAMqG,EAA8BhW,EAA9BgW,MAAO9F,EAAuBlQ,EAAvBkQ,aAE7B+F,EADU9E,KAAE+E,KAAKF,EAAMG,QAAQ,SAAA1V,GAAC,OAAIA,EAAEkP,QACpBtP,IAAI,SAAAI,GAAC,OAAIkP,EAAKnP,KAAK,SAAAgN,GAAC,OAAIA,EAAErD,QAAU1J,KAAM,CAAE0J,MAAO1J,EAAGiP,OAAQ,MAEtF,OACIjF,EAAA,yBACIA,EAAA,cAAC1J,EAAA,EAAD,CAAYoT,cAAY,EAAC3P,QAAQ,MAC7BiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,iCAElBiD,EAAA,cAACmL,GAAD,CAAiBtB,MAAO2B,EAASnF,eAAgB,SAAArQ,GAAC,OAAIyP,EAAazP,MAC/C,IAAnBwV,EAAQpR,OACL4F,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,QAAQ2C,MAAM,iBAC9BsD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,2CAGlBrH,MCDDiW,oLAxBP,OACI3L,EAAA,cAAC1J,EAAA,EAAD,CAAM2J,MAAO,CAAE6D,SAAU,MACrB9D,EAAA,cAAC1J,EAAA,EAAD,CAAM6L,WAAS,EAACtI,QAAS,GAAIkE,UAAU,UACnCiC,EAAA,cAAC1J,EAAA,EAAD,CAAMmM,MAAI,EAACxC,MAAO,CAAE2L,aAAc,KAC9B5L,EAAA,cAAC6L,GAAD,OAEJ7L,EAAA,cAAC1J,EAAA,EAAD,CAAMmM,MAAI,GACNzC,EAAA,cAAC8L,GAAD,OAEJ9L,EAAA,cAAC1J,EAAA,EAAD,CAAMmM,MAAI,GACNzC,EAAA,cAAC+L,GAAD,OAEJ/L,EAAA,cAAC1J,EAAA,EAAD,CAAMmM,MAAI,GACNzC,EAAA,cAACgM,GAAD,OAEJhM,EAAA,cAAC1J,EAAA,EAAD,CAAMmM,MAAI,GACNzC,EAAA,cAACiM,GAAD,gBAlBIhT,aCwBbE,4BA5BA,SAACC,GAAD,OACXC,uBAAa,CACT6K,aAAc,CACVvK,QAAS,OACTwK,cAAe,SACfvD,OAAQ,QAEZ2D,cAAe,CACX7I,SAAU,EACVkF,OAAQ,EACR4D,UAAW,OACX0H,UAAW,SACX5I,QAA8B,EAArBlK,EAAMS,QAAQC,SAgBpBX,CAVf,SAAA5D,GAAoD,IAAlB8C,EAAkB9C,EAAlB8C,QAC9B,OACIlC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwC,UAAWT,EAAQ6L,cACrB/N,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQkM,cAAetE,MAAO,CAAEiM,UAAW,WACvD/V,EAAAC,EAAAC,cAAC8V,GAAD,gDCvBT,SAASC,GAAaC,GACzB,MAAO,CACHC,aAAcD,EAAS7W,eAAeG,KACtC6B,UAAW,SAAAxB,GAAC,OAAIqW,EAAS7U,UAAUxB,mBCapC,SAASuW,GAAiBnT,GAA6B,IAAA7D,EAC1D,OAAAA,EAAA,CACIiX,UAAW,UADfjT,OAAA6B,EAAA,EAAA7B,CAAAhE,EAEK6D,EAAMmC,YAAY2G,KAAK,MAAQ,CAC5BxD,MAAO,OACPrD,WAAY,GACZC,YAAa,GACbiG,SAAU,KANlBhI,OAAA6B,EAAA,EAAA7B,CAAAhE,EAQK6D,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BkD,MAAO,QATfnF,OAAA6B,EAAA,EAAA7B,CAAAhE,EAWK6D,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BkD,MAAO,QAZfnJ,EAiBG,SAASkX,GAAkBrT,GAC9B,OAAOG,OAAA6B,EAAA,EAAA7B,CAAA,CACHmT,WAAY,UACXtT,EAAMmC,YAAY2G,KAAK,MAAQ,CAC5BX,SAAU,SAKf,SAASoL,GAAgBvT,GAC5B,OAAOG,OAAA6B,EAAA,EAAA7B,CAAA,CACHmD,MAAO,SACNtD,EAAMmC,YAAY2G,KAAK,MAAQ,CAC5BX,SAAU,SA6Bf,IAAMqL,GAAyC,CAClDC,UAAW,CACPC,EAAG,CACClI,UA3BZ,SAAAmI,GAAiD,IAA3BC,EAA2BD,EAA3BC,SAAa5U,EAAcmB,OAAA0T,GAAA,EAAA1T,CAAAwT,EAAA,cAC7C,OACI/M,EAAA,cAAC1J,EAAA,EAADiD,OAAA0J,OAAA,GAAgB7K,EAAhB,CAAuB6H,MAAO,CAAEiN,iBAAkB,EAAGC,eAAgB,EAAGzQ,MAAO,QAAS6E,SAAU,YAC7FyL,IAyBD5U,MAAO,IAEXgV,GAAI,CACAxI,UAvBZ,SAAAyI,GAA2C,IAA3BL,EAA2BK,EAA3BL,SAAa5U,EAAcmB,OAAA0T,GAAA,EAAA1T,CAAA8T,EAAA,cACvC,OACIrN,EAAA,mBAAAzG,OAAA0J,OAAA,GAAQ7K,EAAR,CAAe6H,MAAO,CAAEiN,iBAAkB,EAAGC,eAAgB,KACxDH,IAqBD5U,MAAO,IAEXkV,GAAI,CACA1I,UAnBZ,SAAA2I,GAA2C,IAA3BP,EAA2BO,EAA3BP,SAAa5U,EAAcmB,OAAA0T,GAAA,EAAA1T,CAAAgU,EAAA,cACvC,OACIvN,EAAA,mBAAAzG,OAAA0J,OAAA,GAAQ7K,EAAR,CAAe6H,MAAO,CAAEiN,iBAAkB,EAAGC,eAAgB,KACxDH,IAiBD5U,MAAO,yBC7EbsE,GAAQ,UACR8Q,GAAgB,UAMhBvS,GAAgB,CAClBwS,UAAWvS,GAA0B0K,SAiGzC,IAAM1M,GAAY9D,YACdwG,YAvGoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAwGdzS,IAEJ9B,qBAnGW,SAACC,GAAD,OACXC,uBAAa,CACTuN,KAAKrN,OAAAC,EAAA,EAAAD,CAAA,GDrBF,CACHsN,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0BCY3B,CAEAhH,gBAAiBnK,GACjBD,SAAU,aAEdqR,aAAc,CACVlN,OAAQ,OACRiG,gBAAiB2G,GACjB/Q,SAAU,WACVsR,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,OAAQ,GAEZ7K,QAAQ9J,OAAAC,EAAA,EAAAD,CAAA,GACDgT,GAAiBnT,GADjB,CAEH8U,OAAQ,KAEZC,OAAQ,CACJvC,aAAc,QA+EtBvW,IANcD,CAhElB,SAA+BgD,GAAc,IACjCC,EAAyCD,EAAzCC,QAASoV,EAAgCrV,EAAhCqV,UAAW5V,EAAqBO,EAArBP,MAAOL,EAAcY,EAAdZ,UACnC,GAAc,OAAVK,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAHM,IAMjCwH,EAAqBvW,EAArBuW,iBACFC,EAAYvD,KAAKwD,KAAKF,EAAmBG,KAAKC,OAE9CC,EAAYC,aAAUC,OAAV,eAAApZ,EAAAgE,OAAAqV,GAAA,EAAArV,CAAAsV,GAAAzY,EAAA0Y,KAAiB,SAAAC,EAAOC,GAAP,OAAAH,GAAAzY,EAAA6Y,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EACzBA,EAAK,CACPI,KAAM,CAAE1Q,MAAO,MACfA,MAAO,OACP2Q,OAAQ,CACJC,SAAUjB,KALa,cAAAa,EAAAF,KAAA,EAQzBA,EAAK,CACPI,KAAM,CAAEvI,gBAAiB2G,IACzB3G,gBAAiBnK,GACjB2S,OAAQ,CAAEC,SAAU,OAXO,cAAAJ,EAAAF,KAAA,EAazBA,EAAK,CACPI,KAAM,CAAEvI,gBAAiBnK,IACzBmK,gBAAiB2G,GACjB6B,OAAQ,CAAEC,SAAU,OAhBO,wBAAAJ,EAAAK,SAAAR,MAAjB,gBAAAS,GAAA,OAAAja,EAAAka,MAAAtX,KAAAuX,YAAA,IAoBZC,EAAqBC,aAAU,CACjC9F,QAAS,EACTsF,KAAM,CAAEtF,QAAS,GACjB+F,MAAOxB,IAGX,OACIrO,EAAA,qBACIlH,UAAWT,EAAQuO,KACnBnQ,QAAS,kBACJ,IAAI8X,KAASH,GACdX,EAAUrB,GAAahU,MAG3B4H,EAAA,cAACyO,EAAD,CAAWqB,QAAM,GACZ,SAAC1X,GAAD,OAAgB4H,EAAA,cAAC+P,GAAA,SAASC,IAAV,CAAclX,UAAWT,EAAQyV,aAAc7N,MAAO7H,MAE3E4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACpBrD,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,KAAK2C,MAAM,UAAU5D,UAAWT,EAAQ8V,OAAQzE,cAAY,GAC5E1J,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,kBAElBiD,EAAA,cAACiQ,GAAA,EAAD,CACIjD,SAAUxV,EAAU,oBACpB0Y,QAAStD,KAEb5M,EAAA,cAACmQ,GAAA,EAAYH,IAAb,CAAiB/P,MAAO0P,GACpB3P,EAAA,cAAC1J,EAAA,EAAD,CAAY2J,MAAO,CAAEvD,MAAO,QAASiN,UAAW,IAAM5P,QAAQ,MAC1DiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,6BAqBzBqT,GAAb,oBAAAA,IAAA7W,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAiY,GAAAjY,KACIkY,UAAY,eADhBlY,KAEImY,cAAgB,GAFpBnY,KAGI0O,gBAAkBnK,GAHtB,OAAAnD,OAAAgX,EAAA,EAAAhX,CAAA6W,EAAA,EAAA7Z,IAAA,aAAAmJ,MAAA,WAMQ,IAAM8Q,EAAO,IAAIjC,KAGjB,OAFAiC,EAAKC,WAAWD,EAAKE,aAAe,GAE7B,CACHvY,KAAKwC,cAAc,CACfyT,iBAAkBoC,OAXlC,CAAAja,IAAA,qBAAAmJ,MAAA,WAiBQ,MAAM,IAAIiR,MAAM,6BAjBxB,CAAApa,IAAA,gBAAAmJ,MAAA,SAoBkB7H,GACV,OAAOqD,GAAsB,CAAErD,QAAO+Y,SAAU,SArBxD,CAAAra,IAAA,SAAAmJ,MAAA,WAyBQ,OAAOM,EAAA,cAAC9G,GAAD,UAzBfkX,EAAA,iIClIM7Z,GAAW,CACbsa,kBAAmB,EACnBC,kBAAmB,EACnBC,kBAAmB,EACnBC,eAAgB,EAChBC,iBAAkB,EAClBC,gBAAiB,GAGfC,GAAS,CACX,0BACA,0BACA,0BACA,uBACA,yBACA,yBAGEC,GAAM,CACR,uBACA,uBACA,uBACA,sBACA,sBACA,sBAGEC,GAAK,CACP,sBACA,sBACA,sBACA,mBACA,qBACA,qBAIEC,GACgB,qBAAXC,QAAqD,qBAApBA,OAAOD,SAA2BC,OAAOD,SAAW,GAE1FE,GACD,sBAAuBF,IAAY/X,OAAOkY,KAAKlb,KAC/C4a,GAAO,KAAMG,IAAYH,IACzBC,GAAI,KAAME,IAAYF,IACtBC,GAAG,KAAMC,IAAYD,IACtB,GAEiBK,kHACQC,GACrB,OAAOA,EAAQH,GAAOjb,GAAIwa,wEAEGY,GAC7B,OAAOA,EAAQH,GAAOjb,GAAIwa,6DAKN5Q,EAAWyR,EAAc1B,GAC7C,OAAOoB,GAASO,iBAAiBL,GAAOjb,GAAI4J,IAAQyR,EAAS1B,+CAEtC/P,EAAWyR,EAAc1B,GAChD,OAAOoB,GAASQ,oBAAoBN,GAAOjb,GAAI4J,IAAQyR,EAAS1B,0CANhE,OAAOoB,GAASE,GAAOjb,GAAIya,iBAAiBe,KAAKT,8CASjD,OAAOU,QAAQV,GAASE,GAAOjb,GAAIsa,+DAGnC,OAAOS,GAASE,GAAOjb,GAAIua,+DAG3B,OAAOQ,GAAS,KAAApb,OAAKsb,GAAOjb,GAAI0a,mBAAoBgB,6BAE1BL,GAC1BN,GAAS,KAAApb,OAAKsb,GAAOjb,GAAI0a,mBAAoBgB,eAAiBL,4CAG9D,OAAON,GAAS,KAAApb,OAAKsb,GAAOjb,GAAI2a,kBAAmBe,6BAE1BL,GACzBN,GAAS,KAAApb,OAAKsb,GAAOjb,GAAI2a,kBAAmBe,eAAiBL,WCzD/DM,GAAS7Y,uBAAa,CACxB7C,OAAQ,CACJkG,MAAO,WAuBTyV,8MACOta,MAAe,CACpBua,SAAU,KACVC,cAAc,KAalBC,oBAAsB,SAACC,GACnBva,EAAKC,SAAS,CAAEma,SAAUG,EAAM9S,mBAGpC+S,YAAc,WACVxa,EAAKC,SAAS,CAAEma,SAAU,UAG9BK,eAAiB,SAACxc,GACd+B,EAAKwa,cACLxa,EAAKI,MAAM3C,QAAQiB,KAAnB,cAAAR,OAAsCD,OAG1Cyc,iBAAmB,WACU1a,EAAKH,MAAtBwa,aAEJX,GAAWV,iBAEXU,GAAWX,kBAAkBQ,OAAOD,SAASqB,iBAGjD3a,EAAKwa,iBAGTI,WAAa,WACT5a,EAAKwa,cACLxa,EAAKI,MAAM3C,QAAQiB,KAAK,6FApCR,IAAA8G,EAAArF,KAChBuZ,GAAWmB,mBAAqB,WAC5BrV,EAAKvF,SAAS,SAAAJ,GAAK,OAAA0B,OAAAC,EAAA,EAAAD,CAAA,GAAU1B,EAAV,CAAiBwa,aAAcX,GAAWZ,sEAKjEY,GAAWmB,mBAAqB,sCAgC3B,IAAAC,EAAA3a,KAAAD,EAC6BC,KAAKC,MAA/BC,EADHH,EACGG,QAAS0a,EADZ7a,EACY6a,aADZC,EAE8B7a,KAAKN,MAAhCua,EAFHY,EAEGZ,SAAUC,EAFbW,EAEaX,aACZva,EAAsB,OAAbsa,EAEf,OACIjc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoG,MAAM,YACN5D,UAAWT,EAAQ7B,OACnBC,QAAS0B,KAAKma,qBAEdnc,EAAAC,EAAAC,cAAC4c,GAAA7c,EAAD,OAEJD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI8b,SAAUA,EACVpU,KAAMlG,EACNmG,QAAS9F,KAAKqa,YACdU,WAAY,CACRjT,MAAO,CACHvB,MAAO,OAIfvI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUG,QAAS,kBAAMqc,EAAKL,eAAe,cACzCtc,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACc,EAAAf,EAAD,OAEJD,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,2BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUG,QAAS,kBAAMqc,EAAKL,eAAe,cACzCtc,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC8c,GAAA/c,EAAD,OAEJD,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,2BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUG,QAAS0B,KAAKqa,YAAarV,SAA2B,OAAjB4V,GAC3C5c,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC+c,GAAAhd,EAAD,OAEJD,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,6BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUG,QAAS0B,KAAKua,kBACpBvc,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACK+b,EAAelc,EAAAC,EAAAC,cAACgd,GAAAjd,EAAD,MAAyBD,EAAAC,EAAAC,cAACid,GAAAld,EAAD,OAE7CD,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAIsV,EAAe,8BAAgC,6BAElElc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUG,QAAS0B,KAAKya,YACpBzc,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkd,GAAAnd,EAAD,OAEJD,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,gCAjGZ7D,aAyGX9D,eACX+D,qBAAW+Y,IACX7c,IACAuG,YAzHoB,SAAC/D,GAAD,MAAuB,CAC3C2b,cAAe3b,EAAMhC,KAAK2d,cAC1BC,eAAgB5b,EAAMhC,KAAK4d,eAC3BV,aAAclb,EAAMhC,KAAKkd,eAGP,IAuHlBzd,IAPWF,CAQb+c,IClJID,GAAS7Y,uBAAa,CACxBqa,QAAS,CACL/J,UAAW,IAEfgK,gBAAiB,CACbxM,SAAU,OACVzI,MAAO,QAEXkV,iBAAkB,CACdC,WAAY,YAsBpB,SAASC,GAAqB1b,GAAc,IAChC2b,EAAqC3b,EAArC2b,eAAgBhY,EAAqB3D,EAArB2D,QAAS1D,EAAYD,EAAZC,QACjC,OACIlC,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQsb,iBACnBI,EAAgBC,WAAW5Z,OAAS,EApBjD,SAAA7E,GAAqE,IAAlCwe,EAAkCxe,EAAlCwe,eAAgBhY,EAAkBxG,EAAlBwG,QAC/C,OACI5F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,+BACb,KACAgX,EAAgBC,WACZpe,IAAI,SAAAI,GAAC,OAAI+F,EAAQhG,KAAK,SAAAgN,GAAC,OAAIA,EAAEhG,KAAO/G,MACpCoG,OAAO,SAAApG,GAAC,OAAS,MAALA,IACZJ,IAAI,SAAAI,GAAC,OAAIA,EAAGf,OACZgf,KAAK,QAU2BC,CAAwB9b,GAAS,KACzE2b,EAAgBI,OAAOve,IAAI,SAACI,EAAG2U,GAC5B,IAAMyJ,EAAapK,GAAqBhU,EAAG,SAAAA,GAAC,OAAIA,EAAEiP,QAAQ,KAC1D,OACI9O,EAAAC,EAAAC,cAAA,SAAOE,IAAKoU,GACRxU,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIyC,UAAWT,EAAQub,kBACnBzd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,kBAAkBqO,KAAM,CAAEiJ,OAAQ1J,EAAI,KADxD,MAIHyJ,EAAWxe,IAAI,SAAAmN,GACZ,IACI4O,EADEjQ,EAAS3F,EAAQhG,KAAK,SAAA+W,GAAC,OAAIA,EAAE/P,KAAOgG,EAAErD,MAAM4U,WAmBlD,OAhBI3C,OADWjc,IAAXgM,EAEIvL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,4BACb,IAHT,IAIMgG,EAAEiI,KAAO,GAJf,MASA7U,EAAAC,EAAAC,cAAA,YACKqL,EAAOzM,KADZ,KACoB8N,EAAEiI,KAAO,GAD7B,MAOJ7U,EAAAC,EAAAC,cAAA,MAAIE,IAAKwM,EAAErD,MAAM4U,SAAUrU,MAAO,CAAEvG,YAAa,KAC7CvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKie,GAAgB5C,EAAS5O,EAAErD,MAAM8U,kBAclF,SAASD,GAAgB5C,EAAsB8C,GAC3C,OAAIA,EACOte,EAAAC,EAAAC,cAAA,SAAIsb,GAGRA,MAmCL+C,oLACO,IAAAxc,EACwCC,KAAKC,MAA1C2b,EADH7b,EACG6b,eAAgB1b,EADnBH,EACmBG,QAASsc,EAD5Bzc,EAC4Byc,QACjC,OACIxe,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,MAChB5D,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,2BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,yBACb,KACY,OAAZ4X,EACGxe,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,qBAGlB5G,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACIC,GAAG,oBACHqO,KAAM,CACFnW,KAAM0f,EAAQC,KAAKzU,KACnBpD,GAAI4X,EAAQC,KAAK7X,GACjB8X,QAA+Bnf,IAA3Bif,EAAQC,KAAKE,UAA0B3e,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,uBAAyB4X,EAAQC,KAAKE,UAC/F/P,IAAK4P,EAAQI,aAvDjD,SAAA3O,GAA6D,IAA/B4O,EAA+B5O,EAA/B4O,MAEpBZ,EAAapK,GAFsC5D,EAAxB6O,cACHzJ,QACkB,SAAAxV,GAAC,OAAIA,EAAEiP,QAAQ,KAE/D,OACI9O,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACK+d,EAAWxe,IAAI,SAAAI,GAAC,OACbG,EAAAC,EAAAC,cAAA,MAAIE,IAAKP,EAAE0J,MAAMA,OACbvJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKie,GACGpe,EAAAC,EAAAC,cAAA,YAAOL,EAAE0J,MAAMA,OACf1J,EAAE0J,MAAMA,QAAUsV,KAI9B7e,EAAAC,EAAAC,cAAA,MAAI4J,MAAO,CAAEvG,YAAa,KACtBvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKie,GACGpe,EAAAC,EAAAC,cAAA,YAAOL,EAAEgV,KAAO,GAAhB,KACAhV,EAAE0J,MAAMA,QAAUsV,UAwCrCE,CAAmB/c,KAAKC,OAEzBjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,KAAKjB,UAAWT,EAAQqb,SACxCvd,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,8BAEE,OAAnBgX,EACG5d,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,yBAItB+W,GAAqB3b,KAAKC,eAzCXc,aAgDpB9D,eACXwG,YArLoB,SAAC/D,GAAD,MAAuB,CAC3Cmd,MAAOnd,EAAMhC,KAAK2d,cAClByB,cAAepd,EAAMhC,KAAKof,cAC1BlB,eAAgBlc,EAAMhC,KAAKke,eAC3BhY,QAASlE,EAAMmE,KAAKD,QACpB4Y,QAAS9c,EAAMhC,KAAKkd,gBAiLpB1d,IACA8D,qBAAW+Y,IAHA9c,CAIbsf,IClLIzZ,GAAgB,CAClBF,gBACAD,uBAGEoX,GACF7Y,uBAAa,CACT8b,gBAAiB,CACbxb,QAAS,OACTC,WAAY,SACZ+T,eAAgB,gBA0CbvY,mBACXwG,YA1DoB,SAAC/D,GAAD,MAAuB,CAC3Cud,iBAAkBvd,EAAMhC,KAAKuf,iBAC7BC,SAAUxd,EAAMhC,KAAKyf,oBA0DjBra,IAEJ5F,IACA8D,qBAAW+Y,IANA9c,CApCf,SAAAG,GAMU,IALN6f,EAKM7f,EALN6f,iBACAC,EAIM9f,EAJN8f,SACAta,EAGMxF,EAHNwF,aACAD,EAEMvF,EAFNuF,mBACAzC,EACM9C,EADN8C,QAEA,OACI2H,EAAA,yBACIA,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,KAAK2P,cAAY,GACjC1J,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,wBAElBiD,EAAA,qBAAKlH,UAAWT,EAAQ8c,iBACpBnV,EAAA,cAACsG,GAAA,EAAD,CACIiP,WAAS,EACT7V,MAAO0V,EACP/U,SAAU,SAACqG,EAAG3D,GAAJ,OAAUhI,EAAagI,IACjCiK,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGpX,IAAI,SAAAI,GAAC,OAC3BgK,EAAA,cAACsG,GAAA,EAAD,CAAc/P,IAAKP,EAAG0J,MAAO1J,GACxBA,QAKjBgK,EAAA,cAAC1J,EAAA,EAAD,CAAWkf,KAAG,GACVxV,EAAA,cAAC1J,EAAA,EAAD,CACIkS,QACIxI,EAAA,cAAC1J,EAAA,EAAD,CAAQmR,QAAS4N,EAAUhV,SAAU,SAACqG,EAAG1Q,GAAJ,OAAU8E,EAAmB9E,MAEtE0S,MAAO1I,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,uDCxD5B0Y,GAAb,SAAAA,IAAAlc,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAsd,GAAAtd,KACWud,gBAAkD,KAD7Dvd,KAEWyQ,aAA+C,MCFpD+M,GAA8B,kBAAM7K,KAAK8K,UAExC,SAASC,GACZhM,EACAiM,GAEa,IADbF,EACalG,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GADCiG,GAEd,GAAqB,IAAjB9L,EAAMzP,OAAV,CAIA,IAAMoR,EAA8C,GAChDuK,EAAsB,EANbC,GAAA,EAAAC,GAAA,EAAAC,OAAAxgB,EAAA,IAOb,QAAAygB,EAAAC,EAAmBvM,EAAnBwM,OAAAC,cAAAN,GAAAG,EAAAC,EAAApH,QAAAuH,MAAAP,GAAA,EAA0B,KAAfvT,EAAe0T,EAAAzW,MAChBuF,EAAS6Q,EAAUrT,GACzB+I,EAAQ9U,KAAK,CAAE+L,OAAMwC,WAErB8Q,GAAe9Q,GAXN,MAAAuR,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAeb,IADA,IAAIQ,EAAeX,EAAcH,IACjCe,EAAA,EAAAA,EAA+BnL,EAA/BpR,OAAAuc,IAAwC,KAAAvQ,EAAToF,EAASmL,GAA3BlU,EAA2B2D,EAA3B3D,KAAMwC,EAAqBmB,EAArBnB,OACf,GAAe,IAAXA,IAGJyR,GAAgBzR,IAEI,EAChB,OAAOxC,ICrBZ,ICEMmU,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAye,GAAA,QAAAG,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAAqd,IAAAQ,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MAEqBK,oBAAsB,GAF3Crf,EAIoB4Y,SAAqB,IAAI6E,GAJ7Czd,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAqd,EAAAC,GAAAtd,OAAAgX,EAAA,EAAAhX,CAAAqd,EAAA,EAAArgB,IAAA,2BAAAmJ,MAAA,WAMkF,IAAAlC,EAAArF,KAA9Cof,EAA8C7H,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAApB,KAChD8H,EAAgBrf,KAAKsf,YAAYtf,KAAKuf,OAAOnM,MAAOgM,GACpDI,EAA6C,GAC7CC,EAAoD,GACpDC,EAAoD,GAEpDC,EAAW,IAAItN,MANqDwL,GAAA,EAAAC,GAAA,EAAAC,OAAAxgB,EAAA,IAO1E,IAP0E,IAO1EygB,EAP0E4B,EAAA,eAO/DC,EAP+D7B,EAAAzW,MAQtEoY,EAASphB,KAAT+Y,MAAAqI,EAAQve,OAAA0e,GAAA,EAAA1e,CACDye,EAAK3b,MAAMzG,IAAI,SAAAI,GAAC,MAAK,CACpB0J,MAAO,CAAEkV,KAAM5e,EAAE0J,MAAOqV,QAASiD,EAAKA,KAAKjT,KAC3CE,OAAQjP,EAAEiP,OAAS+S,EAAKA,KAAK/S,aAJzCmR,EAAmBoB,EAAnBnB,OAAAC,cAAAN,GAAAG,EAAAC,EAAApH,QAAAuH,MAAAP,GAAA,EAAkC+B,IAPwC,MAAAvB,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAgB1E/d,KAAK+f,eAAeJ,GAhBsD,IAAAK,GAAA,EAAAC,GAAA,EAAAC,OAAA3iB,EAAA,IAkB1E,QAAA4iB,EAAAC,EAAmBpgB,KAAKuf,OAAOnM,MAA/B8K,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAvJ,QAAAuH,MAAA4B,GAAA,EAAsC,KAA3BH,EAA2BM,EAAA5Y,MAClCiY,EAAYK,EAAKjT,KAAO,GAnB8C,MAAAyR,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAsB1E,IAtB0E,IAAAG,EAAA,WAsBrE,IAAM5D,EAAQkD,EAAJnB,GACHjX,EAAkBkV,EAAlBlV,MAAOuF,EAAW2P,EAAX3P,OAET+S,EAAOxa,EAAKka,OAAOnM,MAAMxV,KAAK,SAAAC,GAAC,OAAIA,EAAE+O,MAAQrF,EAAMqV,UAEzD4C,EAAYjY,EAAMqV,UAAY9P,EAAS+S,EAAK/S,OAE5C,IAAM6P,EAAYpV,EAAMkV,KAAKE,WAAa,OACNpf,IAAhCmiB,EAAiB/C,KACjB8C,EAAiB9C,GAAa,EAC9B+C,EAAiB/C,GAAa,GAGlC8C,EAAiB9C,IAAc7P,EAAS+S,EAAK/S,OAC7C4S,EAAiB/C,IAAc,GAdnC6B,EAAA,EAAAA,EAAmBmB,EAAnB1d,OAAAuc,IAA6B6B,IAiB7B,IAAMC,EAGClf,OAAOkY,KAAKmG,GAAkBhiB,IAAI,SAAA8iB,GACrC,IAAM5D,EAAY6D,OAAOD,GACzB,MAAQ,CACJhZ,MAAO,CACHoV,UAAyB,IAAdA,EAAkB,KAAOA,EACpCzJ,MAAOwM,EAAiB/C,IAE5B7P,OAAQ2S,EAAiB9C,MASjC,MAAO,CAAEvJ,MALUhS,OAAOkY,KAAKkG,GAAa/hB,IAAI,SAAAmP,GAC5C,IAAMiT,EAAOxa,EAAKka,OAAOnM,MAAMxV,KAAK,SAAAC,GAAC,OAAIA,EAAE+O,MAAQA,IACnD,MAAO,CAAErF,MAAOsY,EAAM/S,OAAQ0S,EAAY5S,GAAOiT,EAAK/S,UAG9B6P,UAAW2D,EAAuBG,WAAYd,EAAS1d,UAhE3F,CAAA7D,IAAA,gBAAAmJ,MAAA,SAoEQmZ,EACAC,EACA5T,GACY,IAAA4N,EAAA3a,KACZ,GAA8B,IAA1B0gB,EAAeze,OACf,MAAO,GAGX,GAAIye,EAAeze,OAASjC,KAAKuf,OAAO3b,QAAQ3B,OAC5C,MAAM,IAAIuW,MAAM,+CAGpB,IAAMoI,EAAiB,IAAIvO,MACrBD,EAAgCsO,EAAejjB,IAAI,SAAC8Q,EAAGiE,GAAJ,OACrDmO,EAAe1e,OAASuQ,EAAImO,EAAenO,GAAK,OAXxCqO,GAAA,EAAAC,GAAA,EAAAC,OAAAxjB,EAAA,IAcZ,IAdY,IAcZyjB,EAdYC,EAAA,eAcD1X,EAdCyX,EAAAzZ,MAeF2Z,EAAcvG,EAAK4E,OAAO7V,aAAa9L,KACzC,SAAAC,GAAC,OAAIA,EAAEuM,KAAOb,EAAO3E,IAAM/G,EAAEqM,KAAOX,EAAO3E,UAG3BrH,IAAhB2jB,IACIA,EAAY9W,KAAOb,EAAO3E,GAC1Bgc,EAAeriB,KAAK2iB,EAAYhX,IAEhC0W,EAAeriB,KAAK2iB,EAAY9W,MAT5C+W,EAAqBR,EAAe1c,OAAO,SAAApG,GAAC,OAAU,OAANA,IAAYJ,IAAI,SAAAI,GAAC,OAAIA,IAArEqgB,OAAAC,cAAA0C,GAAAG,EAAAG,EAAAtK,QAAAuH,MAAAyC,GAAA,EAA0EI,IAd9D,MAAA5C,GAAAyC,GAAA,EAAAC,EAAA1C,EAAA,YAAAwC,GAAA,MAAAM,EAAA7C,QAAA6C,EAAA7C,SAAA,WAAAwC,EAAA,MAAAC,GAkCZ,IANA,IAAIK,EAAgB,EACd3I,EAAoC,CACtCoD,WAAY8E,EAAe1c,OAAO,SAAApG,GAAC,OAAS,MAALA,IAAWJ,IAAI,SAAAI,GAAC,OAAIA,EAAG+G,KAC9DoX,OAAQ,KAGkC,IAAvC5J,EAAOnI,UAAU,SAAApM,GAAC,OAAU,OAANA,KAAoB,CAC7C,IAD6C,IAAAwjB,EAAA,SACpC7O,GACL,GAAkB,OAAdJ,EAAOI,GACP,iBAGJ,IAAM3L,EAAS6Z,EAAelO,GAC1B8O,OAAwB,EAE5B,OAAQza,GACJ,IAAK,OACDya,EAAa3G,EAAK4E,OAAO3b,QACzB,MACJ,IAAK,OACD0d,EAAa3G,EAAK4E,OAAO3b,QAAQK,OAAO,SAAApG,GAAC,MAAiB,SAAbA,EAAEgJ,SAC/C,MACJ,IAAK,SACDya,EAAa3G,EAAK4E,OAAO3b,QAAQK,OAAO,SAAApG,GAAC,MAAiB,WAAbA,EAAEgJ,SAC/C,MACJ,QACI,iBAGR,IAAM8I,EAAS2R,EAAWrd,OAAO,SAAApG,GAAC,OAAK0Q,KAAEgT,SAASnP,EAAQvU,KACpD2jB,EAAapP,EAAOnO,OAAO,SAAApG,GAAC,OAAU,OAANA,GAA2B,SAAbA,EAAEgJ,SAAmB5E,OACnEwf,EAAerP,EAAOnO,OAAO,SAAApG,GAAC,OAAU,OAANA,GAA2B,WAAbA,EAAEgJ,SAAqB5E,OAEvEyf,EAAyB,IAAIrP,MAC7B9I,EAASoR,EAAK+C,qBAAqB/N,EAAQ,SAAAgF,GAC7C,IAAI7H,EAAS,EA4Bb,OA1BIyB,KAAEoT,KAAKf,EAAgB,SAAA/iB,GAAC,OAAIA,IAAM8W,EAAE/P,OAEhC2J,KAAEoT,KAAKvQ,GAAkC,SAAAvT,GAAC,OACtC0Q,KAAEoT,KAAK5U,EAAM,SAAAnC,GAAC,OAAI/M,IAAM+M,EAAEkP,kBAG9BhN,GAAU6C,EAAO1N,OAGjB6K,GAA0B,GAAhB6C,EAAO1N,QAIV,SAAX4E,GAAqB8T,EAAK4E,OAAOnP,wBAC7BoR,EAAaC,EACI,WAAb9M,EAAE9N,SACFiG,GAAU,IAEP2U,EAAeD,GACL,SAAb7M,EAAE9N,SACFiG,GAAU,KAKtB4U,EAAuBnjB,KAAK,CAAE4d,SAAUxH,EAAE/P,GAAIkI,SAAQuP,QAAQ,IACvDvP,IAGX4U,EAAuB9jB,KAAK,SAAAC,GAAC,OAAIA,EAAEse,WAAa5S,EAAO3E,KAAKyX,QAAS,EACrE5D,EAASuD,OAAOzd,KAAKmjB,GAErBtP,EAAOI,GAAKjJ,EACZ6X,IAEA,IAAMF,EAAcvG,EAAK4E,OAAO7V,aAAa9L,KACzC,SAAAC,GAAC,OAAIA,EAAEuM,KAAOb,EAAO3E,IAAM/G,EAAEqM,KAAOX,EAAO3E,UAE3BrH,IAAhB2jB,IACIA,EAAY9W,KAAOb,EAAO3E,GAC1Bgc,EAAeriB,KAAK2iB,EAAYhX,IAEhC0W,EAAeriB,KAAK2iB,EAAY9W,MAxEnCoI,EAAI,EAAGA,EAAIkO,EAAeze,OAAQuQ,IAAK6O,EAAvC7O,GA6ET,GAAI4O,IAAkBhP,EAAOnQ,OACzB,MAKJ,IAAMuf,EAAapP,EAAOnO,OAAO,SAAApG,GAAC,OAAU,OAANA,GAA2B,SAAbA,EAAEgJ,SAAmB5E,OACnEwf,EAAerP,EAAOnO,OAAO,SAAApG,GAAC,OAAU,OAANA,GAA2B,WAAbA,EAAEgJ,SAAqB5E,OACzE2f,EAA0B,KAK9B,GAHIJ,EAAaC,EAAcG,EAAW,OACjCH,EAAeD,IAAYI,EAAW,UAE9B,OAAbA,EAkCJ,IAAK,IAAIpP,EAAI,EAAGA,EAAIkO,EAAeze,OAAQuQ,IAAK,CAG5C,OAFekO,EAAelO,IAG1B,IAAK,WAEGkO,EAAelO,GADF,WAAboP,EACoB,OAEA,SAExB,MACJ,IAAK,OAEGlB,EAAelO,GADF,WAAboP,EACoB,SAEA,YAjDpC,CAII,IAAIC,GAAU,EACd,IAASrP,EAAI,EAAGA,EAAIkO,EAAeze,OAAQuQ,IACvC,GAA0B,SAAtBkO,EAAelO,GAAe,CAC9BkO,EAAelO,GAAK,OACpBqP,GAAU,EACV,MAIR,IAAKA,EAKD,IAAK,IAAIrP,EAAI,EAAGA,EAAIkO,EAAeze,OAAQuQ,IACvC,GAA0B,aAAtBkO,EAAelO,GAAmB,CAC7BqP,EAIDnB,EAAelO,GAAK,QAHpBkO,EAAelO,GAAK,OACpBqP,GAAU,GAId,QAiCpB,OADA7hB,KAAKyY,SAAS8E,gBAAkB9E,EACzBrG,EAAO3U,IAAI,SAAAI,GAAC,OAAIA,MA/P/B,CAAAO,IAAA,aAAAmJ,MAAA,SAkQsB6X,GAA2B,IAAA0C,EAAA9hB,KACnCqf,EAAgBrf,KAAKsf,YAAYtf,KAAKuf,OAAOnM,MAAOgM,GAEpDO,EAAW,IAAItN,MAHoB0P,GAAA,EAAAC,GAAA,EAAAC,OAAA1kB,EAAA,IAIzC,IAJyC,IAIzC2kB,EAJyCC,EAAA,eAI9BtC,EAJ8BqC,EAAA3a,MAKrCoY,EAASphB,KAAT+Y,MAAAqI,EAAQve,OAAA0e,GAAA,EAAA1e,CACDye,EAAK3b,MAAMzG,IAAI,SAAAI,GAAC,MAAK,CACpB0J,MAAO,CAAEkV,KAAM5e,EAAE0J,MAAOqV,QAASiD,EAAKA,KAAKjT,KAC3CE,OAAQjP,EAAEiP,OAAS+S,EAAKA,KAAK/S,aAJzCsV,EAAmB/C,EAAnBnB,OAAAC,cAAA4D,GAAAG,EAAAE,EAAAvL,QAAAuH,MAAA2D,GAAA,EAAkCI,IAJO,MAAA9D,GAAA2D,GAAA,EAAAC,EAAA5D,EAAA,YAAA0D,GAAA,MAAAK,EAAA9D,QAAA8D,EAAA9D,SAAA,WAAA0D,EAAA,MAAAC,GAazCjiB,KAAK+f,eAAeJ,GAEpB,IAfyC,IAAA0C,EAAA,WAepC,IAAM5F,EAAQkD,EAAJ2C,GACLzC,EAAOiC,EAAKvC,OAAOnM,MAAMxV,KAAK,SAAAC,GAAC,OAAIA,EAAE+O,MAAQ6P,EAAKlV,MAAMqV,UAC9DH,EAAK3P,QAAU+S,EAAK/S,QAFxBwV,EAAA,EAAAA,EAAmB3C,EAAnB1d,OAAAqgB,IAA6BD,IAK7B,IAAM7jB,EAAWwB,KAAK0d,qBAAqBiC,EAAU,SAAA9hB,GAAC,OAAIA,EAAEiP,SAC5D,QAAiBvP,IAAbiB,EACA,MAAM,IAAIga,MAAM,mCAGpB,OAAOha,EAAS+I,QA3RxB,CAAAnJ,IAAA,iBAAAmJ,MAAA,SA8R2BrD,GAAkC,IAAAqe,EAAAviB,KAC/C2c,EAAY3c,KAAKuf,OAAO5C,UAExB6F,EAAete,EAAMD,OACvB,SAAApG,GAAC,OAAIA,EAAE0J,MAAMkV,KAAKE,YAAcA,GAAa9e,EAAE0J,MAAMkV,KAAKE,YAAcA,EAAY,IAElF8F,EAAgBD,EAAave,OAC/B,SAAApG,GAAC,OAGU,IAFP0kB,EAAKhD,OAAOmD,aAAazY,UACrB,SAAAW,GAAC,OAAIA,EAAEgS,UAAY/e,EAAE0J,MAAMqV,SAAWhS,EAAE6R,KAAK7X,KAAO/G,EAAE0J,MAAMkV,KAAK7X,OAKvE+d,GAAcH,EAAavgB,OAASwgB,EAAcxgB,QAAUugB,EAAavgB,OAS/E,GAAIjC,KAAKkf,oBAAsByD,GAAcF,EAAcxgB,OAAS,GAAI,CACpE,IAAM2b,EAAc1Z,EAAMiO,OAAO,SAACtU,EAAG+M,GAAJ,OAAU/M,EAAI+M,EAAEkC,QAAQ,GACnD8V,EAAiBH,EAActQ,OAAO,SAACtU,EAAG+M,GAAJ,OAAU/M,EAAI+M,EAAEkC,QAAQ,GAEpE+V,QAAQC,IAAR,UAAA/kB,OAAsB6f,EAAtB,gBAAA7f,OAAgD6kB,IAGhD,GADyB,GACrBhF,EAAiCgF,EAAgB,CACjD,IAAMG,EAFe,GAGjBnF,EACAgF,EACAA,EAAiBA,EAIrBC,QAAQC,IAAI,WAAaC,GARwB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA3lB,EAAA,IAWjD,QAAA4lB,EAAAC,EAA0BX,EAA1BvE,OAAAC,cAAA6E,GAAAG,EAAAC,EAAAvM,QAAAuH,MAAA4E,GAAA,EAAyC,KAA9BK,EAA8BF,EAAA5b,MACrC8b,EAAYvW,OAASuW,EAAYvW,OAASiW,GAZG,MAAA1E,GAAA4E,GAAA,EAAAC,EAAA7E,EAAA,YAAA2E,GAAA,MAAAI,EAAA9E,QAAA8E,EAAA9E,SAAA,WAAA2E,EAAA,MAAAC,QA5TjE,CAAA9kB,IAAA,kBAAAmJ,MAAA,SA8U2B+b,GAA0D,IAAAC,EAAAvjB,KACvEwjB,EAA4B,GAD2CC,GAAA,EAAAC,GAAA,EAAAC,OAAApmB,EAAA,IAE7E,QAAAqmB,EAAAC,EAAoBP,EAApBpF,OAAAC,cAAAsF,GAAAG,EAAAC,EAAAhN,QAAAuH,MAAAqF,GAAA,EAAqC,KAA1B5G,EAA0B+G,EAAArc,MAAAuc,GAAA,EAAAC,GAAA,EAAAC,OAAAzmB,EAAA,IACjC,IADiC,IACjC0mB,EADiCC,EAAA,eACtB9E,EADsB6E,EAAA1c,OAE2B,IAApDic,EAAgBvZ,UAAU,SAAApM,GAAC,OAAIA,IAAMuhB,KACrCoE,EAAgBjlB,KAAK6gB,IAF7B+E,EAAuBtH,EAAMuH,eAA7BlG,OAAAC,cAAA2F,GAAAG,EAAAE,EAAAtN,QAAAuH,MAAA0F,GAAA,EAA6CI,IADZ,MAAA7F,GAAA0F,GAAA,EAAAC,EAAA3F,EAAA,YAAAyF,GAAA,MAAAK,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAAyF,EAAA,MAAAC,KAFwC,MAAA3F,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,YAAAoF,GAAA,MAAAI,EAAAvF,QAAAuF,EAAAvF,SAAA,WAAAoF,EAAA,MAAAC,GAW7E,IADA,IAAMU,EAA8C,GACpDC,EAAA,EAAAA,EAAuBd,EAAvBvhB,OAAAqiB,IAAwC,CAAnC,IAAMlF,EAAYoE,EAAJc,GACTjF,EAAgBrf,KAAKsf,YACvBtf,KAAKuf,OAAOnM,MAAMnP,OAAO,SAAApG,GAAC,OAAiB,IAAbA,EAAEiP,SAChCsS,GAGEO,EAAkC,GANJ4E,GAAA,EAAAC,GAAA,EAAAC,OAAAlnB,EAAA,IAOpC,QAAAmnB,EAAAC,EAAuBtF,EAAvBnB,OAAAC,cAAAoG,GAAAG,EAAAC,EAAA9N,QAAAuH,MAAAmG,GAAA,EAAsC,KAA3BK,EAA2BF,EAAAnd,MAClCoY,EAASphB,KAAT+Y,MAAAqI,EAAQve,OAAA0e,GAAA,EAAA1e,CAASwjB,EAAS1gB,SARM,MAAAma,GAAAmG,GAAA,EAAAC,EAAApG,EAAA,YAAAkG,GAAA,MAAAI,EAAArG,QAAAqG,EAAArG,SAAA,WAAAkG,EAAA,MAAAC,GAWZ,IAApB9E,EAAS1d,OACToiB,EAAgBjF,GAAY,EAE5BiF,EAAgBjF,GACZ,IAAQ,IAAOO,EAASxN,OAAO,SAACtU,EAAG+M,GAAJ,OAAU/M,EAAI+M,EAAEkC,QAAQ,GAAM6S,EAAS1d,OAIlF,IAAM4iB,EAAqD,GA9BkBC,GAAA,EAAAC,GAAA,EAAAC,OAAAznB,EAAA,IA+B7E,IA/B6E,IA+B7E0nB,EA/B6EC,EAAA,eA+BlErI,EA/BkEoI,EAAA1d,MAgCnE4d,EAAgB5B,EAAKhE,OAAOzM,OAAOlV,KAAK,SAAAC,GAAC,OAAIA,EAAE0J,QAAUsV,EAAM3E,YAErE,QAAsB3a,IAAlB4nB,GAAwD,IAAzBA,EAAcrY,OAC7C,iBAGJ,IAAIiW,EAAS,EAtC4DqC,GAAA,EAAAC,GAAA,EAAAC,OAAA/nB,EAAA,IAuCzE,QAAAgoB,EAAAC,EAAuB3I,EAAMuH,eAA7BlG,OAAAC,cAAAiH,GAAAG,EAAAC,EAAA3O,QAAAuH,MAAAgH,GAAA,EAA6C,KAAlChG,EAAkCmG,EAAAhe,MACzCwb,EAASpQ,KAAKtE,IAAIgW,EAAgBjF,GAAW2D,IAxCwB,MAAA1E,GAAAgH,GAAA,EAAAC,EAAAjH,EAAA,YAAA+G,GAAA,MAAAI,EAAAlH,QAAAkH,EAAAlH,SAAA,WAAA+G,EAAA,MAAAC,GA2CzET,EAAetmB,KAAK,CAAEuO,OAAQiW,EAASoC,EAAcrY,OAAQvF,MAAOsV,KAZxE4I,EAAoBnC,EAApBpF,OAAAC,cAAA2G,GAAAG,EAAAQ,EAAA5O,QAAAuH,MAAA0G,GAAA,EAAqCI,IA/BwC,MAAA7G,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,YAAAyG,GAAA,MAAAW,EAAAnH,QAAAmH,EAAAnH,SAAA,WAAAyG,EAAA,MAAAC,GA8C7E,GAAIH,EAAe5iB,OAAS,GAAKjC,KAAKuf,OAAOmG,cAAczjB,OAAS,EAAG,CACnE,IAAM0jB,EAAgB3lB,KAAKuf,OAAOmG,cAAc,GAC1CE,EAAYf,EAAejnB,KAAK,SAAAC,GAAC,OAAIA,EAAE0J,MAAM2Q,YAAcyN,SAC/CpoB,IAAdqoB,IACAA,EAAU9Y,OAAS,GAI3B9M,KAAKyY,SAAShI,aAAe,CACzB4C,QAASwR,EAAepnB,IAAI,SAAAI,GAAC,MAAK,CAAEiP,OAAQjP,EAAEiP,OAAQvF,MAAO1J,EAAE0J,MAAM2Q,cAGzE,IAAM1Z,EAAWwB,KAAK0d,qBAAqBmH,EAAgB,SAAAhI,GAAK,OAAIA,EAAM/P,SAC1E,QAAiBvP,IAAbiB,EAIJ,OAAOA,EAAS+I,MAAM2Q,YA7Y9B,CAAA9Z,IAAA,UAAAmJ,MAAA,SAgZmB8G,GAGX,OAFAA,EAAMsE,KAAKvE,IAAIC,EAAK,GAEbsE,KAAKvE,IAAIC,EAAMsE,KAAKkT,MAAyB,EAAnB7lB,KAAK8lB,aAAmB,KAnZjE,CAAA1nB,IAAA,cAAAmJ,MAAA,SAuZQ6L,EACApL,GACuD,IAAA+d,EAAA/lB,KACjDgmB,EAAuB5S,EAAM3V,IAAI,SAAAI,GAAC,MAAK,CACzCqG,MAAOrG,EAAEqG,MAAMD,OAAO,SAAAwY,GAClB,OAAa,OAATzU,GAAiByU,EAAKzU,OAASA,KAIV,IAArByU,EAAK1P,KAAK9K,SAIF,IAHRwa,EAAK1P,KAAK9C,UAAU,SAAApM,GAChB,IAAMooB,EAAcF,EAAKxG,OAAOxS,KAAKnP,KAAK,SAAAgN,GAAC,OAAIA,EAAErD,QAAU1J,IAC3D,YAAuBN,IAAhB0oB,GAAoD,IAAvBA,EAAYnZ,YAI5DF,IAAK/O,EAAE+O,IACPE,OAAQjP,EAAEiP,UAKR2T,EAAauF,EAAS7T,OAAO,SAACtU,EAAG+M,GAAJ,OAAU/M,EAAI+M,EAAE1G,MAAMjC,QAAQ,GAG3DmQ,EAAkE,GAElEuK,EAAY3c,KAAKuf,OAAO5C,UAzByBuJ,GAAA,EAAAC,GAAA,EAAAC,OAAA7oB,EAAA,IA2BvD,IA3BuD,IA2BvD8oB,EA3BuDC,EAAA,eA2B5CzG,EA3B4CwG,EAAA9e,MA6B7Cgf,EAAcR,EAAKxG,OAAOmD,aAAaze,OAAO,SAAApG,GAAC,OAAIA,EAAE+e,UAAYiD,EAAKjT,MAGxE4Z,OAAwB,EAEtB7D,EAAa4D,EAAYtkB,OAAS4d,EAAK3b,MAAMjC,OAG/CukB,EAFA7D,EAAaoD,EAAK7G,oBAEgD,GAA/CvM,KAAK8T,IAAI9T,KAAKvE,IAAI,IAAMuU,EAAY,IAAM,GAE1C,EAGvB,IAAM+D,EAAuC,GA1CMC,GAAA,EAAAC,GAAA,EAAAC,OAAAtpB,EAAA,IA2CnD,QAAAupB,EAAAC,EAAmBlH,EAAK3b,MAAxBga,OAAAC,cAAAwI,GAAAG,EAAAC,EAAAlQ,QAAAuH,MAAAuI,GAAA,EAA+B,KAApBlK,EAAoBqK,EAAAvf,MAIrBuF,EAAS0Z,EAHST,EAAKiB,cAAcvK,EAAKE,UAAWA,GACrCoJ,EAAKkB,iBAAiBxK,EAAK7X,GAAI2hB,EAAa9F,GAC/CsF,EAAKmB,cAAczK,EAAK1P,KAAMgZ,EAAKxG,OAAOxS,MAE9C,IAAXD,GAIJ4Z,EAAcnoB,KAAK,CACfgJ,MAAOkV,EACP3P,OAAQA,KAtDmC,MAAAuR,GAAAuI,GAAA,EAAAC,EAAAxI,EAAA,YAAAsI,GAAA,MAAAI,EAAAzI,QAAAyI,EAAAzI,SAAA,WAAAsI,EAAA,MAAAC,GA0DnDzU,EAAO7T,KAAK,CAAEshB,OAAM3b,MAAOwiB,KA/B/BS,EAAmBnB,EAAnB9H,OAAAC,cAAA+H,GAAAG,EAAAc,EAAAtQ,QAAAuH,MAAA8H,GAAA,EAA6BI,IA3B0B,MAAAjI,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAiB,EAAA7I,QAAA6I,EAAA7I,SAAA,WAAA6H,EAAA,MAAAC,GA6DvD,OAAOhU,IAtdf,CAAAhU,IAAA,qBAAAmJ,MAAA,SAyd8B6f,GACtB,IAAMC,EAAc,IAAIhV,MAClBgE,EAAM,IAAID,KACZhE,EAASpS,KAAKuf,OAAO5C,WAEpBpO,KAAEgT,SAAS6F,EAAQ,cAAgB/Q,EAAIiR,WAAa,IAAMjR,EAAIiR,WAAa,KAC5ElV,IACAiV,EAAY9oB,KAAK,aAGrB,IAAMgpB,EAAcvnB,KAAKuf,OAAOmG,cAAczjB,OAC9C,GAAIslB,EAAc,KAAO,GAAqB,IAAhBA,EAAmB,CAC7C,IAAM3iB,EAAK2iB,EAAc,GACpBhZ,KAAEgT,SAAS6F,EAAX,UAAArpB,OAA6B6G,MAC9BwN,IACAiV,EAAY9oB,KAAZ,UAAAR,OAA2B6G,KAQnC,OAJIwN,EAAS,IACTA,EAAS,GAGN,CAAEuK,UAAWvK,EAAQgV,OAAQC,KAhf5C,CAAAjpB,IAAA,gBAAAmJ,MAAA,SAmf4BwF,EAAgBya,GACpC,IAAMnU,EAAUtG,EACXtP,IAAI,SAAAI,GAAC,OAAI2pB,EAAW5pB,KAAK,SAAAgN,GAAC,OAAIA,EAAErD,QAAU1J,MAC1CoG,OAAO,SAAApG,GAAC,YAAUN,IAANM,IACZJ,IAAI,SAAAI,GAAC,OAAIA,EAAGiP,SACjB,OAAIuG,EAAQpR,OAAS,EACV0Q,KAAKtE,IAALiJ,MAAA3E,KAAIvR,OAAA0e,GAAA,EAAA1e,CAAQiS,IAEhB,KA3ff,CAAAjV,IAAA,mBAAAmJ,MAAA,SA+f+B3C,EAAYtH,EAAoBmjB,GACvD,IAAMgH,EAAkBnqB,EAAQ2M,UAAU,SAAApM,GAAC,OAAIA,EAAE4e,KAAK7X,KAAOA,IAC7D,OAAyB,IAArB6iB,EACO,EAGPA,EAAkBhH,EACX,EAGJgH,EAAkBhH,IAzgBjC,CAAAriB,IAAA,gBAAAmJ,MAAA,SA6gB4BmgB,EAAmC/K,GACvD,QAAsBpf,IAAlBmqB,EACA,MAAO,IAMX,GAAIA,IAAkB/K,EAClB,OAAO,EAGX,GAAI+K,EAAgB/K,EAAW,CAC3B,IAAMvK,EAAS,IAAqC,IAA7BsV,EAAgB/K,GACvC,OAAOvK,EAAS,EAAI,EAAIA,EAG5B,MAAO,KA9hBf,CAAAhU,IAAA,cAAAmJ,MAAA,SAiiB0B6L,GAClB,IAAMuU,EAA4B,GADeC,GAAA,EAAAC,GAAA,EAAAC,OAAAvqB,EAAA,IAGjD,QAAAwqB,EAAAC,EAAmB5U,EAAnB8K,OAAAC,cAAAyJ,GAAAG,EAAAC,EAAAnR,QAAAuH,MAAAwJ,GAAA,EAA0B,KAAf/H,EAAekI,EAAAxgB,MAEtB,KAAIsY,EAAK/S,QAAU,GAAnB,CAIA,IAAM5I,EAAgB,GANA+jB,GAAA,EAAAC,GAAA,EAAAC,OAAA5qB,EAAA,IAOtB,QAAA6qB,EAAAC,EAAmBxI,EAAK3b,MAAxBga,OAAAC,cAAA8J,GAAAG,EAAAC,EAAAxR,QAAAuH,MAAA6J,GAAA,EAA+B,KAApBxL,EAAoB2L,EAAA7gB,MAC3B,GAAKvH,KAAKsoB,0BAA0BtoB,KAAKuf,OAAO3b,QAAS6Y,EAAK7Y,SAA9D,CAIA,IAAI2kB,GAAe,EALQC,GAAA,EAAAC,GAAA,EAAAC,OAAAnrB,EAAA,IAM3B,QAAAorB,EAAAC,EAAkBnM,EAAK1P,KAAvBmR,OAAAC,cAAAqK,GAAAG,EAAAC,EAAA/R,QAAAuH,MAAAoK,GAAA,EAA6B,KAAlBK,EAAkBF,EAAAphB,MACzB,GAAIvH,KAAK8oB,oBAAoBD,EAAK7oB,KAAKuf,OAAOxS,MAAO,CACjDwb,GAAe,EACf,QATmB,MAAAlK,GAAAoK,GAAA,EAAAC,EAAArK,EAAA,YAAAmK,GAAA,MAAAI,EAAAtK,QAAAsK,EAAAtK,SAAA,WAAAmK,EAAA,MAAAC,GAavBH,GAIC9L,EAAKsM,UAAU/oB,KAAKuf,SAIzBrb,EAAM3F,KAAKke,KA5BO,MAAA4B,GAAA6J,GAAA,EAAAC,EAAA9J,EAAA,YAAA4J,GAAA,MAAAI,EAAA/J,QAAA+J,EAAA/J,SAAA,WAAA4J,EAAA,MAAAC,GA+BlBjkB,EAAMjC,OAAS,GACf0lB,EAAcppB,KAAK,CAAE2F,QAAO4I,OAAQ+S,EAAK/S,OAAQF,IAAKiT,EAAKjT,QAnClB,MAAAyR,GAAAwJ,GAAA,EAAAC,EAAAzJ,EAAA,YAAAuJ,GAAA,MAAAI,EAAA1J,QAAA0J,EAAA1J,SAAA,WAAAuJ,EAAA,MAAAC,GAuCjD,OAAOH,IAxkBf,CAAAvpB,IAAA,sBAAAmJ,MAAA,SA2kBqCA,EAAU8L,GACvC,OAAOA,EAAQpJ,UAAU,SAAApM,GAAC,OAAIA,EAAE0J,QAAUA,GAAS1J,EAAEiP,QAAU,KAAM,IA5kB7E,CAAA1O,IAAA,4BAAAmJ,MAAA,SAglBQ3D,EACAolB,GAEA,GAAIA,EAAc/mB,OAAS2B,EAAQ3B,OAC/B,OAAO,EAGX,IAAMgnB,EAAqBD,EAAc/kB,OAAO,SAAApG,GAAC,MAAiB,SAAbA,EAAEgJ,SAAmB5E,OACpEinB,EAActlB,EAAQK,OAAO,SAAApG,GAAC,MAAiB,SAAbA,EAAEgJ,SAAmB5E,OAE7D,GAAIgnB,EAAqBC,EACrB,OAAO,EAGX,IAAMC,EAAuBH,EAAc/kB,OAAO,SAAApG,GAAC,MAAiB,WAAbA,EAAEgJ,SAAqB5E,OACxEmnB,EAAgBxlB,EAAQK,OAAO,SAAApG,GAAC,MAAiB,WAAbA,EAAEgJ,SAAqB5E,OACjE,QAAIknB,EAAuBC,OAIGJ,EAAc/kB,OAAO,SAAApG,GAAC,MAAiB,aAAbA,EAAEgJ,SAAuB5E,OACrD0Q,KAAKtE,IAAI+a,EAAeF,OAI1BF,EAAc/kB,OAAO,SAAApG,GAAC,MAAiB,SAAbA,EAAEgJ,SAAmB5E,OACjD,EAAI0Q,KAAKvE,IAAIgb,EAAeF,SA1mB5DzK,EAAA,CDFA,WAGI,SAAA4K,EAA+B9J,EAAoB9B,GAAcrc,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAqpB,GAAArpB,KAAAuf,SAAAvf,KAF9Cyd,YAE6C,EAC5Dzd,KAAKyd,OAASA,EAJtB,OAAArc,OAAAgX,EAAA,EAAAhX,CAAAioB,EAAA,EAAAjrB,IAAA,YAAAmJ,MAAA,WAkBQ,OAAOvH,KAAKyd,WAlBpB,CAAArf,IAAA,uBAAAmJ,MAAA,SAqBmCmK,EAAYiM,GAA+C,IAAA9d,EAAAG,KACtF,OAAO0d,GAAqBhM,EAAOiM,EAAW,kBAAM9d,EAAK4d,aAtBjE,CAAArf,IAAA,+BAAAmJ,MAAA,SAyB8CmK,GAAqC,IAAArM,EAAArF,KAC3E,ODED,SACH0R,GAEa,IACPU,EAASsL,GAAqBhM,EAAO,SAAApH,GAAI,OAAIA,EAAKwC,QAD3CyK,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GADCiG,IAGd,QAAejgB,IAAX6U,EAIJ,OAAOA,EAAO7K,MCXH+hB,CAA6B5X,EAAO,kBAAMrM,EAAKoY,eA1B9D4L,EAAA,wDEPaE,GAAb,WAGI,SAAAA,EACYC,EACAC,GACTroB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAupB,GAAAvpB,KAAAwpB,cAAAxpB,KAAAypB,gBAAAzpB,KALc0pB,UAAY,IAAIC,UADrC,OAAAvoB,OAAAgX,EAAA,EAAAhX,CAAAmoB,EAAA,EAAAnrB,IAAA,cAAAmJ,MAAA,eAAAqiB,EAAAxoB,OAAAqV,GAAA,EAAArV,CAAAsV,GAAAzY,EAAA0Y,KAAA,SAAAC,EAQ6BhK,GAR7B,IAAAwF,EAAA,OAAAsE,GAAAzY,EAAA6Y,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cASczE,EAAiB,GAT/B2E,EAAAF,KAAA,EAWc7W,KAAK6pB,SAASjd,EAAKwF,OAAQ7U,GAXzC,cAAAwZ,EAAA+S,OAAA,SAYe1X,GAZf,wBAAA2E,EAAAK,SAAAR,EAAA5W,SAAA,gBAAAqX,GAAA,OAAAuS,EAAAtS,MAAAtX,KAAAuX,YAAA,KAAAnZ,IAAA,WAAAmJ,MAAA,eAAAwiB,EAAA3oB,OAAAqV,GAAA,EAAArV,CAAAsV,GAAAzY,EAAA0Y,KAAA,SAAAqT,EAe2Bpd,EAAawF,EAAgBgS,GAfxD,IAAA6F,EAAAC,EAAAC,EAAA3X,EAAA4X,EAAAC,EAAA5N,EAAA,OAAA/F,GAAAzY,EAAA6Y,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAAzT,MAAA,cAAAyT,EAAAzT,KAAA,EAgB0B7W,KAAKwpB,YAAY5c,GAhB3C,OAgBcqd,EAhBdK,EAAAC,KAmBcL,EAASlqB,KAAK0pB,UAAUc,gBAAgB,SAAWP,EAAM,UAAW,YAEpEE,EAAeD,EAAOO,qBAAqB,KACxCjY,EAAI,EAtBrB,YAsBwBA,EAAI2X,EAAaloB,QAtBzC,CAAAqoB,EAAAzT,KAAA,aAuBkBuT,EAAaD,EAAa3X,IAEjBkY,gBAAkBR,EAAO1P,gBAzBpD,CAAA8P,EAAAzT,KAAA,gBAAAyT,EAAAR,OAAA,0BA6BwC,kBAAxBM,EAAWO,SA7B3B,CAAAL,EAAAzT,KAAA,gBAAAyT,EAAAzT,KAAA,GA8BsB7W,KAAK4qB,mBAAmBR,EAAYhY,EAAQgS,GA9BlE,eAAAkG,EAAAR,OAAA,+BAmC2BvsB,KADT8sB,EAASrqB,KAAKypB,cAAcoB,aAAaT,EAAWO,WAlCtE,CAAAL,EAAAzT,KAAA,gBAoCgBgM,QAAQ5Z,MAAR,YAAAlL,OACgBqsB,EAAWO,SAD3B,2CApChBL,EAAAR,OAAA,0BA0CkBrN,EAAO4N,EAAOS,YAAYV,QACT7sB,IAAnB6mB,IAAqE,IAArCA,EAAe2G,QAAQtO,EAAK7X,IA3C5E,CAAA0lB,EAAAzT,KAAA,gBAAAyT,EAAAR,OAAA,uBA+CY1X,EAAO7T,KAAKke,GA/CxB,QAsBiDjK,IAtBjD8X,EAAAzT,KAAA,iCAAAyT,EAAAlT,SAAA4S,EAAAhqB,SAAA,gBAAAgrB,EAAAC,EAAAC,GAAA,OAAAnB,EAAAzS,MAAAtX,KAAAuX,YAAA,KAAAnZ,IAAA,qBAAAmJ,MAAA,SAoDQ6iB,EACAhY,EACAgS,GAEA,IAAMxX,EAAMwd,EAAWe,aAAa,OACpC,GAAY,OAARve,EACA,MAAM,IAAI4L,MAAM,iDAMpB,IAHA,IAcI4S,EAdEC,EAA8B,GAE9BC,EAAWlB,EAAWK,qBAAqB,WACxCjY,EAAI,EAAGA,EAAI8Y,EAASrpB,OAAQuQ,IAAK,CACtC,IAEM+Y,EAFUD,EAAS9Y,GAEF2Y,aAAa,MACrB,OAAXI,GAIJF,EAAkB9sB,KAAKgtB,GAI3B,GAAiC,IAA7BF,EAAkBppB,OAClBmpB,EAAgBhH,OAEhB,QAAuB7mB,IAAnB6mB,EAA8B,CAC9BgH,EAAgB,GADc,IAAAvN,GAAA,EAAAC,GAAA,EAAAC,OAAAxgB,EAAA,IAI9B,QAAAygB,EAAAC,EAAqBmG,EAArBlG,OAAAC,cAAAN,GAAAG,EAAAC,EAAApH,QAAAuH,MAAAP,GAAA,EAAqC,KAA1B2N,EAA0BxN,EAAAzW,MAC7B8jB,EAAkBN,QAAQS,IAAW,GACrCJ,EAAc7sB,KAAKitB,IANG,MAAAnN,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,SAU9BqN,EAAgBC,EAIxB,OAAOrrB,KAAK6pB,SAASjd,EAAKwF,EAAQgZ,OA7F1C7B,EAAA,YCHakC,GACT,SAAAA,EAAmBC,GAAgE,IAApC7kB,EAAoC0Q,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAR,OAAQnW,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAyrB,GAAAzrB,KAAA0rB,cAAA1rB,KAAA6G,UCC1E8kB,GAAb,oBAAAA,IAAAvqB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA2rB,GAAA,OAAAvqB,OAAAgX,EAAA,EAAAhX,CAAAuqB,EAAA,OAAAvtB,IAAA,iBAAAmJ,MAAA,SAEiCqkB,GAGzB,GAAKA,EAAErsB,WAFS,UAEhB,CAIA,GAAIqsB,EAAE3pB,OANU,SAMOA,OAAQ,CAC3B,IAAM4pB,EAAQrL,OAAOoL,EAAEpsB,UAPX,SAO6ByC,SACzC,OAAO6pB,MAAMD,QAAStuB,EAAYsuB,EAGtC,OAAO,KAdf,CAAAztB,IAAA,yBAAAmJ,MAAA,SAkByCqkB,GAGjC,IAFAA,EAAIA,EAAE9R,iBAEG9Z,KAAK+rB,qBACV,OAAO/rB,KAAK+rB,qBAAqBH,KAtB7C,CAAAxtB,IAAA,+BAAAmJ,MAAA,SA6B+CqkB,GACvC,IAAM3tB,EAAI2tB,EAAEI,MAAM,KAElB,KAAI/tB,EAAEgE,OAAS,GAAf,CAMA,IAFA,IAAImQ,EAAS,EAEJI,EAAI,EAAGA,EAAIvU,EAAEgE,OAAQuQ,IAAK,CAC/B,IAAMmC,EAAI6L,OAAOviB,EAAEuU,IACnB,GAAIsZ,MAAMnX,GACN,OAGJvC,GAAUuC,EAAIhC,KAAK8T,IAAI,GAAKxoB,EAAEgE,OAASuQ,EAAI,GAG/C,OAAOJ,OA/CfuZ,EAAA,GAAaA,GAkDMI,qBAA4D,CACvEE,EAAG,OACHC,KAAM,OACNC,EAAG,SACHC,OAAQ,SACRC,EAAG,WACHC,SAAU,WACVV,EAAG,OACHW,KAAM,QCtDP,IAAeC,GAAtB,oBAAAA,IAAAprB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAwsB,GAAA,OAAAprB,OAAAgX,EAAA,EAAAhX,CAAAorB,EAAA,EAAApuB,IAAA,cAAAmJ,MAAA,SACuB0iB,GACf,IAAMxN,EAAOzc,KAAKysB,aAEZlB,EAAStB,EAAIkB,aAAa,MAChC,GAAe,OAAXI,EACA,MAAM,IAAI/S,MAAM,qCAEpBiE,EAAK7X,GAAK2mB,EAEV9O,EAAKE,UAAY6D,OAAOyJ,EAAIkB,aAAa,eACrC1O,EAAKE,UAAY,GAAKF,EAAKE,UAAY,MACvCF,EAAKE,eAAYpf,GAGrB,IAAMwP,EAAOkd,EAAIkB,aAAa,QAE9B1O,EAAK1P,KAAOA,EAAI,GAAAhP,OAAAqD,OAAA0e,GAAA,EAAA1e,CACNpB,KAAK0sB,wBADCtrB,OAAA0e,GAAA,EAAA1e,CAC0B2L,EAAKif,MAAM,OAC/ChsB,KAAK0sB,uBAEX1sB,KAAK2sB,gBAAgB1C,EAAKxN,GAG1B,IADA,IAAMmQ,EAAc3C,EAAIQ,qBAAqB,KACpCjY,EAAI,EAAGA,EAAIoa,EAAY3qB,OAAQuQ,IAAK,CACzC,IAAMgH,EAAUoT,EAAYpa,GAExBgH,EAAQkR,gBAAkBT,IAI1BzQ,EAAQqT,UAAR,GAAA9uB,OAAuBksB,EAAI4C,QAA3B,YAKJ7sB,KAAK8sB,aAAatT,EAASiD,GAJvBA,EAAK7Y,QAAU5D,KAAK+sB,aAAavT,IAWzC,YAJqBjc,IAAjBkf,EAAK7Y,UACL6Y,EAAK7Y,QAAU,IAGZ6Y,IA3Cf,CAAAre,IAAA,uBAAAmJ,MAAA,WA+CQ,MAAO,KA/Cf,CAAAnJ,IAAA,eAAAmJ,MAAA,SAuDyB0iB,GAIjB,IAHA,IAAMrmB,EAA2B,GAE3BgpB,EAAc3C,EAAIQ,qBAAqB,KACpCjY,EAAI,EAAGA,EAAIoa,EAAY3qB,OAAQuQ,IAAK,CACzC,IAAMgH,EAAUoT,EAAYpa,GAE5B,GAAIgH,EAAQkR,gBAAkBT,EAA9B,CAIA,IAAM1gB,EAASvJ,KAAKgtB,YAAYxT,QACjBjc,IAAXgM,GACA3F,EAAQrF,KAAKgL,IAIrB,OAAO3F,IAxEf,CAAAxF,IAAA,cAAAmJ,MAAA,SA2EwB0iB,GAChB,IAAM4B,EAAQF,GAAasB,eAAehD,EAAI4C,SAC9C,QAActvB,IAAVsuB,EAAJ,CAIA,IAAIqB,EAAoC,OAElCC,EAAalD,EAAIkB,aAAa,UACpC,GAAIgC,EAAY,CACZ,IAAMC,EAAYzB,GAAa0B,uBAAuBF,QAEpC5vB,IAAd6vB,IACAF,EAAiBE,GAIzB,OAAO,IAAI3B,GAAcI,EAAOqB,QA5FxCV,EAAA,GCJac,GAAb,SAAAA,IAAAlsB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAstB,GAAAttB,KACW8M,OAAiB,EAD5B9M,KAEWjD,kBAFX,GCFawwB,GACT,SAAAA,EAAmBvwB,EAAqBkO,GAAkB9J,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAutB,GAAAvtB,KAAAhD,OAAAgD,KAAAkL,WCGjDsiB,GAAb,WAKI,SAAAA,IAAepsB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAwtB,GAAAxtB,KAJRoS,YAIO,EAAApS,KAFNytB,0BAA4ClwB,EAGhDyC,KAAKoS,OAAS,GANtB,OAAAhR,OAAAgX,EAAA,EAAAhX,CAAAosB,EAAA,EAAApvB,IAAA,aAAAmJ,MAAA,SASsB0iB,GACd,OAAQA,EAAI4C,SACR,IAAK,OACD,OAAkC,IAA9B7sB,KAAKytB,uBAGTztB,KAAKytB,sBAAuB,EAE5BztB,KAAKoS,OAAO7T,KAAKyB,KAAK0tB,iBAAiBzD,KAChC,GACX,IAAK,OACD,OAAkC,IAA9BjqB,KAAKytB,4BAEgClwB,IAA9ByC,KAAKytB,sBACZztB,KAAKoS,OAAO7T,KAAK,CAAExB,aAAc,GAAI+P,OAAQ,IAGjD9M,KAAKytB,sBAAuB,EAC5BztB,KAAKoS,OAAO,GAAGrV,aAAawB,KAAKyB,KAAK2tB,iBAAiB1D,KAChD,GACX,QACI,OAAO,KA9BvB,CAAA7rB,IAAA,mBAAAmJ,MAAA,SAkC6BiS,GACrB,IAAMzc,EAAkC,GAClC6wB,EAAc,IAAIN,GAElBxgB,EAAS0M,EAAQ2R,aAAa,UACrB,OAAXre,GAAoBgf,MAAMtL,OAAO1T,IAGjC8gB,EAAY9gB,OAAS,EAFrB8gB,EAAY9gB,OAAS0T,OAAO1T,GAMhC,IADA,IAAM+gB,EAAQrU,EAAQiR,qBAAqB,QAClCjY,EAAI,EAAGA,EAAIqb,EAAM5rB,OAAQuQ,IAAK,CACnC,IAAMsb,EAAcD,EAAMrb,GAC1BzV,EAAawB,KAAKyB,KAAK2tB,iBAAiBG,IAI5C,OADAF,EAAY7wB,aAAeA,EACpB6wB,IApDf,CAAAxvB,IAAA,mBAAAmJ,MAAA,SAuD6BiS,GACrB,IAAMxc,EAAOwc,EAAQ2R,aAAa,QAClC,GAAa,OAATnuB,EACA,MAAM,IAAIwb,MAAM,uCAGpB,GAA4B,OAAxBgB,EAAQuU,YACR,MAAM,IAAIvV,MAAM,6CAGpB,OAAO,IAAI+U,GAAgBvwB,EAAMwc,EAAQuU,iBAjEjDP,EAAA,GCCsBQ,GAAtB,SAAAC,GAAA,SAAAD,IAAA,IAAArP,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAguB,GAAA,QAAApP,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA4sB,IAAA/O,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACYqP,kBAAoB,IAAIV,GADpC3tB,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA4sB,EAAAC,GAAA7sB,OAAAgX,EAAA,EAAAhX,CAAA4sB,EAAA,EAAA5vB,IAAA,kBAAAmJ,MAAA,SAG8B4mB,EAAkB1R,GACxC,IAAM2R,EAAeD,EAAQhD,aAAa,uBAC1C,GAAqB,OAAjBiD,EAAuB,CACvB,IAAMC,EAAsB7N,OAAO4N,GACnC,GAAItC,MAAMuC,GACN,MAAM,IAAI7V,MAAJ,6BAAAza,OAC2BqwB,EAD3B,4CAAArwB,OAEE0e,EAAK7X,GAFP,OAOV6X,EAAK6R,oBAAsBD,EAG/B,IAAME,EAAgBJ,EAAQhD,aAAa,iBAC3C,GAAsB,OAAlBoD,EAAwB,CACxB,IAAMC,EAAU7C,GAAa8C,6BAA6BF,GAC1D,QAAgBhxB,IAAZixB,EACA,MAAM,IAAIhW,MAAJ,iCAAAza,OAC+BwwB,EAD/B,0BAAAxwB,OAEE0e,EAAK7X,GAFP,OAOV6X,EAAK8R,cAAgBC,OAErB/R,EAAK8R,cAAgB,IA/BjC,CAAAnwB,IAAA,eAAAmJ,MAAA,SAmC2BiS,EAAkBiD,GACrC,OAAQjD,EAAQqT,SACZ,IAAK,OACL,IAAK,OAED,OADApQ,EAAKvR,QAAUlL,KAAKkuB,kBAAkB9b,OAC/BpS,KAAKkuB,kBAAkBQ,WAAWlV,GAGjD,GAAIA,EAAQqT,UAAR,GAAA9uB,OAAuB0e,EAAKzU,KAA5B,aAA6C,CAI7C,IAHA,IAAMqiB,EAAS,IAAImD,GAEbZ,EAAcpT,EAAQiR,qBAAqB,KACxCjY,EAAI,EAAGA,EAAIoa,EAAY3qB,OAAQuQ,IAAK,CACzC,IAAMmc,EAAa/B,EAAYpa,GAC3Bmc,EAAWjE,gBAAkBlR,GAIjC6Q,EAAOqE,WAAWC,GAItB,OADAlS,EAAKmS,SAAWvE,EAAOjY,QAChB,EAGX,OAAO,MA5Df4b,EAAA,CAAqExB,ICA/CqC,GAAtB,SAAAC,GAAA,SAAAD,IAAA,IAAAlQ,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA6uB,GAAA,QAAAjQ,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAAytB,IAAA5P,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MAEWyP,oBAA8B,EAFzCzuB,EAKW0uB,mBALX,EAAA1uB,EAOWqL,aAPX,EAAArL,EAQW+uB,cARX,EAAA/uB,EAUWkpB,UAA6C,SAAAxJ,GAChD,OAAOhR,KAAEoT,KAAK9hB,EAAKqL,QAAS,SAAArN,GAAC,OAAI0Q,KAAEoT,KAAK9jB,EAAEd,aAAc,SAAA6N,GAAC,OAAIA,EAAE5N,OAASuiB,EAAOwP,cAXvFlvB,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAytB,EAAAC,GAAAD,EAAA,CCAA,SAAAG,IAAA5tB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAgvB,GAAAhvB,KACS4E,QADT,EAAA5E,KAES2c,eAFT,EAAA3c,KAGS4D,aAHT,EAAA5D,KAIS+M,UAJT,EAAA/M,KAKS+oB,eALT,EAAA/oB,KAO2BgI,UAP3B,ICHainB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAtQ,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAivB,GAAA,QAAArQ,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA6tB,IAAAhQ,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,WADnCnI,EAEWsvB,YAAsB,EAFjCtvB,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA6tB,EAAAC,GAAAD,EAAA,CAA8BJ,ICCjBO,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAhuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAovB,GAAAhuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAguB,GAAA9X,MAAAtX,KAAAuX,YAAA,OAAAnW,OAAA+d,EAAA,EAAA/d,CAAAguB,EAAAC,GAAAjuB,OAAAgX,EAAA,EAAAhX,CAAAguB,EAAA,EAAAhxB,IAAA,aAAAmJ,MAAA,WAEQ,OAAO,IAAI0nB,KAFnB,CAAA7wB,IAAA,kBAAAmJ,MAAA,SAK8B4mB,EAAkB1R,GACxCrb,OAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAAguB,EAAAG,WAAA,kBAAAvvB,MAAAif,KAAAjf,KAAsBmuB,EAAS1R,GAE/B,IAAM+S,EAAOrB,EAAQhD,aAAa,MAClC1O,EAAK0S,WAAsB,OAATK,GAAuBxvB,KAAKyvB,OAAOD,KAT7D,CAAApxB,IAAA,SAAAmJ,MAAA,SAYqBA,GACb,MAAc,SAAVA,QAIUhK,IAAVgK,MAIMA,MArBlB6nB,EAAA,CAAoCpB,ICDvB0B,GAAb,SAAAR,GAAA,SAAAQ,IAAA,IAAA/Q,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA0vB,GAAA,QAAA9Q,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAAsuB,IAAAzQ,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,YADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAsuB,EAAAR,GAAAQ,EAAA,CAA+Bb,ICClBc,GAAb,SAAAN,GAAA,SAAAM,IAAA,OAAAvuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA2vB,GAAAvuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAuuB,GAAArY,MAAAtX,KAAAuX,YAAA,OAAAnW,OAAA+d,EAAA,EAAA/d,CAAAuuB,EAAAN,GAAAjuB,OAAAgX,EAAA,EAAAhX,CAAAuuB,EAAA,EAAAvxB,IAAA,aAAAmJ,MAAA,WAEQ,OAAO,IAAImoB,KAFnB,CAAAtxB,IAAA,kBAAAmJ,MAAA,SAK8B4mB,EAAkB1R,GACxCrb,OAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAAuuB,EAAAJ,WAAA,kBAAAvvB,MAAAif,KAAAjf,KAAsBmuB,EAAS1R,GAGT,OADA0R,EAAQhD,aAAa,mBAEvC1O,EAAK8R,cAAgB,SAVjCoB,EAAA,CAAqC3B,ICAxB4B,GAAb,SAAAP,GACI,SAAAO,EAAoBC,GAAsB,IAAAhwB,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA4vB,IACtC/vB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAwuB,GAAA3Q,KAAAjf,QADsC6vB,UAAAhwB,EAD9C,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAwuB,EAAAP,GAAAjuB,OAAAgX,EAAA,EAAAhX,CAAAwuB,EAAA,EAAAxxB,IAAA,aAAAmJ,MAAA,WAMQ,OAAO,IAAIvH,KAAK6vB,YANxBD,EAAA,CAA+D5B,ICDlD8B,GAAb,SAAAZ,GAAA,SAAAY,IAAA,IAAAnR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA8vB,GAAA,QAAAlR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA0uB,IAAA7Q,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,WADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA0uB,EAAAZ,GAAAY,EAAA,CAA8BjB,ICAjBkB,GAAb,SAAAb,GAAA,SAAAa,IAAA,IAAApR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA+vB,GAAA,QAAAnR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA2uB,IAAA9Q,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,gBADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA2uB,EAAAb,GAAAa,EAAA,CAAmClB,ICAtBmB,GAAb,SAAAd,GAAA,SAAAc,IAAA,IAAArR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAgwB,GAAA,QAAApR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA4uB,IAAA/Q,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,WADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA4uB,EAAAd,GAAAc,EAAA,CAA8BnB,ICAjBoB,GAAb,SAAAf,GAAA,SAAAe,IAAA,IAAAtR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAiwB,GAAA,QAAArR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA6uB,IAAAhR,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,eADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA6uB,EAAAf,GAAAe,EAAA,CAAkCpB,ICArBqB,GAAb,SAAAhB,GAAA,SAAAgB,IAAA,IAAAvR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAkwB,GAAA,QAAAtR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA8uB,IAAAjR,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,WADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA8uB,EAAAhB,GAAAgB,EAAA,CAA8BrB,ICAjBsB,GAAb,SAAAjB,GAAA,SAAAiB,IAAA,IAAAxR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAmwB,GAAA,QAAAvR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAA+uB,IAAAlR,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,UADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA+uB,EAAAjB,GAAAiB,EAAA,CAAwCtB,ICA3BuB,GAAb,SAAAlB,GAAA,SAAAkB,IAAA,IAAAzR,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAowB,GAAA,QAAAxR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAAgvB,IAAAnR,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,YADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAgvB,EAAAlB,GAAAkB,EAAA,CAA+BvB,ICAlBwB,GAAb,SAAAnB,GAAA,SAAAmB,IAAA,IAAA1R,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAqwB,GAAA,QAAAzR,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAAivB,IAAApR,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,gBADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAivB,EAAAnB,GAAAmB,EAAA,CAAmCxB,ICAtByB,GAAb,SAAApB,GAAA,SAAAoB,IAAA,IAAA3R,EAAA9e,EAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAswB,GAAA,QAAA1R,EAAArH,UAAAtV,OAAA4c,EAAA,IAAAxM,MAAAuM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvH,UAAAuH,GAAA,OAAAjf,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,MAAA2e,EAAAvd,OAAA4d,EAAA,EAAA5d,CAAAkvB,IAAArR,KAAA3H,MAAAqH,EAAA,CAAA3e,MAAAjC,OAAA8gB,MACoB7W,KAAe,kBADnCnI,EAAA,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAkvB,EAAApB,GAAAoB,EAAA,CAAqCzB,ICcxB0B,GAA8B,CACvCtB,SAAU,kBAAM,IAAIG,IACpBM,UAAW,kBAAM,IAAIC,IACrBG,SAAU,kBAAM,IAAIF,GAAgCE,KACpDC,cAAe,kBAAM,IAAIH,GAAqCG,KAC9DC,SAAU,kBAAM,IAAIJ,GAAgCI,KACpDC,aAAc,kBAAM,IAAIL,GAAoCK,KAC5DC,SAAU,kBAAM,IAAIN,GAAgCM,KACpDM,QAAS,kBAAM,IAAIZ,GAA0CO,KAC7DC,UAAW,kBAAM,IAAIR,GAAiCQ,KACtDC,cAAe,kBAAM,IAAIT,GAAqCS,KAC9DC,gBAAiB,kBAAM,IAAIV,GAAuCU,MCrBhEG,GAAS,IAAIlH,gDADG,ICDtB,WAGI,SAAAmH,IAAetvB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA0wB,GAAA1wB,KAFPuwB,aAEM,EACVvwB,KAAKuwB,QAAUA,GAJvB,OAAAnvB,OAAAgX,EAAA,EAAAhX,CAAAsvB,EAAA,EAAAtyB,IAAA,eAAAmJ,MAAA,SAOwB6X,GAChB,GAAIA,KAAYpf,KAAKuwB,QACjB,OAAOvwB,KAAKuwB,QAAQnR,SAThCsR,EAAA,oDDIA,SAAA9Z,EAA2BhK,GAA3B,IAAA+jB,EAAA,OAAAja,GAAAzY,EAAA6Y,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAC2B+Z,KAAMtB,IAAI1iB,GADrC,cACU+jB,EADV5Z,EAAAwT,KAAAxT,EAAA+S,OAAA,SAEW6G,EAAS1d,MAFpB,wBAAA8D,EAAAK,SAAAR,6BAKO,SAAeia,GAAtB7F,GAAA,OAAA8F,GAAAxZ,MAAAtX,KAAAuX,0DAAO,SAAAyS,EAAyBpd,GAAzB,OAAA8J,GAAAzY,EAAA6Y,KAAA,SAAAwT,GAAA,cAAAA,EAAAtT,KAAAsT,EAAAzT,MAAA,cAAAyT,EAAAR,OAAA,SACI2G,GAAOM,YAAYnkB,IADvB,wBAAA0d,EAAAlT,SAAA4S,6BEXQ,IAAAgH,GAAA,CACXC,IAAK,CACDC,sFCGKC,GAAoE,SAC7EC,EACAC,EAF6Ej0B,GAAA,IAG3E6zB,EAH2E7zB,EAG3E6zB,IAH2E,OAK7EG,EAAQE,KACJrtB,aAAOstB,qBAAWtkB,GAAgBQ,UAClC+jB,aAAS,SAAA/hB,GAAM,OACXwH,aAAKga,EAAIC,YAAYL,UAAUphB,EAAO7I,UAAU0qB,KAC5C7zB,aAAI,SAAAyG,GAAK,OAAI+I,GAAgBwkB,QAAQ,CAAE7kB,IAAK6C,EAAO7I,QAAS1C,YAC5DwtB,aAAW,SAACC,GAAD,OACPC,aAAG3kB,GAAgB4kB,QAAQ,CAAEjlB,IAAK6C,EAAO7I,QAAS+qB,wCClBhDG,GAAtB,SAAAA,IAAA1wB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA8xB,ICEaC,GAAb,SAAAC,GACI,SAAAD,EAAmBE,GAAc,IAAApyB,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA+xB,IAC7BlyB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA2wB,GAAA9S,KAAAjf,QAD6BiyB,OAAApyB,EADrC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA2wB,EAAAC,GAAAD,EAAA,CAAqCD,ICAfI,GAAtB,SAAAF,GAAA,SAAAE,IAAA,OAAA9wB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAkyB,GAAA9wB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA8wB,GAAA5a,MAAAtX,KAAAuX,YAAA,OAAAnW,OAAA+d,EAAA,EAAA/d,CAAA8wB,EAAAF,GAAAE,EAAA,CAA+CJ,ICClCK,GAAb,SAAAC,GACI,SAAAD,IAAuF,IAAAtyB,EAApE6rB,EAAoEnU,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAA9C,EAAU1Q,EAAoC0Q,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAR,OAAQ,OAAAnW,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAmyB,IACnFtyB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA+wB,GAAAlT,KAAAjf,QADmF0rB,cAAA7rB,EAAAgH,SAAAhH,EAD3F,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA+wB,EAAAC,GAAAD,EAAA,CAA6CD,ICDhCG,GAAb,SAAAD,GACI,SAAAC,IAAsE,IAAAxyB,EAAnDyyB,EAAmD/a,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjC,EAAUgb,EAAuBhb,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAH,EAAG,OAAAnW,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAqyB,IAClExyB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAixB,GAAApT,KAAAjf,QADkEsyB,UAAAzyB,EAAA0yB,YAAA1yB,EAD1E,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAixB,EAAAD,GAAAC,EAAA,CAAkCH,ICArBM,GAAb,SAAAR,GACI,SAAAQ,EAAmBC,GAAyB,IAAA5yB,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAwyB,IACxC3yB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAoxB,GAAAvT,KAAAjf,QADwCyyB,UAAA5yB,EADhD,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAoxB,EAAAR,GAAAQ,EAAA,CAA0CV,IAU7BY,GAAb,WACI,SAAAA,EAAmBrkB,EAAoBD,GAAchN,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA0yB,GAAA1yB,KAAAqO,MAAArO,KAAAoO,MADzD,OAAAhN,OAAAgX,EAAA,EAAAhX,CAAAsxB,EAAA,EAAAt0B,IAAA,WAAAmJ,MAAA,WAIQ,OAAOvH,KAAKoO,IAAMpO,KAAKqO,QAJ/BqkB,EAAA,GAQaC,GAAb,WACI,SAAAA,EAAmBngB,GAAYpR,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA2yB,GAAA3yB,KAAAwS,IADnC,OAAApR,OAAAgX,EAAA,EAAAhX,CAAAuxB,EAAA,EAAAv0B,IAAA,WAAAmJ,MAAA,WAIQ,OAAO,MAJforB,EAAA,GClBaC,GAAb,SAAAZ,GACI,SAAAY,EAAmB/E,GAAiB,IAAAhuB,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA4yB,IAChC/yB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAwxB,GAAA3T,KAAAjf,QADgC6tB,QAAAhuB,EADxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAwxB,EAAAZ,GAAAY,EAAA,CAAwCd,ICA3Be,GAAb,SAAAb,GACI,SAAAa,EACWC,EACAC,EACAC,GACT,IAAAnzB,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA6yB,IACEhzB,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAyxB,GAAA5T,KAAAjf,QADF8yB,aAAAjzB,EAAAkzB,WAAAlzB,EAAAmzB,wBAAAnzB,EALN,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAyxB,EAAAb,GAAAa,EAAA,CAAkDf,ICArCmB,GAAb,SAAAb,GAAA,SAAAa,IAAA,OAAA7xB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAizB,GAAA7xB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA6xB,GAAA3b,MAAAtX,KAAAuX,YAAA,OAAAnW,OAAA+d,EAAA,EAAA/d,CAAA6xB,EAAAb,GAAAa,EAAA,CAAiDf,ICepCgB,GAAb,oBAAAA,IAAA9xB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAkzB,GAAA,OAAA9xB,OAAAgX,EAAA,EAAAhX,CAAA8xB,EAAA,EAAA90B,IAAA,SAAAmJ,MAAA,SACWqkB,GACH,IAAMxZ,EAAyB,GAE3ByZ,EAAQ,EACRsH,EAAiB,EAErB,EAAG,CACC,GCzBwB,KDyBpBvH,EAAEC,GAA+B,CAC7BsH,IAAmBtH,GACnBzZ,EAAO7T,KAAK,IAAIwzB,GAAgBnG,EAAEpsB,UAAU2zB,EAAgBtH,KAGhE,IAAMuH,EAAQpzB,KAAKqzB,UAAUzH,EAAGC,EC7Bd,KD8BlBA,EAAQuH,EAAMvH,MAEdzZ,EAAO7T,KAAKyB,KAAKszB,sBAAsBF,EAAM7rB,YAC1C,IC/BuB,MD+BnBqkB,EAAEC,GAwBT,SAvBA,GAAIA,EAAQ,GC/BsB,MD+BjBD,EAAEC,EAAQ,GAA0C,CAG7DsH,MADJtH,GAEIzZ,EAAO7T,KAAK,IAAIwzB,GAAgBnG,EAAEpsB,UAAU2zB,EAAgBtH,KAGhEA,IACA,IAAM3gB,EAAUlL,KAAKqzB,UAAUzH,EAAGC,ECtCd,KDuCpBA,EAAQ3gB,EAAQ2gB,MAEhBzZ,EAAO7T,KAAKyB,KAAKuzB,6BAA6BroB,EAAQ3D,YACnD,CACC4rB,IAAmBtH,GACnBzZ,EAAO7T,KAAK,IAAIwzB,GAAgBnG,EAAEpsB,UAAU2zB,EAAgBtH,KAGhE,IAAM3gB,EAAUlL,KAAKqzB,UAAUzH,EAAGC,EC/Cd,KDgDpBA,EAAQ3gB,EAAQ2gB,MAEhBzZ,EAAO7T,KAAKyB,KAAKwzB,6BAA6BtoB,EAAQ3D,SAM9D4rB,EAAiBtH,UACVA,EAAQD,EAAE3pB,QAMrB,OAJIkxB,IAAmBvH,EAAE3pB,QACrBmQ,EAAO7T,KAAK,IAAIwzB,GAAgBnG,EAAEpsB,UAAU2zB,KAGzC/gB,IAnDf,CAAAhU,IAAA,wBAAAmJ,MAAA,SAsDiC2D,GAGzB,IAFAA,EAAUA,EAAQ4O,eAENva,WCnEkB,UDmEiB,CAM3C,IAIIk0B,EAJEC,EAAY,IAAIvB,GAEhBwB,EAAiBzoB,EAAQ6f,QCzEI,KD4EnC,IAAwB,IAApB4I,EACAF,EAAYvoB,MACT,CACHuoB,EAAYvoB,EAAQ1L,UAAU,EAAGm0B,GAEjC,IAAMC,EAAe1oB,EAAQ1L,UAAUm0B,EAAiB,GAClD9sB,EAAS8kB,GAAa0B,uBAAuBuG,GACnD,QAAer2B,IAAXsJ,EACA,MAAM,IAAI2R,MAAJ,uDAAAza,OACqDmN,IAI/DwoB,EAAU7sB,OAASA,EAIvB,OADA6sB,EAAUhI,YAAc1rB,KAAK6zB,iBAAiBJ,GACvCC,EAGX,GAAIxoB,EAAQ3L,WCjGgB,QDiGiB,CACzC,IAGIu0B,EAHEC,EAAe,IAAI1B,GACnBsB,EAAiBzoB,EAAQ6f,QClGI,KDqGnC,IAAwB,IAApB4I,EACAG,EAAU5oB,OAIV,GAFA4oB,EAAU5oB,EAAQ1L,UAAU,EAAGm0B,GAC/BI,EAAazB,QAAU9R,OAAOtV,EAAQ1L,UAAUm0B,EAAiB,IAC7D7H,MAAMiI,EAAazB,SACnB,MAAM,IAAI9Z,MAAJ,uBAAAza,OAAiC+1B,EAAjC,2BAId,GAAIA,EAAQ7xB,OChHY,ODgHiBA,SACrC8xB,EAAaxB,UAAY/R,OAAOsT,EAAQt0B,UCjHpB,ODiHkDyC,SAClE6pB,MAAMiI,EAAaxB,YACnB,MAAM,IAAI/Z,MAAJ,sBAAAza,OAAgC+1B,EAAhC,2BAId,OAAOC,EAGX,MCxHmC,wBDwH/B7oB,EACO,IAAI+nB,GAGR,IAAIlB,GAAgB7mB,KArHnC,CAAA9M,IAAA,+BAAAmJ,MAAA,SAwHwC2D,GAMhC,GAD2B,aAAa8oB,KAAK9oB,GACrB,CACpB,IAAMunB,EAAUzyB,KAAKi0B,iBAAiB/oB,GACtC,OAAO,IAAIsnB,GAAqBC,GAGpC,IAAM5E,EAAQ7tB,KAAKk0B,YAAYhpB,EAAS,KACxC,OAAO,IAAI0nB,GAAmB/E,KApItC,CAAAzvB,IAAA,mBAAAmJ,MAAA,SAuI4B2D,GAQpB,IAPA,IAAMkH,EAAyB,GAC3B+hB,EAAqC,KAErCC,EAAc,EACdC,GAAe,EAEf7hB,EAAI,IACK,CACT,KAAOA,EAAItH,EAAQjJ,OAAQuQ,IAAK,CAC5B,IAAMlC,EAAIpF,EAAQsH,GAElB,GAAKsZ,MAAMtL,OAAOlQ,IAAlB,CAIA,GAAU,MAANA,EAAJ,CAWA,GAAU,MAANA,EACA,MAGJ,MAAM,IAAIkI,MAAM,4BAA8BlI,GAd1C,GAAI+jB,EACA,MAAM,IAAI7b,MAAM,gDAEpB6b,GAAe,EAEfF,EAAgB,IAAIzB,GAAYlS,OAAOtV,EAAQ1L,UAAU40B,EAAa5hB,IAAK,GAC3E4hB,EAAc5hB,EAAI,GAW1B,GAAIA,IAAM4hB,EACN,MAAM,IAAI5b,MAAJ,qCAAAza,OAA+CyU,EAA/C,gBAAAzU,OAA+DmN,EAA/D,MAGV,IAAMopB,EAAM9T,OAAOtV,EAAQ1L,UAAU40B,EAAa5hB,IASlD,GARI6hB,EACCF,EAA8B/lB,IAAMkmB,EAErCH,EAAgB,IAAIxB,GAAa2B,GAGrCliB,EAAO7T,KAAK41B,GAER3hB,IAAMtH,EAAQjJ,OACd,MAGJkyB,EAAgB,KAChBE,GAAe,EACfD,IAAgB5hB,EAGpB,OAAOJ,IA/Lf,CAAAhU,IAAA,cAAAmJ,MAAA,SAkMuBA,EAAegtB,GAI9B,IAHA,IAAIC,EAAa,EACbpiB,EAAmB,GAEhB7K,EAAMtF,OAASuyB,EAAa,GAAG,CAClC,IAAIC,GAAe,EAEO,MAAtBltB,EAAMitB,KACNC,GAAe,EACfD,KAGJ,IAAIhiB,EAAIgiB,EACR,EAAG,CACC,GAAIjtB,EAAMiL,KAAO+hB,EAAW,CACxB,GAAIE,EAAc,SAElBriB,EAAO7T,KAAKgJ,EAAM/H,UAAUg1B,EAAYhiB,IACxCgiB,EAAahiB,EAAI,EACjB,MAGJ,GAAgB,KAAZjL,EAAMiL,GAAW,CACjB,IAAKiiB,EACD,SAGJ,GAAIjiB,GAAKjL,EAAMtF,OAAS,EAGpB,OADAmQ,EAAO7T,KAAKgJ,EAAM/H,UAAUg1B,EAAYhiB,GAAGkiB,QAAQ,KAAM,MAClDtiB,EAGX,IAAMuiB,EAAWptB,EAAMiL,EAAI,GAC3B,GAAgB,KAAZmiB,EAAiB,CACjBniB,IACA,SAGJ,GAAImiB,GAAYJ,EACZ,MAAM,IAAI/b,MAAM,qDAEpBpG,EAAO7T,KAAKgJ,EAAM/H,UAAUg1B,EAAYhiB,GAAGkiB,QAAQ,KAAM,MACzDF,EAAahiB,EAAI,EACjB,MAGJ,GAAIA,GAAKjL,EAAMtF,OAAS,EAAG,CACvB,GAAIwyB,EACA,MAAM,IAAIjc,MAAM,kCAIpB,OADApG,EAAO7T,KAAKgJ,EAAM/H,UAAUg1B,EAAYhiB,EAAI,IACrCJ,WAEJI,EAAIjL,EAAMtF,QAGzB,OAAOmQ,IA5Pf,CAAAhU,IAAA,+BAAAmJ,MAAA,SA+PwC2D,GAChC,IAAM0pB,EAAW,IAAI/B,GAA6B,IAE5CgC,EAAgB3pB,EAAQ6f,QCvQO,KDwQ/B+J,EAAY5pB,EAAQ6f,QCvQY,KDuRtC,OAdmB,IAAf+J,IACAF,EAAS5B,sBAAwBhzB,KAAK6zB,iBAClC3oB,EAAQ1L,UAAUs1B,EAAY,IAElC5pB,EAAUA,EAAQ1L,UAAU,EAAGs1B,KAGZ,IAAnBD,EACAD,EAAS9B,WAAa5nB,GAEtB0pB,EAAS7B,SAAW7nB,EAAQ1L,UAAU,EAAGq1B,GACzCD,EAAS9B,WAAa5nB,EAAQ1L,UAAUq1B,EAAgB,EAAG3pB,EAAQjJ,SAGhE2yB,IAnRf,CAAAx2B,IAAA,mBAAAmJ,MAAA,SAsR4BA,GACpB,GAAIA,EAAMtF,OCjSoB,SDiSWA,OAAQ,CAC7C,IAAM4pB,EAAQrL,OAAOjZ,EAAM/H,UClSD,SDkSiCyC,SAC3D,GAAI6pB,MAAMD,GACN,MAAM,IAAIrT,MAAJ,wBAAAza,OAAkCwJ,EAAlC,2BAGV,OAAOskB,EAGX,OAAO,IAhSf,CAAAztB,IAAA,YAAAmJ,MAAA,SAoSQA,EACAskB,EACAkJ,GAKA,IAHA,IAAM9yB,EAASsF,EAAMtF,OACfuyB,EAAa3I,IAEVA,EAAQ5pB,GAAQ,CACrB,IAAM+yB,EAAOztB,EAAMskB,GAEnB,GC7TsB,OD6TlBmJ,GAKJ,GAAIA,IAASD,EAAS,CAClBlJ,IACA,YANAA,IAUR,MAAO,CAAEA,QAAOtkB,MAAOA,EAAM/H,UAAUg1B,EAAa,EAAG3I,EAAQ,QAzTvEqH,EAAA,GEJa+B,GAAb,oBAAAA,IAAA7zB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAi1B,GAAA,OAAA7zB,OAAAgX,EAAA,EAAAhX,CAAA6zB,EAAA,OAAA72B,IAAA,qBAAAmJ,MAAA,SACqC2tB,EAA2BxU,GACxD,IAAMyU,EAAkB,IAAI9iB,MAEtBzO,EAAU2K,KAAE6mB,QACdF,EACKjxB,OAAO,SAAApG,GAAC,OAAIA,aAAas0B,KACzB10B,IAAI,SAAAI,GAAC,OAAIA,IACd,eAGJ,IAAK,IAAMO,KAAOwF,EACVA,EAAQyxB,eAAej3B,IAAM,WAC7B,IAAMmL,EAAS3F,EAAQxF,GAAK,GAExB8uB,EAAiB3jB,EAAO1C,OAE5B,GAAuB,SAAnBqmB,EAA2B,CAC3B,IAAMoI,EAAc5U,EAAe9iB,KAC/B,SAAAC,GAAC,OAAIA,EAAE6tB,cAAgBniB,EAAOmiB,mBAEdnuB,IAAhB+3B,IACApI,EAAiBoI,EAAYzuB,QAIrCsuB,EAAgB52B,KAAK,CAAEmtB,YAAaniB,EAAOmiB,YAAa7kB,OAAQqmB,IAdnC,GAkBrC,OAAOiI,IA9Bf,CAAA/2B,IAAA,kBAAAmJ,MAAA,SAiCkC2tB,GAC1B,IAAMK,EAAOhnB,KAAE6mB,QACXF,EAAUjxB,OAAO,SAAApG,GAAC,OAAIA,aAAaw0B,KAAc50B,IAAI,SAAAI,GAAC,OAAIA,IAC1D,aAEJ,OAAOuD,OAAO0Q,OAAOyjB,GAAM93B,IAAI,SAAAI,GAAC,OAAIA,EAAE,OAtC9C,CAAAO,IAAA,SAAAmJ,MAAA,SA0CQ2tB,EACAtxB,EACA2xB,EACAjkB,EACAjS,EACAm2B,EACAzd,GAEA,IAAI3F,EAAS,GACTqjB,EAAqD,KAFnD5X,GAAA,EAAAC,GAAA,EAAAC,OAAAxgB,EAAA,IAIN,QAAAygB,EAAAC,EAAuBiX,EAAvBhX,OAAAC,cAAAN,GAAAG,EAAAC,EAAApH,QAAAuH,MAAAP,GAAA,EAAkC,KAAvB+W,EAAuB5W,EAAAzW,MAC9B,GAAIqtB,aAAoB7C,GACpB3f,GAAUwiB,EAAS3C,UAChB,GAAI2C,aAAoBzC,GACvBpa,EAAQ2d,kBACRtjB,GAAU,MAEdA,GAAUxO,EAAQgxB,EAASlJ,aAAa5uB,KACpCib,EAAQ2d,kBACRtjB,GAAU,MAGdqjB,EAAqBb,OAClB,GAAIA,aAAoBvC,GAAc,CACrCta,EAAQ4d,WACRvjB,GAAU,MAGd,IAAMwjB,EAAML,EAAKX,EAASrC,WAEtBngB,GADQ,IAARwjB,EACUv2B,EAAU,UAEd,GAAAtB,OAAO63B,EAAP,KAAA73B,OAAcsB,EAAU,SAG9B0Y,EAAQ4d,WACRvjB,GAAU,WAEX,GAAIwiB,aAAoB/B,GAA8B,CACzD,IAAIgD,OAAwB,EAC5B,QAAuCt4B,IAAnCq3B,EAAS5B,sBACT6C,EAAmBjB,EAAS5B,2BACzB,GAA2B,OAAvByC,EACPI,EAAmBJ,EAAmB/J,gBACnC,CACH,IAAMoK,EAAa10B,OAAOkY,KAAK1V,GAC/B,GAA0B,IAAtBkyB,EAAW7zB,OACX,SAGJ4zB,EAAmBrV,OAAOsV,EAAW,IAGzC,IACM7D,EAAyB,WADhBruB,EAAQiyB,GACHhvB,OAAsB+tB,EAAS9B,WAAa8B,EAAS7B,cAC5Dx1B,IAAT00B,IACA7f,GAAU6f,QAEX,GAAI2C,aAAoBhC,GAAoB,CAE/CxgB,GADaojB,EAAU9X,qBAAqBkX,EAAS/G,MAAO,kBAAM,SAE/D,GAAI+G,aAAoBpC,GAAsB,CACjD,IAAMtW,EAASsZ,EAAU9X,qBAAqBkX,EAASnC,QAAS,SAAA50B,GAAC,OAAIA,EAAEk4B,aACvE,QAAex4B,IAAX2e,EACA,SAGJ,GAAIA,aAAkBwW,GAGlBtgB,GADI8J,EAAO7N,IAAMsE,KAAKC,OAAOsJ,EAAO9N,IAAM8N,EAAO7N,KAAOmnB,EAAU1P,kBAE3D5J,aAAkByW,KACzBvgB,GAAU8J,EAAO1J,QAEdoiB,aAAoB3B,KAC3B7gB,GAAUd,IArEZ,MAAA+M,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAyEN,OAAO3L,MA1Hf6iB,EAAA,GCMsBe,GAAtB,SAAAC,GAII,SAAAD,EAAsBE,EAAwB9W,EAAkBlH,GAAmB,IAAArY,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAg2B,IAC/En2B,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA40B,GAAA/W,KAAAjf,KAAMof,EAAUlH,KAD+Dge,aAAAr2B,EAJvF,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA40B,EAAAC,GAAA70B,OAAAgX,EAAA,EAAAhX,CAAA40B,EAAA,EAAA53B,IAAA,iBAAAmJ,MAAA,SAQ6BkV,EAAaD,GAClC,IAAMgZ,EAAYW,KACZ/jB,EAAS,IAAIC,MAEb4f,EAAOjyB,KAAKo2B,WAAWZ,EAAW/Y,GAJ0B4Z,EAKnCr2B,KAAKs2B,WAAWrE,EAAMxV,EAAM,KAAM+Y,GAAzDe,EAL0DF,EAK1DE,UAAW3yB,EAL+CyyB,EAK/CzyB,QAEblE,EAAQM,KAAKw2B,gBAAgBD,EAAW9Z,EAAM7Y,EAAS4xB,GAQ7D,GAPApjB,EAAO7T,KACHwE,GAAsB,CAClBrD,QACA+Y,SAAW+c,EAA8B/c,SAAS8E,mBAItDhP,KAAEoT,KAAKlF,EAAKmS,WAERjc,KAAK8K,UAAYhB,EAAK6R,oBAAqB,CAC3C,IAAMmI,EAAM,IAAIrgB,KAChBqgB,EAAIne,WAAWme,EAAIle,aAAekE,EAAK8R,eAEvCnc,EAAO7T,KAAKwE,GAAwB/C,KAAK02B,eAAela,EAAS5Y,EAAS6yB,KAIlF,OAAOrkB,IAjCf,CAAAhU,IAAA,yBAAAmJ,MAAA,SAoCqCkV,EAAaka,GAC1C,IAAMnB,EAAYW,KAElB,IAAI,IAAAS,EAC0B52B,KAAK62B,mBAAmBrB,EAAW/Y,EAAMka,GAA3D1E,EADR2E,EACQ3E,KAAMruB,EADdgzB,EACchzB,QACN2yB,EAAcv2B,KAAKs2B,WAAWrE,EAAMxV,EAAM7Y,GAAW,GAAI4xB,GAAzDe,UAEF72B,EAAQM,KAAK82B,wBAAwBP,EAAW9Z,EAAM+Y,EAAWmB,GACvE,MAAO,CACH5zB,GAAsB,CAClBrD,QACA+Y,SAAW+c,EAA8B/c,SAAS8E,mBAG5D,MAAOtU,GAEL,MAAO,CAAClG,GAA0B0K,QAAQzN,KAAKk2B,gBApD3D,CAAA93B,IAAA,iBAAAmJ,MAAA,SAsE6BiV,EAAkB5Y,EAA2B6yB,GAClE,MAAO,CACHA,IAAKA,EACLve,UAAWlY,KAAKkY,UAChB0C,aAAc4B,EACdma,MAAO,CAAEhW,eAAgB/c,MA3ErC,CAAAxF,IAAA,aAAAmJ,MAAA,SA+EyBiuB,EAA+B5a,GAChD,OAAOwb,GAAWZ,EAAW5a,EAAc5a,KAAKk2B,cAhFxD,CAAA93B,IAAA,aAAAmJ,MAAA,SAoFQ0qB,EACAxV,EACAkE,EACA6U,GAEA,OAAOc,GAAWrE,EAAMxV,EAAMkE,EAAgB6U,EAAWx1B,KAAKk2B,cAzFtE,CAAA93B,IAAA,qBAAAmJ,MAAA,SA6FQiuB,EACA5a,EACA+b,GAEA,IASI/yB,EATE5G,EAAOgD,KAAKk2B,WAAW/hB,aAEvB4iB,EAAYnc,EAAagU,SAAS3qB,OAAO,SAAApG,GAAC,OAC5C0Q,KAAEoT,KAAK9jB,EAAEd,aAAc,SAAA6N,GAAC,OAAIA,EAAE5N,KAAK8c,gBAAkB9c,MAEzD,GAAyB,IAArB+5B,EAAU90B,OACV,MAAM,IAAIuW,MAAM,uBAYpB,OAPI5U,EADA,mBAAoB+yB,EACVA,EAAMhW,oBAENpjB,EAKP,CAAE00B,KAFOuD,EAAU9X,qBAAqBqZ,EAAW,SAAAl5B,GAAC,OAAIA,EAAEiP,SAC5C/P,aAAaa,KAAK,SAAAC,GAAC,OAAIA,EAAEb,OAASA,IAAOkO,QAC/CtH,eAnHvBoyB,EAAA,CCXA,WAII,SAAAgB,EAAsB5X,EAAyBlH,GAAoB9W,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAg3B,GAAAh3B,KAAAof,WAAApf,KAAAkY,YAAAlY,KAH1D0O,qBAGyD,EAAA1O,KAFlEmY,mBAEkE,EAC9DnY,KAAKmY,cAAgB,CAACiH,GAL9B,OAAAhe,OAAAgX,EAAA,EAAAhX,CAAA41B,EAAA,EAAA54B,IAAA,aAAAmJ,MAAA,WASQ,IACMiV,EADY2Z,KACQc,WAAWj3B,KAAKof,UAE1C,OAAQrc,GAAkByZ,IAA1Bze,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAuCpB,KAAKk3B,eAAe1a,EAAQC,KAAeD,OAZ1F,CAAApe,IAAA,qBAAAmJ,MAAA,SAeuBkV,EAAsBka,GACrC,OAAO32B,KAAKm3B,uBAAuB1a,EAAMA,KAAeka,EAAOla,OAhBvEua,EAAA,IDkIO,SAASV,GACZrE,EACAxV,EACAkE,EACA6U,EACAU,GAEA,IAAMhB,GAAY,IAAIhC,IAAqBkE,OAAOnF,GAG5CruB,EAAUuyB,GACZX,EAHuBP,GAAcoC,mBAAmBnC,EAAWzY,EAAK7Y,SAKxE+c,GAAkB,GAClBlE,EAAK1P,MAGHuqB,EAAerC,GAAcsC,gBAAgBrC,GAE7CsC,EAAkD,GAbR3Z,GAAA,EAAAC,GAAA,EAAAC,OAAAxgB,EAAA,IAchD,QAAAygB,EAAAC,EAAqBra,EAArBsa,OAAAC,cAAAN,GAAAG,EAAAC,EAAApH,QAAAuH,MAAAP,GAAA,EAA8B,KAAnBtU,EAAmByU,EAAAzW,MAC1BiwB,EAAejuB,EAAOsiB,OAAStiB,EAAOA,QAfM,MAAA8U,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAkBhD,IAAMwX,EAAoC,GAlBMvV,GAAA,EAAAC,GAAA,EAAAC,OAAA3iB,EAAA,IAmBhD,QAAA4iB,EAAAC,EAAsBkX,EAAtBpZ,OAAAC,cAAA6B,GAAAG,EAAAC,EAAAvJ,QAAAuH,MAAA4B,GAAA,EAAoC,KAAzByX,EAAyBtX,EAAA5Y,MAChCguB,EAAKkC,EAAQlF,WAAaiD,EAAUkC,QAAQD,EAAQnF,UApBR,MAAAjU,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAuBhD,IAAM5O,EAAsBqmB,GAAMC,WAAWj0B,SAAS2N,oBAYtD,MAAO,CAAEilB,UAVStB,GAAc4C,OAC5B3C,EACAsC,EACAjC,EACAjkB,EACA,SAAAzT,GAAC,OAAIq4B,EAAW72B,UAAX,sBAAAtB,OAA2CF,KAChD23B,EACA,CAAEE,iBAAiB,EAAMC,UAAU,IAGR/xB,WAG5B,SAASwyB,GACZZ,EACA5a,EACAsb,GAEA,IAAMl5B,EAAOk5B,EAAW/hB,aAElB2jB,EAAiBld,EAAa1P,QAAQjH,OAAO,SAAApG,GAAC,OAChD0Q,KAAEoT,KAAK9jB,EAAEd,aAAc,SAAA6N,GAAC,OAAIA,EAAE5N,KAAK+6B,sBAAwB/6B,MAG/D,OADgBw4B,EAAU9X,qBAAqBoa,EAAgB,SAAAj6B,GAAC,OAAIA,EAAEiP,SACvD/P,aAAaa,KAAK,SAAAC,GAAC,OAAIA,EAAEb,OAASA,IAAOkO,QEjM7C,IAAA8sB,GAAA,CACXjuB,KAAM,UACNkuB,MAAO,UACPC,KAAM,UACNC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,MAAO,WACPC,eAAgB,UAChBC,KAAM,YC2BJ31B,GAAgB,CAClBwS,UAAWvS,GAA0B0K,QACrC3N,SAAUiD,GACVR,UAAWQ,IAiKf,IAAMhC,GAAY9D,YACdwG,YA1KoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,WAClB3R,QAASlE,EAAMmE,KAAKD,UA0KhBd,IAEJ9B,qBAnKW,SAACC,GAAD,OACXC,uBAAa,CACTuN,KAAKrN,OAAAC,EAAA,EAAAD,CAAA,GtDvCF,CACHsN,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0BsD8B3B,CAEAD,OAAQ,YAEZijB,cAAct3B,OAAAC,EAAA,EAAAD,CAAA,GtD3CX,CACHsN,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,2BsDqC/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAA6B,EAAA,EAAA7B,CAAA,CACHmD,MAAO,QACPkP,aAAc,IACbxS,EAAMmC,YAAY2G,KAAK,MAAQ,CAC5BX,SAAU,WAGlBuvB,YAAa,CACTpkB,WAAY,SACZ/C,UAAW,IAEfonB,cAAcx3B,OAAA6B,EAAA,EAAA7B,CAAA,CACV+J,QAA8B,EAArBlK,EAAMS,QAAQC,MACtBV,EAAMmC,YAAYC,GAAG,MAAQ,CAC1B8H,QAA8B,EAArBlK,EAAMS,QAAQC,KACvB4E,MAA4B,GAArBtF,EAAMS,QAAQC,OAG7Bk3B,yBAA0B,CACtBr3B,QAAS,OACTgU,eAAgB,WAChBhE,UAAWvQ,EAAMS,QAAQC,MAE7Bm3B,cAAe,CACXnnB,QAAS,GACTH,UAAW,QAiInBtU,IANcD,CAjBlB,SAA8BgD,GAAc,IAChCC,EAAmBD,EAAnBC,QAASR,EAAUO,EAAVP,MACjB,OAAc,OAAVA,EACOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAG/B/O,EAAMq5B,WACClxB,EAAA,qBAAKlH,UAAWT,EAAQuO,MAtGvC,SAA2BxO,GAAc,IAC7BP,EAAuCO,EAAvCP,MAAOkE,EAAgC3D,EAAhC2D,QAAS0R,EAAuBrV,EAAvBqV,UAAWpV,EAAYD,EAAZC,QAC7BqJ,EAAS3F,EAAQhG,KAAK,SAAAC,GAAC,OAAIA,EAAE+G,KAAOlF,EAAMs5B,iBAChD,QAAez7B,IAAXgM,EAEA,OADA+L,EAAUrB,GAAahU,IAChB4H,EAAA,0BAGX,IAAMoxB,EAAS,SAACC,GAAD,OACX,IAAIroB,GAAiBoD,GAAahU,IAAQg5B,OAAOC,EAAUj5B,EAAOsJ,IAEhE4vB,EAAc1hB,aAAU,CAC1B9F,QAAS,EACTynB,UAAW,cACXniB,KAAM,CAAEtF,QAAS,EAAGynB,UAAW,qBAGnC,OACIvxB,EAAA,cAACmQ,GAAA,EAASH,IAAV,CAAc/P,MAAOqxB,GACjBtxB,EAAA,cAAC1J,EAAA,EAAD,CAAOwC,UAAWT,EAAQ04B,eACtB/wB,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,KAAK6K,UAAU,MAC/B5E,EAAA,cAAClD,EAAA,EAAD,CACIC,GAAG,uCACHqO,KAAM,CAAEnW,KAAMyM,EAAOzM,SAG7B+K,EAAA,qBAAKlH,UAAWT,EAAQ24B,0BACpBhxB,EAAA,cAAC1J,EAAA,EAAD,CACIyD,QAAQ,YACR2C,MAAM,UACNuD,MAAO,CAAE3E,YAAa,IACtB7E,QAAS,kBAAM26B,EAAO,WAEtBpxB,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,8BAElBiD,EAAA,cAAC1J,EAAA,EAAD,CAAQyD,QAAQ,YAAY2C,MAAM,YAAYjG,QAAS,kBAAM26B,EAAO,UAChEpxB,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,gCAkEQy0B,CAAkBp5B,IAGrC,SAAnBP,EAAMw5B,SA7Dd,SAAuBj5B,GAAc,IACzBC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAEtBsW,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,6BADlB,IACgDiD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,0BAA2B,IACrFiD,EAAA,uBACIA,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,8BAK1B,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQw4B,cAAep6B,QAAS,kBAAMgX,EAAUrB,GAAahU,MACzE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAkBvhB,QAAStD,KACrD5M,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ44B,cAAev0B,MAAM,WAChDsD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,mCAElBiD,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,KA0CvCujB,CAAct5B,GApC7B,SAAwBA,GAAc,IAC1BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MACtBsW,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,uBACIA,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,8BACb,IACLiD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,0BAJlB,IAI6CiD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,6BAI/D,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQw4B,cAAep6B,QAAS,kBAAMgX,EAAUrB,GAAahU,MACzE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAkBvhB,QAAStD,KACrD5M,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ44B,cAAev0B,MAAM,WAChDsD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,oCAElBiD,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,KAmBvCwjB,CAAev5B,KAsBjB4Q,GAAb,WAGI,SAAAA,EAAoBqlB,GAAyB90B,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA6Q,GAAA7Q,KAAAk2B,aAAAl2B,KAF7C0O,gBAAkBspB,GAAOM,YAEmBt4B,KAErCkY,UAAY,mBAFyBlY,KAGrCmY,cAAgB,CAAC,WAAY,gBANxC,OAAA/W,OAAAgX,EAAA,EAAAhX,CAAAyP,EAAA,EAAAzS,IAAA,SAAAmJ,MAAA,SAQkB2xB,EAAuBn2B,EAAwBwG,GACzD,IAAMisB,EAAYW,KACZ/W,EAAwB,SAAb8Z,EAAsB,WAAa,eAC9C1c,EAAUgZ,EAAUyB,WAAW7X,GAC/B3C,EAAOD,EAAQC,KAEfgd,EAAerD,GAAWZ,EAAW/Y,EAAMzc,KAAKk2B,YAK9CK,EAAcD,GAJZ,QAAAv4B,OAAWiC,KAAKk2B,WAAW72B,UACjC,kCADM,MAAAtB,OAEJ07B,GAIFhd,EACA,CAAC,CAAEoP,MAAO,GAAItiB,WACdisB,EACAx1B,KAAKk2B,YALDK,UAQRxzB,EAAQR,UAAUia,GAElB,IAAM9c,EAA+B,CACjCq5B,YAAY,EACZC,eAAgBzvB,EAAO3E,GACvB00B,gBAAiB/C,EACjB2C,YAEJn2B,EAAQjD,SAAS,CAAEJ,QAAO+Y,SAAU+c,EAAU/c,SAAS8E,oBAnC/D,CAAAnf,IAAA,aAAAmJ,MAAA,WAuCQ,IAAMiuB,EAAYkE,KACZnwB,EAAS4sB,GACXX,EACA,CAAC,IAAI/J,GAAc,EAAG,SACtB,GACA,IACF,GAAGliB,OAEL,MAAO,CACHvJ,KAAKF,SACD,CAAEi5B,YAAY,EAAMC,eAAgBzvB,EAAO3E,IAC3C4wB,EAAU/c,SAAS8E,oBAlDnC,CAAAnf,IAAA,WAAAmJ,MAAA,SAwDQ7H,GAEU,IADV+Y,EACUlB,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GADiC,KAE3C,OAAOxU,GAAsB,CAAErD,QAAO+Y,eA3D9C,CAAAra,IAAA,qBAAAmJ,MAAA,WA+DQ,MAAM,IAAIiR,MAAM,2BA/DxB,CAAApa,IAAA,SAAAmJ,MAAA,WAmEQ,OAAOM,EAAA,cAAC8xB,GAAD,UAnEf9oB,EAAA,GChMM/N,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SAuDjC,IAAM1M,GAAY9D,YACdwG,YA7DoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aA8DdzS,IAEJ9B,qBAzDW,SAACC,GAAD,OACXC,uBAAa,CACTuN,KvD3BG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0BuDmB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OAkDnC/D,IANcD,CApClB,SAA4BgD,GAAc,IAC9BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,uBAItB,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACpBrD,EAAA,cAAC+P,GAAA,OAAD,CACIV,OAAQA,UAAO0iB,OACf3iB,KAAM,CAAEmiB,UAAW,0BACnBS,GAAI,CAAET,UAAW,wBAEhB,SAAAn5B,GAAK,OACF4H,EAAA,qBAAKC,MAAO7H,GACP+V,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CACIjD,SAAUnV,EAAM45B,gBAChBvhB,QAAStD,KAEb5M,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,UAmBrDrF,GAAb,SAAAmpB,GAGI,SAAAnpB,EAAYulB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA2Q,IAChC9Q,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAuP,GAAAsO,KAAAjf,KAAMk2B,EAAY,WAAY,eAHlCxnB,gBAAkBspB,GAAOjuB,KAEWlK,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAuP,EAAAmpB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAAuP,EAAA,EAAAvS,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAACkyB,GAAD,QARf,CAAA37B,IAAA,kBAAAmJ,MAAA,SAW8B+xB,GACtB,MAAO,CACHA,gBAAiBA,KAb7B,CAAAl7B,IAAA,0BAAAmJ,MAAA,SAiBsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,OAnB7B3oB,EAAA,CAA+BqlB,ICrEzBlzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SAgDjC,IAAM1M,GAAY9D,YACdwG,YAtDoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAuDdzS,IAEJ9B,qBAlDW,SAACC,GAAD,OACXC,uBAAa,CACTuN,KxDxBG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0BwDgB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OA2CnC/D,IANcD,CA7BlB,SAA4BgD,GAAc,IAC9BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAE,oBAAA7G,OAAsB2B,EAAMs6B,WAAct6B,EAAMu6B,OAAS,QAAU,SAAY,OAIpG,OACIpyB,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,KACpD5M,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,OAsBhDkkB,GAA2C,CAAC,eAAgB,eAQrDxpB,GAAb,SAAAopB,GAKI,SAAAppB,EAAYwlB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA0Q,IAChC7Q,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAsP,GAAAuO,KAAAjf,KAAMk2B,EAAY,WAAY,eAL1BiE,kBAI4B,EAAAt6B,EAH5B+D,aAG4B,EAAA/D,EAFpC6O,gBAAkBspB,GAAOE,KAKrBr4B,EAAKs6B,aACDD,GAAwBvnB,KAAKkT,MAAMqU,GAAwBj4B,OAAS0Q,KAAK8K,WAJ7C5d,EALxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAsP,EAAAopB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAAsP,EAAA,EAAAtS,IAAA,SAAAmJ,MAAA,WAaQ,OAAOM,EAAA,cAACuyB,GAAD,QAbf,CAAAh8B,IAAA,aAAAmJ,MAAA,SAgBeiuB,EAA+B5a,GACtC,IAAMyf,EAAQj5B,OAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAAsP,EAAA6e,WAAA,aAAAvvB,MAAAif,KAAAjf,KAAoBw1B,EAAW5a,GACvC0f,EAAct6B,KAAKk2B,WAAW72B,UAAhB,eAAAtB,OAAyCiC,KAAKm6B,eAElE,cAAAp8B,OAAeu8B,EAAf,MAAAv8B,OAA+Bs8B,KApBvC,CAAAj8B,IAAA,qBAAAmJ,MAAA,SAwBQgzB,EACA3f,EACA+b,GAC4C,IAAAv5B,EAClBu5B,EAAlB6D,EADoCp9B,EACpCo9B,KAAM52B,EAD8BxG,EAC9BwG,QACNurB,EAAevU,EAAfuU,WAGR,MAAO,CAAE8C,KADIjyB,KAAKk2B,WAAW72B,UAAhB,eAAAtB,OAAyCy8B,EAAzC,KAAAz8B,OAAiDoxB,IAC/CvrB,aAhCvB,CAAAxF,IAAA,kBAAAmJ,MAAA,SAoCQ+xB,EACA7c,EACA7Y,GAIA,OAFA5D,KAAK4D,QAAUA,EAER,CACHo2B,YAAY,EACZV,gBAAiBA,EACjBkB,KAAMx6B,KAAKm6B,aACXF,OAAQxd,EAAK0S,cA9CzB,CAAA/wB,IAAA,0BAAAmJ,MAAA,SAkDsC+xB,EAAyB7c,EAAiBka,GAExE,MAAO,CACHqD,YAAY,EACZV,gBAAiBA,EACjBkB,KAJa7D,EAAT6D,KAKJP,OAAQxd,EAAK0S,cAxDzB,CAAA/wB,IAAA,iBAAAmJ,MAAA,SA4D6BkV,EAAgBD,GACrC,SAAAze,OAAAqD,OAAA0e,GAAA,EAAA1e,QAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAAsP,EAAA6e,WAAA,iBAAAvvB,MAAAif,KAAAjf,KAAgCyc,EAAMD,IAAtC,CAAgDzZ,GAAwB,CACpE0zB,IAAK,IAAIrgB,KACTwE,aAAc4B,EACdtE,UAAW,YACXye,MAAO,CACH6D,KAAMx6B,KAAKm6B,aACXv2B,QAAS5D,KAAK4D,iBAnE9B8M,EAAA,CAA+BslB,IC9DzBlzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SA0DjC,IAAM1M,GAAY9D,YACdwG,YAhEoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAiEdzS,IAEJ9B,qBA5DW,SAACC,GAAD,OACXC,uBAAa,CACTuN,KzD7BG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0ByDqB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OAqDnC/D,IANcD,CAvClB,SAA4BgD,GAAc,IAC9BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,aAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,4BAIhBu0B,EAAc1hB,aAAU,CAC1B9F,QAAS,EACTynB,UAAW,eACXniB,KAAM,CAAEtF,QAAS,EAAGynB,UAAW,mBAGnC,OACIvxB,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,cAACmQ,GAAA,EAASH,IAAV,CAAc/P,MAAOqxB,EAAax4B,UAAWT,EAAQgL,SAChD8K,EACDnO,EAAA,cAAC1J,EAAA,EAAD,CAAYyD,QAAQ,KAAK2C,MAAM,WAC3BsD,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,MAExD5M,EAAA,qBAAKC,MAAO,CAAExD,SAAU,aACpBuD,EAAA,cAAC1J,EAAA,EAAD,CACI2J,MAAO,CAAE0J,UAAW,IACpBjN,MAAM,UACN3C,QAAQ,aAERiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,+BAA+BqO,KAAM,CAAEsiB,KAAM71B,EAAM61B,cAqB5E3kB,GAAb,SAAAkpB,GAGI,SAAAlpB,EAAYslB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA4Q,IAChC/Q,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAAwP,GAAAqO,KAAAjf,KAAMk2B,EAAY,gBAAiB,oBAHvCxnB,gBAAkBspB,GAAOI,UAEWv4B,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAAwP,EAAAkpB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAAwP,EAAA,EAAAxS,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAAC4yB,GAAD,QARf,CAAAr8B,IAAA,kBAAAmJ,MAAA,SAYQ+xB,EACAoB,EACAC,EACAnF,GAEA,MAAO,CACH8D,gBAAiBA,EACjB/D,KAAMC,EAAUkC,QAAQ,MAnBpC,CAAAt5B,IAAA,aAAAmJ,MAAA,SAuBeiuB,EAA+B5a,GACtC,MAAO,MAAAxZ,OAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAAwP,EAAA2e,WAAA,aAAAvvB,MAAAif,KAAAjf,KAAyBw1B,EAAW5a,KAxBnD,CAAAxc,IAAA,0BAAAmJ,MAAA,SA2BsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,EACjB/D,KAAM,OA9BlB3kB,EAAA,CAAoColB,ICzE9BlzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SAkDjC,IAAM1M,GAAY9D,YACdwG,YAxDoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAyDdzS,IAEJ9B,qBApDW,SAACC,GAAD,OACXC,uBAAa,CACTuN,K1D5BG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0B0DoB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OA6CnC/D,IANcD,CA/BlB,SAAsCgD,GAAc,IACxCC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,iCAItB,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,KACpD5M,EAAA,qBAAKC,MAAO,CAAExD,SAAU,aACpBuD,EAAA,cAAC1J,EAAA,EAAD,CACI2J,MAAO,CAAE0J,UAAW,IACpBjN,MAAM,UACN3C,QAAQ,aAERiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,oCAAoCqO,KAAM,CAAEsiB,KAAM71B,EAAM61B,cAqBjFzkB,GAAb,SAAAgpB,GAKI,SAAAhpB,EAAYolB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA8Q,IAChCjR,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA0P,GAAAmO,KAAAjf,KAAMk2B,EAAY,UAAW,yBAFjCxnB,gBAAkBspB,GAAOQ,eACW34B,EALxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA0P,EAAAgpB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAA0P,EAAA,EAAA1S,IAAA,SAAAmJ,MAAA,WAUQ,OAAOM,EAAA,cAAC+yB,GAAD,QAVf,CAAAx8B,IAAA,aAAAmJ,MAAA,SAaeiuB,EAA+B5a,GACtC,MAAO,MAAAxZ,OAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAA0P,EAAAye,WAAA,aAAAvvB,MAAAif,KAAAjf,KAAyBw1B,EAAW5a,KAdnD,CAAAxc,IAAA,kBAAAmJ,MAAA,SAkBQ+xB,EACAoB,EACAC,EACAnF,GAEA,MAAO,CACH8D,gBAAiBA,EACjB/D,KAAMC,EAAUkC,QAAQ,MAzBpC,CAAAt5B,IAAA,0BAAAmJ,MAAA,SA6BsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,EACjB/D,KAAM,OAhClBzkB,EAAA,CAAyCklB,ICxEnClzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SA6BjC,IAAM1M,GAAY9D,YACdwG,YAnCoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAoCdzS,IAEJ9B,qBA/BW,SAACC,GAAD,OACXC,uBAAa,CACTuN,K3DpBG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0B2DY/BxK,QAASkJ,GAAiBnT,OA6B9B/D,IANcD,CAflB,SAA6BgD,GAAc,IAC/BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,OAAc,OAAVA,EACOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAI/B5G,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACpBrD,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,SAgBvD1D,GAAb,SAAA+oB,GAGI,SAAA/oB,EAAYmlB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAA+Q,IAChClR,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA2P,GAAAkO,KAAAjf,KAAMk2B,EAAY,YAAa,gBAHnCxnB,gBAAkBspB,GAAOC,MAEWp4B,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA2P,EAAA+oB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAA2P,EAAA,EAAA3S,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAACgzB,GAAD,QARf,CAAAz8B,IAAA,kBAAAmJ,MAAA,SAW8B+xB,GACtB,MAAO,CACHA,gBAAiBA,KAb7B,CAAAl7B,IAAA,0BAAAmJ,MAAA,SAiBsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,OAnB7BvoB,EAAA,CAAgCilB,IClC1BlzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SA0CjC,IAAM1M,GAAY9D,YACdwG,YAhDoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAiDdzS,IAEJ9B,qBA5CW,SAACC,GAAD,OACXC,uBAAa,CACTuN,K5D1BG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0B4DkB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OAqCnC/D,IANcD,CAvBlB,SAA6BgD,GAAc,IAC/BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,wBAItB,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,KACpD5M,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,OAgBzChF,GAAb,SAAA8oB,GAGI,SAAA9oB,EAAYklB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAgR,IAChCnR,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA4P,GAAAiO,KAAAjf,KAAMk2B,EAAY,YAAa,gBAHnCxnB,gBAAkBspB,GAAOO,MAEW14B,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA4P,EAAA8oB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAA4P,EAAA,EAAA5S,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAACizB,GAAD,QARf,CAAA18B,IAAA,kBAAAmJ,MAAA,SAW8B+xB,GACtB,MAAO,CACHA,gBAAiBA,KAb7B,CAAAl7B,IAAA,0BAAAmJ,MAAA,SAiBsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,OAnB7BtoB,EAAA,CAAgCglB,IC3D1BlzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SA6BjC,IAAM1M,GAAY9D,YACdwG,YAnCoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAoCdzS,IAEJ9B,qBA/BW,SAACC,GAAD,OACXC,uBAAa,CACTuN,K7DpBG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0B6DY/BxK,QAASkJ,GAAiBnT,OA6B9B/D,IANcD,CAflB,SAAmCgD,GAAc,IACrCC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,OAAc,OAAVA,EACOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAI/B5G,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACpBrD,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,SAgBvDxD,GAAb,SAAA6oB,GAGI,SAAA7oB,EAAYilB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAiR,IAChCpR,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA6P,GAAAgO,KAAAjf,KAAMk2B,EAAY,kBAAmB,sBAHzCxnB,gBAAkBspB,GAAOK,YAEWx4B,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA6P,EAAA6oB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAA6P,EAAA,EAAA7S,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAACkzB,GAAD,QARf,CAAA38B,IAAA,kBAAAmJ,MAAA,SAW8B+xB,GACtB,MAAO,CACHA,gBAAiBA,KAb7B,CAAAl7B,IAAA,0BAAAmJ,MAAA,SAiBsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,OAnB7BroB,EAAA,CAAsC+kB,IClChClzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SA0CjC,IAAM1M,GAAY9D,YACdwG,YAhDoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAiDdzS,IAEJ9B,qBA5CW,SAACC,GAAD,OACXC,uBAAa,CACTuN,K9D1BG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0B8DkB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OAqCnC/D,IANcD,CAvBlB,SAAiCgD,GAAc,IACnCC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,4BAItB,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,KACpD5M,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,OAgBzC9E,GAAb,SAAA4oB,GAGI,SAAA5oB,EAAYglB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAkR,IAChCrR,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA8P,GAAA+N,KAAAjf,KAAMk2B,EAAY,gBAAiB,oBAHvCxnB,gBAAkBspB,GAAOG,UAEWt4B,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA8P,EAAA4oB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAA8P,EAAA,EAAA9S,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAACmzB,GAAD,QARf,CAAA58B,IAAA,kBAAAmJ,MAAA,SAW8B+xB,GACtB,MAAO,CACHA,gBAAiBA,KAb7B,CAAAl7B,IAAA,0BAAAmJ,MAAA,SAiBsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,OAnB7BpoB,EAAA,CAAoC8kB,ICnD9BlzB,GAAgB,CAClBwS,UAAWjT,GAAkBoL,SA6CjC,IAAM1M,GAAY9D,YACdwG,YAnDoB,SAAC/D,GAAD,MAAuB,CAC3CA,MAAOA,EAAMhC,KAAK6X,aAoDdzS,IAEJ9B,qBA/CW,SAACC,GAAD,OACXC,uBAAa,CACTuN,K/D5BG,CACHC,gBAAiB,cACjBjG,OAAQ,OACRW,SAAU,GACV5H,QAAS,OACTC,WAAY,SACZ+T,eAAgB,SAChBjR,MAAO,QACPkR,OAAQ,UACRC,8BAA+B,0B+DoB/BxK,QAASkJ,GAAiBnT,GAC1B+U,OAAO5U,OAAAC,EAAA,EAAAD,CAAA,GACAoT,GAAgBvT,GADjB,CAEFwS,aAAc,KAElBklB,YAAarkB,GAAkBrT,OAwCnC/D,IANcD,CA1BlB,SAA4BgD,GAAc,IAC9BC,EAA8BD,EAA9BC,QAASoV,EAAqBrV,EAArBqV,UAAW5V,EAAUO,EAAVP,MAC5B,GAAc,OAAVA,EACA,OAAOmI,EAAA,qBAAKlH,UAAWT,EAAQuO,OAGnC,IAAMuH,EACFnO,EAAA,cAAC1J,EAAA,EAAD,CAAYwC,UAAWT,EAAQ8V,OAAQpU,QAAQ,MAC3CiG,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,uBAItB,OACIiD,EAAA,qBAAKlH,UAAWT,EAAQuO,KAAMnQ,QAAS,kBAAMgX,EAAUrB,GAAahU,MAChE4H,EAAA,qBAAKlH,UAAWT,EAAQgL,SACnB8K,EACDnO,EAAA,cAACiQ,GAAA,EAAD,CAAUjD,SAAUnV,EAAM45B,gBAAiBvhB,QAAStD,KACpD5M,EAAA,cAAC1J,EAAA,EAAD,CAAY2J,MAAO,CAAE6J,QAAS,GAAKH,UAAW,IAAMjN,MAAM,WACtDsD,EAAA,cAAClD,EAAA,EAAD,CAAWC,GAAG,6BAElBiD,EAAA,qBAAKlH,UAAWT,EAAQy4B,aAAc3iB,OCpDzCilB,GAAmC,CAC5CtqB,aACAD,aACAE,kBACAC,oBACAC,uBACAC,cACAC,cACAC,oBACAC,kBACAC,UD0DJ,SAAA2oB,GAGI,SAAA3oB,EAAY+kB,GAAwB,IAAAr2B,EAAA,OAAAuB,OAAAiH,EAAA,EAAAjH,CAAApB,KAAAmR,IAChCtR,EAAAuB,OAAA2d,EAAA,EAAA3d,CAAApB,KAAAoB,OAAA4d,EAAA,EAAA5d,CAAA+P,GAAA8N,KAAAjf,KAAMk2B,EAAY,WAAY,eAHlCxnB,gBAAkBspB,GAAOS,KAEW54B,EAHxC,OAAAuB,OAAA+d,EAAA,EAAA/d,CAAA+P,EAAA2oB,GAAA14B,OAAAgX,EAAA,EAAAhX,CAAA+P,EAAA,EAAA/S,IAAA,SAAAmJ,MAAA,WAQQ,OAAOM,EAAA,cAACqzB,GAAD,QARf,CAAA98B,IAAA,aAAAmJ,MAAA,SAWeiuB,EAA+B5a,GACtC,IAAI6d,EAAIr3B,OAAAkuB,GAAA,EAAAluB,QAAA4d,EAAA,EAAA5d,CAAA+P,EAAAoe,WAAA,aAAAvvB,MAAAif,KAAAjf,KAAoBw1B,EAAW5a,GAKvC,MAJI,cAAcoZ,KAAKyE,KACnBA,GAAc,KAGX,eAAiBA,IAjBhC,CAAAr6B,IAAA,kBAAAmJ,MAAA,SAoB8B+xB,GACtB,MAAO,CACHA,gBAAiBA,KAtB7B,CAAAl7B,IAAA,0BAAAmJ,MAAA,SA0BsC+xB,GAC9B,MAAO,CACHA,gBAAiBA,OA5B7BnoB,EAAA,CAA+B6kB,ICzD3B/d,iBCbG,IAAMkjB,GAAmE,SAAA/J,GAAO,OACnFA,EAAQE,KACJrtB,aAAOstB,qBAAWxuB,GAA0B0K,UAC5C+jB,aAAS,SAAA3zB,GAAC,OAAI+zB,KAAEta,WAAF,EAAAlW,OAAA0e,GAAA,EAAA1e,CAetB,SAAmB80B,GACf,IAAM7f,EAAM,IAAID,KACZ1W,EAAQi4B,GAAMC,WAEZwD,EAAe17B,EAAMhC,KAAKkxB,SAAS3qB,OAAO,SAAApG,GAAC,OAAIA,EAAE44B,IAAMpgB,IAC7D,GAAI+kB,EAAan5B,OAAS,EAAG,CACzB,IAAM2sB,EAAWrgB,KAAE8sB,OAAOD,EAAc,SAAAv9B,GAAC,OAAIA,EAAE44B,IAAIle,eAAc,GAE3DsX,EAAUoL,GAAgBrM,EAAS1W,WACnCojB,EAAkB,IAAIzL,EAAQqG,GAC9BqF,EAAeD,EAAgBE,mBACjC5M,EAAShU,aACTgU,EAAS+H,OAGb,OAAQ5zB,GAAyB6rB,IAAjC7wB,OAAAqD,OAAA0e,GAAA,EAAA1e,CAA+Cm6B,IAGnD,IAAI/F,EAAYkE,GAA4Bh6B,GACtCoT,EChDH,SAA+B2oB,GAClC,IAAMrpB,EAAS,IAAIC,MAEnB,IAAK,IAAM5F,KAAagvB,EACpB,GAAIA,EAAWpG,eAAe5oB,GAAY,CACtC,IACMoQ,EAAQ,IAAIrD,EADFiiB,EAAWhvB,IACD,CAAE0H,aAAc,KAAM9U,UAAW,iBAAM,MACjE+S,EAAO7T,KAAK,CAAE2Z,UAAW2E,EAAM3E,UAAWkM,eAAgBvH,EAAM1E,gBAIxE,OAAO/F,EDqCQspB,CAAsBT,IAnBgBU,EAqBvBnG,EAAUoG,mBAAmBl8B,EAAMhC,KAAKm+B,iBAA9Dlf,EArB6Cgf,EAqB7Chf,UAAWyK,EArBkCuU,EAqBlCvU,OACb0U,EAAmB,IAAIzpB,MAEzBsK,IAAcjd,EAAMhC,KAAKuf,mBACpBvd,EAAMhC,KAAKyf,oBACZ2e,EAAiBv9B,KAAKwE,GAAqB4Z,IAC3Cjd,EAAK0B,OAAAC,EAAA,EAAAD,CAAA,GAAQ1B,EAAR,CAAehC,KAAK0D,OAAAC,EAAA,EAAAD,CAAA,GAAM1B,EAAMhC,KAAb,CAAmBuf,iBAAkBN,MAC7D6Y,EAAYkE,GAA4Bh6B,KAI5C0nB,EAAOnlB,OAAS,GAChB65B,EAAiBv9B,KAAKwE,GAA2BqkB,IAGrD,IAAMlP,EAAYsd,EAAUuG,gBAAgBjpB,GAC5C,QAAkBvV,IAAd2a,EAEA,MAAM,IAAIM,MAAM,iBAGpB,IAEM+iB,EADkB,IAAI1L,EADZoL,GAAgB/iB,IACIge,GACC8F,aAErC,OACIj5B,GAA0B0uB,QAAQ,CAC9B5U,MAAO3E,EACPO,SAAW+c,EAA8B/c,SAAShI,gBAH1D1S,OAAAqD,OAAA0e,GAAA,EAAA1e,CAKOm6B,GACAO,GAnEiBxmB,CAAUzX,EAAE+I,eAG3Bq1B,GAKT,SAAA7K,GAAO,OACPA,EAAQE,KACJrtB,aAAOstB,qBAAWxuB,KAClBm5B,aAAI,SAAAzsB,GAAM,OAAIA,EAAO7I,QAAQrI,KAAK,gBAClC49B,iBEzBOC,YAAY9kB,WAAZ,EAAAlW,OAAA0e,GAAA,EAAA1e,CAAgBA,OAAO0Q,OAAOuqB,IAA9Bt+B,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAiDA,OAAO0Q,OAAOwqB,MCDjEC,GAITt/B,IC0BWu/B,eAAuC,CAClD9Z,aAAc,WAAwB,IAAvBhjB,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAClC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,OAAQ0M,EAAO7I,SAAf7I,OAAAqD,OAAA0e,GAAA,EAAA1e,CAA2B1B,IAC/B,KAAK+8B,kBAAQ15B,IACT,MAAO,GACX,QACI,OAAOrD,IAGnBgmB,cAAe,WAAwB,IAAvBhmB,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACnC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,GAA0B0uB,SACnC,OAAQhiB,EAAO7I,QAAQiW,OAAvB9e,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAiC1B,IACrC,KAAK+8B,kBAAQ15B,IACT,MAAO,GACX,QACI,OAAOrD,IAGnBg9B,UAAW,WAA2B,IAA1Bh9B,EAA0B6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,IAAAA,UAAA,GAClC,QADkCA,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,GACnByK,MACX,KAAKy0B,kBAAQ15B,IACT,OAAO,EACX,KAAK05B,kBAAQ15B,IACT,OAAO,EACX,QACI,OAAOrD,IAGnBkb,aAAc,WAA0B,IAAzBlb,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAAM9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACpC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,OAAO0M,EAAO7I,QAClB,KAAK61B,kBAAQ15B,GAA0B0uB,SACnC,OAAO,KACX,KAAKgL,kBAAQ15B,IACT,OAAO0M,EAAO7I,QAAQgU,aAC1B,KAAK6hB,kBAAQ15B,IACT,OAAO,KACX,QACI,OAAOrD,IAGnB2b,cAAe,WAA0B,IAAzB3b,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAAM9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACrC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,GAA0B0uB,SACnC,OAAOhiB,EAAO7I,QAAQiW,MAC1B,KAAK4f,kBAAQ15B,IACT,OAAO0M,EAAO7I,QAAQsR,UAC1B,KAAKukB,kBAAQ15B,IACT,OAAO,KACX,QACI,OAAOrD,IAGnB6V,WAAY,WAA0B,IAAzB7V,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAAM9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAClC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,GAA0B0uB,SACvC,KAAKgL,kBAAQ15B,IACb,KAAK05B,kBAAQ15B,IACT,OAAO,KACX,KAAK05B,kBAAQ15B,IACT,OAAO0M,EAAO7I,QAAQlH,MAC1B,QACI,OAAOA,IAGnBkvB,SAAU,WAAwB,IAAvBlvB,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAC9B,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,SAAAhF,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAW1B,GAAX,CAAkB+P,EAAO7I,UAC7B,KAAK61B,kBAAQ15B,IACT,OAAOrD,EAAMuE,OAAO,SAAApG,GAAC,OAAIA,EAAE44B,MAAQhnB,EAAO7I,QAAQ6vB,MACtD,KAAKgG,kBAAQ15B,IACT,MAAO,GACX,QACI,OAAOrD,IAGnB4b,eAAgB,WAA0B,IAAzB5b,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAAM9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACtC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,GAA0B0uB,SACnC,OAAO,KACX,KAAKgL,kBAAQ15B,IACT,OAAO0M,EAAO7I,QAClB,KAAK61B,kBAAQ15B,IACT,OAAO,KACX,QACI,OAAOrD,IAGnBi9B,UAAW,WAA0B,IAAzBj9B,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAChB,OADiCA,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,GACtByK,OAASy0B,kBAAQ15B,IACjB,IAAIqT,KAER1W,GAEXyd,kBAAmB,WAA2B,IAA1Bzd,EAA0B6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,IAAAA,UAAA,GAAX9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAC1C,OAAIkS,EAAOzH,OAASy0B,kBAAQ15B,IACjB0M,EAAO7I,QAGXlH,GAEXud,iBAAkB,WAAuB,IAAtBvd,EAAsB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAd,EAAG9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACrC,OAAIkS,EAAOzH,OAASy0B,kBAAQ15B,IACjB0M,EAAO7I,QAGXlH,GAEXm8B,gBAAiB,WAAwB,IAAvBn8B,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACrC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,SAAAhF,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAW1B,GAAX0B,OAAA0e,GAAA,EAAA1e,CAAqBqO,EAAO7I,UAChC,KAAK61B,kBAAQ15B,IACT,MAAO,GACX,QACI,OAAOrD,IAGnBkc,eAAgB,WAA0B,IAAzBlc,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAAM9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACtC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,OAAO0M,EAAO7I,QAAQ6R,SAC1B,KAAKgkB,kBAAQ15B,IACT,OAAO,KACX,QACI,OAAOrD,IAGnBod,cAAe,WAA0B,IAAzBpd,EAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAjB,KAAM9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACrC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,GAA0B0uB,SACnC,OAAOhiB,EAAO7I,QAAQ6R,SAC1B,KAAKgkB,kBAAQ15B,IACT,OAAO,KACX,QACI,OAAOrD,IAGnBk9B,mBAAoB,WAAwB,IAAvBl9B,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GACzB,QADwCA,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,GACzByK,MACX,KAAKy0B,kBAAQ15B,GAA0B0uB,SACnC,OAAO3qB,OACX,KAAK21B,kBAAQ15B,IACT,MAAO,GACX,QACI,OAAOrD,MCtKR88B,eAA2C,CACtD94B,QAAS,WAAwB,IAAvBhE,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAC7B,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,SAAAhF,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAW1B,GAAX,CAAkB+P,EAAO7I,UAC7B,KAAK61B,kBAAQ15B,IACT,OAAOrD,EAAMuE,OAAO,SAAApG,GAAC,OAAIA,EAAE+O,MAAQ6C,EAAO7I,UAC9C,KAAK61B,kBAAQ15B,GAAwB0K,SACjC,OAAO/N,EAAMjC,IAAI,SAAA6M,GAAI,OACjBA,EAAKsC,MAAQ6C,EAAO7I,QAApBxF,OAAAC,EAAA,EAAAD,CAAA,GAAmCkJ,EAAnC,CAAyClG,WAAW,IAASkG,IAErE,KAAKmyB,kBAAQ15B,GAAwB0uB,SACjC,OAAO/xB,EAAMjC,IAAI,SAAA6M,GAAI,OACjBA,EAAKsC,MAAQ6C,EAAO7I,QAAQgG,IAA5BxL,OAAAC,EAAA,EAAAD,CAAA,GAEakJ,EAFb,CAGUpG,MAAOuL,EAAO7I,QAAQ1C,MACtB2I,aAAc,KACdzI,WAAW,EACX2I,KAAMwB,KAAE+E,KAAK/E,KAAEsuB,QAAQptB,EAAO7I,QAAQ1C,MAAMzG,IAAI,SAAAI,GAAC,OAAIA,EAAEkP,QAAOtP,IAAI,SAAAI,GAAC,OAAKA,EAAaic,mBAEzFxP,IAEd,KAAKmyB,kBAAQ15B,GAAwB8uB,SACjC,OAAOnyB,EAAMjC,IAAI,SAAA6M,GAAI,OACjBA,EAAKsC,MAAQ6C,EAAO7I,QAAQgG,IAA5BxL,OAAAC,EAAA,EAAAD,CAAA,GACWkJ,EADX,CACiBlG,WAAW,EAAOyI,aAAc4C,EAAO7I,QAAQ+qB,UAC1DrnB,IAEd,KAAKmyB,kBAAQ15B,IACT,OAAOrD,EAAMjC,IAAI,SAAA6M,GAAI,OACjBA,EAAKsC,MAAQ6C,EAAO7I,QAAQW,MAA5BnG,OAAAC,EAAA,EAAAD,CAAA,GACWkJ,EADX,CACiBwC,OAAQ2C,EAAO7I,QAAQkG,SAClCxC,IAEd,QACI,OAAO5K,IAGnB0Q,sBAAuB,WAA0B,IAAzB1Q,IAAyB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,KAAAA,UAAA,GAAX9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAC7C,OAAIkS,EAAOzH,OAASy0B,kBAAQ15B,IACjB0M,EAAO7I,QAEXlH,GAEXoT,OAAQ,WAA6C,IAA5CpT,EAA4C6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GA8BzD,WACI,IAAMulB,EAAkC,GACxC,IAAK,IAAM1+B,KAAOqS,GACd,GAAIA,GAAa4kB,eAAej3B,GAAM,CAClC,IAAMob,EAAU/I,GAAarS,GAC7B0+B,EAAYv+B,KAAK,CAAEgJ,MAAOnJ,EAAK0O,OAAQ0M,IAI/C,OAAOsjB,EAvCUC,GAAyBttB,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACjD,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,OAAOrD,EAAMjC,IAAI,SAAAI,GAAC,OAAKA,EAAE0J,QAAUkI,EAAO7I,QAAQW,MAAQkI,EAAO7I,QAAU/I,IAC/E,QACI,OAAO6B,IAGnB4R,oBAAqB,WAAgC,IAA/B5R,EAA+B6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAvB,WAAY9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EACjD,OAAIkS,EAAOzH,OAASy0B,kBAAQ15B,IACjB0M,EAAO7I,QAGXlH,GAEXqN,KAAM,WAAwB,IAAvBrN,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAC1B,GAAIkS,EAAOzH,OAASy0B,kBAAQ15B,IAAuB,CAC/C,IAAMwE,EAAQkI,EAAO7I,QAAQW,MAAMuS,cAEnC,YAAoBvc,IADAmC,EAAM9B,KAAK,SAAAC,GAAC,OAAIA,EAAE0J,QAAUA,IAErC7H,EAAMjC,IAAI,SAAAI,GAAC,OAAIA,EAAE0J,QAAUA,EAAQ,CAACA,QAAOuF,OAAQ2C,EAAO7I,QAAQkG,QAAUjP,IAEnF,GAAAE,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAW1B,GAAX,CAAkB+P,EAAO7I,UAIjC,OAAOlH,KC5EA88B,mBAAuC,CAClD54B,QAAS,WAAwB,IAAvBlE,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAC7B,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,SAAAhF,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAW1B,GAAX,CAAkB+P,EAAO7I,UAC7B,KAAK61B,kBAAQ15B,IACT,OAAOrD,EAAMuE,OAAO,SAAApG,GAAC,OAAIA,EAAE+G,KAAO6K,EAAO7I,UAC7C,KAAK61B,kBAAQ15B,IACT,OAAOrD,EAAMjC,IAAI,SAAA8L,GAAM,OACnBA,EAAO3E,KAAO6K,EAAO7I,QAAQhC,GAAK6K,EAAO7I,QAAU2C,IAE3D,QACI,OAAO7J,IAGnBgK,aAAc,WAAwB,IAAvBhK,EAAuB6X,UAAAtV,OAAA,QAAA1E,IAAAga,UAAA,GAAAA,UAAA,GAAf,GAAI9H,EAAW8H,UAAAtV,OAAA,EAAAsV,UAAA,QAAAha,EAClC,OAAQkS,EAAOzH,MACX,KAAKy0B,kBAAQ15B,IACT,SAAAhF,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAW1B,GAAX,CAAkB+P,EAAO7I,UAC7B,KAAK61B,kBAAQ15B,IACT,OAAOrD,EAAMuE,OAAO,SAAApG,GAAC,OAAIA,EAAEuM,KAAOqF,EAAO7I,UAC7C,QACI,OAAOlH,MCrBRs9B,GAPKR,YAAgB,CAChC34B,KAAMo5B,GACNv/B,KAAMw/B,GACNv5B,SAAUw5B,GACVjpB,SAAUkpB,MCDP,ICNsBzF,GDMhB0F,GAAiBC,aAAkE,CAC5FC,aAAcvM,KAIZwM,GAAc,CAACH,IAGfI,GAAWlB,GAAiBmB,IAAepmB,WAAf,EAAmBkmB,KAG/CG,GCCC,WACH,IAAMh6B,EAAWi6B,aAAaC,QAAQ,iBAEtC,MAAO,CAAEl6B,SADkB,OAAbA,EAAoBm6B,KAAKC,MAAMp6B,GAAY,IDHxCq6B,GAGfrG,GAAQsG,YAAYjB,GAAaW,GAAcF,KCpBxB9F,GDqBhBA,ICpBHuG,UAAU,WACZ,IAAMx+B,EAAmBi4B,GAAMC,WACzBuG,EAAsB/8B,OAAAC,EAAA,EAAAD,CAAA,GACrB1B,EAAMiE,SADe,CAExBD,QAAShE,EAAMiE,SAASD,QAAQjG,IAAI,SAAAI,GAAC,MAAK,CACtC+O,IAAK/O,EAAE+O,IACPE,OAAQjP,EAAEiP,OACV1I,WAAW,EACXF,MAAO,KACP2I,aAAc,KACdE,KAAM,QAGd6wB,aAAaQ,QAAQ,gBAAiBN,KAAKO,UAAUF,MDS7Dd,GAAeiB,IAAIC,IAGJ5G,UEnBR,SAAS6G,GACZhJ,EACA5xB,EACAiY,EACA9O,GAgBA,OAdeyoB,EAAUgJ,cACrB56B,EAAQnG,IAAI,SAAAI,GAAC,OAAIA,EAAEgJ,SACnBjD,EAAQnG,IAAI,SAAAI,GACR,IAAM8W,EAAIkH,EAAWje,KAAK,SAAAgN,GAAC,OAAIA,EAAEihB,QAAUhuB,EAAE6tB,cAC7C,YAAUnuB,IAANoX,EACO,KAGJA,EAAEpL,SAEbwD,GAEoBtP,IAAI,SAACI,EAAG2U,GAAJ,MAAW,CAAEqZ,MAAOjoB,EAAQ4O,GAAGkZ,YAAaniB,OAAQ1L,KAK7E,SAAS67B,GAA4Bh6B,QAC1BnC,IAAVmC,IACAA,EAAQi4B,GAAMC,YAGlB,IAAMna,EAASghB,OACf,OAAO,IAAIhgB,GAGf,SAA2B/e,GAoBvB,MAnBkC,CAC9B0T,MAAO1T,EAAMiE,SAASD,QACjBO,OAAO,SAAApG,GAAC,YAAgBN,IAAZM,EAAEqG,QACdzG,IAAI,SAAA6M,GACD,IAAM8H,EAAgBhR,OAAAC,EAAA,EAAAD,CAAA,GAAQkJ,EAAR,CAAcpG,MAAOoG,EAAKpG,OAAS,KACzD,OAAOkO,IAEfsQ,aAAchjB,EAAMhC,KAAKglB,aACzBqM,SAAUrvB,EAAMwU,SAASnE,UAAUnS,KAAK,SAAAC,GAAC,OAAIA,EAAE6gC,SAASlhC,KACxDoG,QAASlE,EAAMmE,KAAKD,QACpBkP,OAAQpT,EAAMiE,SAASmP,OACvB/F,KAAMrN,EAAMiE,SAASoJ,KACrBrD,aAAchK,EAAMmE,KAAK6F,aACzB0G,sBAAuB1Q,EAAMiE,SAASyM,sBACtCsV,cAAehmB,EAAMhC,KAAKgoB,cAC1BiX,UAAWj9B,EAAMhC,KAAKi/B,UACtBhgB,UAAWjd,EAAMhC,KAAKuf,kBApBC0hB,CAAkBj/B,GAAQ+d,GCPzD,IAIM1D,GAAS7Y,uBAAa,CACxB09B,MAAO,CACHr4B,MAAO,IACPkC,OAAQ,OAOVo2B,8MACOn/B,MAAQ,CAAEo/B,iBAAkB,QAErCC,oBAAsB,SAAC/2B,GACnBnI,EAAKC,SAAS,CAAEg/B,iBAA2B,KAAT92B,EAAc,KAAOA,6EAGlD,IAAA3C,EAAArF,KAAAD,EACmCC,KAAKC,MAArCZ,EADHU,EACGV,UAAW4d,EADdld,EACckd,iBACX6hB,EAAqB9+B,KAAKN,MAA1Bo/B,iBAEFE,EAAS,CAAI,IAAJjhC,OAAAqD,OAAA0e,GAAA,EAAA1e,CAAWA,OAAOkY,KAAKiX,MAGhC9X,EADYihB,KACSuF,yBAAyBH,GAE9CI,EAAkBrtB,GAAqB4G,EAASrF,MAAO,SAAAvV,GAAC,OAAIA,EAAEiP,QAAQ,KAAMrP,IAC9E,SAAAI,GAAC,MAAK,CACF0J,MAAO1J,EAAEgV,KAAO,GAChB/V,KAAMe,EAAE0J,MAAMA,MAAMqF,OAItBuyB,EAAsBttB,GACxB4G,EAASkE,UACT,SAAA9e,GAAC,OAAIA,EAAEiP,QACP,KACFrP,IAAI,SAAAI,GAAC,MAAK,CACR0J,MAAO1J,EAAEgV,KAAO,GAChB/V,KAAMe,EAAE0J,MAAMA,MAAMoV,WAAatd,EAAU,sBAC3C+/B,KAAMvhC,EAAE0J,MAAMA,SAGlB,OACIvJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,MAChB5D,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,wBAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6L,WAAS,EAACvI,WAAW,WAAWC,QAAS,IAC3C1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,GACNtM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI2J,MAAO,CAAEvB,MAAO,IAAKiL,UAAW,IAChCjK,MAAOu3B,GAAoB,GAC3BO,cAAc,EACdC,YAAa,SAAAzhC,GAAC,OAAIA,GAAKwB,EAAU,sBACjC6I,SAAU,SAAAb,GAAE,OAAIhC,EAAK05B,oBAAoB13B,EAAGqD,OAAOnD,QACnDoD,MAAO3M,EAAAC,EAAAC,cAACC,EAAA,EAAD,OAEN6gC,EAAUvhC,IAAI,SAAAI,GAAC,OACZG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,IAAKP,EAAG0J,MAAO1J,GACpBA,GAAKwB,EAAU,2BAMpCrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,GACNtM,EAAAC,EAAAC,cAACC,EAAA,EAAD,QAAAJ,OAAgBsB,EAAU,kBAA1B,MAAAtB,OAAgD0a,EAASgI,eAGjEziB,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAqBh5B,MAAM,OAAOkC,OAAQ,KACtCzK,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAUtsB,KAAMisB,GACZlhC,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,MACAvhC,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAOC,QAAQ,OAAOC,cAAe,SAAA5hC,GAAC,OC9GxBoE,ED8G0C,KC9GrD2pB,ED8GkD/tB,GC7G1DoE,OACJ2pB,EAGJ,KAAOA,EAAEpsB,UAAUosB,EAAE3pB,OAASA,EAAS,EAAG2pB,EAAE3pB,QALhD,IAAoB2pB,EAAW3pB,KD+GdjE,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAOE,cAAe,SAAA5hC,GAAC,OAAIA,EAAI,OAC/BG,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CACIG,UAAW,SAAA7hC,GAAC,OAAIA,EAAI,KACpB8hC,eAAgB,SAAA/yB,GAAG,OACfvN,EAAU,wBAAyB,CAC/BuN,MACA1I,MAAOuU,EAASrF,MAAMxV,KAAK,SAAAC,GAAC,OAAIA,EAAE0J,MAAMqF,MAAQA,IAAMrF,MACjDrD,MAAMjC,YAIvBjE,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CACIziC,KAAMuC,EAAU,iBAChBmgC,QAAQ,QACRI,KAAK,UACLC,WAAY,OAIxB7hC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,MAChB5D,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,4BAElB5G,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAqBh5B,MAAM,OAAOkC,OAAQ,KACtCzK,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAUtsB,KAAMksB,GACZnhC,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,MACAvhC,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAOC,QAAQ,SACfxhC,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CAAOE,cAAe,SAAA5hC,GAAC,OAAIA,EAAI,OAC/BG,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CACIG,UAAW,SAAC7hC,EAAG0Q,EAAG5G,GAAP,SAAA5J,OACJF,EADI,OAAAE,OACG4J,EAAEf,QAAQw4B,KAAKlsB,MADlB,KAAAnV,OAC2BsB,EAAU,kBADrC,QAIfrB,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CACIC,QAAQ,QACRK,WAAY,GACZ/iC,KAAMuC,EAAU,kBAEf8/B,EAAoB1hC,IAAI,SAACqiC,EAAOjU,GAAR,OACrB7tB,EAAAC,EAAAC,cAACqhC,GAAA,EAAD,CACIK,KACIE,EAAMV,KAAKziB,YAAcM,EACnB,UACA,UAEV7e,IAAKytB,iBA7Gb9qB,aAwHb9D,eACXwG,YAvIoB,SAAC/D,GAAD,MAAuB,CAC3Cud,iBAAkBvd,EAAMhC,KAAKuf,oBAuI7Bjc,qBAAW+Y,IACX7c,IAHWD,CAIb4hC,IEpKmBkB,oLAEb,OACI/hC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6L,WAAS,GACXhM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,EAACC,GAAI,IACXvM,EAAAC,EAAAC,cAAC8hC,GAAD,OAEJhiC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,EAACC,GAAI,GAAIzC,MAAO,CAAC0J,UAAW,KAClCxT,EAAAC,EAAAC,cAAC+hC,GAAD,OAEJjiC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmM,MAAI,EAACC,GAAI,GAAIzC,MAAO,CAAC0J,UAAW,KAClCxT,EAAAC,EAAAC,cAACgiC,GAAD,eAXsBn/B,aCc1C,SAAS8J,GAAW5K,GAChB,OAAOjC,EAAAC,EAAAC,cAACC,EAAA,EAADiD,OAAA0J,OAAA,CAAOlF,UAAU,MAAS3F,IAsDtBhD,mBACX8N,KAAiB,CAAEC,WAAY,OAC/BhK,qBArDW,SAACC,GAAD,OAAkBC,uBAAa,CAC1CqE,OAAQ,CACJjB,SAAU,YAEd2G,KAAM,CACFA,KAAM,GAEVC,QAAS,CACL3H,SAAU,EACViF,OAAQvH,EAAMS,QAAQC,KACtB0K,UAAW,OACX0H,UAAW,cA2Cf7W,IACAC,IAJWF,CA7Bf,SAAAG,GAAiE,IAAvCkO,EAAuClO,EAAvCkO,WAAYpL,EAA2B9C,EAA3B8C,QAAS5C,EAAkBF,EAAlBE,QAC3C,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqN,GAAAtN,EAAD,CACIqN,WAAYA,EACZzF,MAAM,EACNC,QAAS,kBAAMxI,EAAQiB,KAAK,eAC5BkN,oBAAqBZ,GACrBa,WAAW,EACXC,SAAS,MAET3N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQwC,UAAWT,EAAQqF,QACvBvH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,KAAK2C,MAAM,UAAU5D,UAAWT,EAAQ+K,MACxDjN,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,2BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoG,MAAM,UAAUjG,QAAS,kBAAMhB,EAAQiB,KAAK,gBAChDP,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,aAI1B5G,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQgL,SACpBlN,EAAAC,EAAAC,cAACiiC,GAAD,WC3BdC,8MACO1gC,MAAQ,CACb6H,MAAO,KAGX84B,aAAe,SAACC,EAAa/4B,GACzB1H,EAAKC,SAAS,CAAEyH,aAGpBg5B,kBAAoB,SAAC1U,GACjBhsB,EAAKC,SAAS,CAAEyH,MAAOskB,6EAGlB,IAAA9rB,EAC0BC,KAAKC,MAA5BC,EADHH,EACGG,QAASb,EADZU,EACYV,UACTkI,EAAUvH,KAAKN,MAAf6H,MAER,OACIM,EAAA,qBAAKlH,UAAWT,EAAQuO,MACpB5G,EAAA,cAAC1J,EAAA,EAAD,CAAQmG,SAAS,SAASC,MAAM,WAC5BsD,EAAA,cAAC1J,EAAA,EAAD,CACIoJ,MAAOA,EACPW,SAAUlI,KAAKqgC,aACfG,eAAe,UACfC,UAAU,UACV7+B,QAAQ,aAERiG,EAAA,cAAC1J,EAAA,EAAD,CAAKoS,MAAOlR,EAAU,sBACtBwI,EAAA,cAAC1J,EAAA,EAAD,CAAKoS,MAAOlR,EAAU,sBACtBwI,EAAA,cAAC1J,EAAA,EAAD,CAAKoS,MAAOlR,EAAU,8BAGnB,IAAVkI,GAAeM,EAAA,cAAC64B,GAAD,MACL,IAAVn5B,GAAeM,EAAA,cAAC84B,GAAD,MACL,IAAVp5B,GAAeM,EAAA,cAAC+4B,GAAD,MAEhB/4B,EAAA,cAAC2E,EAAA,EAAD,CAAO1O,KAAK,mCAAmC2O,UAAWC,aApC/C5L,aA0CZ7D,eACXC,IACA8D,qBA1EW,SAACC,GAAD,OACXC,uBAAa,CACTuN,KAAM,CACFC,gBAAiBzN,EAAM0N,QAAQC,WAAW5I,MAC1CyC,OAAQ,OACRjH,QAAS,OACTwK,cAAe,UAEnBD,aAAc,CACVvK,QAAS,OACTwK,cAAe,SACfvD,OAAQ,QAEZo4B,kBAAmB,CACfrvB,UAAW,GACXtO,WAAY,GACZC,YAAa,IAEjBiJ,cAAe,CACX7I,SAAU,EACVkF,OAAQ,MAsDG,CAAEhC,WAAW,IAFrBxJ,CAGbmjC,IC3EF,SAASv1B,GAAW5K,GAChB,OAAOjC,EAAAC,EAAAC,cAACC,EAAA,EAADiD,OAAA0J,OAAA,CAAOlF,UAAU,MAAS3F,IAGrC,IAAM8Z,GAAS7Y,uBAAa,CACxBqE,OAAQ,CACJjB,SAAU,YAEd2G,KAAM,CACFA,KAAM,GAEVC,QAAS,CACL3H,SAAU,GAEd6H,YAAa,CACT3C,OAAQ,QAEZ4C,gBAAiB,CACb5C,OAAQ,WAkDDxL,mBACX8N,KAAiB,CAAEC,WAAY,OAC/BhK,qBAAW+Y,IACX7c,IACAC,IAJWF,CAvCf,SAAAG,GAAiE,IAAvCkO,EAAuClO,EAAvCkO,WAAYpL,EAA2B9C,EAA3B8C,QAAS5C,EAAkBF,EAAlBE,QAC3C,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqN,GAAAtN,EAAD,CACIqN,WAAYA,EACZzF,MAAM,EACNC,QAAS,kBAAMxI,EAAQiB,KAAK,eAC5BkN,oBAAqBZ,GACrBa,WAAW,EACXC,SAAS,KACTzL,QAAS,CACL0L,iBAAkB1L,EAAQkL,YAC1BS,gBAAiB3L,EAAQmL,kBAG7BrN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQwC,UAAWT,EAAQqF,QACvBvH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,KAAK2C,MAAM,UAAU5D,UAAWT,EAAQ+K,MACxDjN,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,2BAElB5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoG,MAAM,UACNjG,QAAS,kBAAMhB,EAAQiB,KAAK,sCAE5BP,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,OAEJD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoG,MAAM,UAAUjG,QAAS,kBAAMhB,EAAQkO,WAC3CxN,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,GAAG,aAI1B5G,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQgL,SACpBlN,EAAAC,EAAAC,cAAC4iC,GAAD,WC1CL7jC,mBACXwG,YArBoB,SAAC/D,GAAD,MAAuB,CAC3C2b,cAAe3b,EAAMhC,KAAK2d,iBAqB1Bne,IAFWD,CAdf,SAAsBgD,GAAc,IACxBob,EAAkBpb,EAAlBob,cAER,GAAsB,OAAlBA,EACA,OAAOrd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYyD,QAAQ,MAApB,mBAGX,IACM05B,EAAkB,IAAIzL,EADZoL,GAAgB5f,IACIpH,GAAahU,IAC3Ck5B,EAAc1hB,aAAU,CAAC/I,gBAAiB4sB,EAAgB5sB,gBAAiBjG,OAAQ,SAEzF,OAAOzK,EAAAC,EAAAC,cAAC8Z,GAAA,EAASH,IAAV,CAAc/P,MAAOqxB,GAAcmC,EAAgBx2B,YCPxDi8B,+LAEE,GAAiC,OAA7B/gC,KAAKC,MAAMob,cAAf,CAGA,IAAM2lB,EAAe,IAAI/oB,GACnBsjB,EAAeyF,EAAahF,aAElCh8B,KAAKC,MAAMghC,SACPl+B,GAA0B0uB,QAAQ,CAC9B5U,MAAOmkB,EAAa9oB,UACpBO,SAAU,QAVK,IAAAoF,GAAA,EAAAC,GAAA,EAAAC,OAAAxgB,EAAA,IAcvB,QAAAygB,EAAAC,EAAqBsd,EAArBrd,OAAAC,cAAAN,GAAAG,EAAAC,EAAApH,QAAAuH,MAAAP,GAAA,EAAmC,KAAxBpO,EAAwBuO,EAAAzW,MAC/BvH,KAAKC,MAAMghC,SAASxxB,IAfD,MAAA4O,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,sCAoBvB,OACI/f,EAAAC,EAAAC,cAAA,OACI4J,MAAO,CAAEvB,MAAO,OAAQkC,OAAQ,OAAQnE,SAAU,WAAY0K,SAAU,WAExEhR,EAAAC,EAAAC,cAACgjC,GAAD,MACAljC,EAAAC,EAAAC,cAAA,OAAK4J,MAAO,CAAE8N,IAAK,GAAIurB,MAAO,GAAI78B,SAAU,aACxCtG,EAAAC,EAAAC,cAACkjC,GAAD,OAEJpjC,EAAAC,EAAAC,cAACmjC,EAAA,EAAD,KACIrjC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAO1O,KAAK,sBAAsB2O,UAAW60B,KAC7CtjC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAO1O,KAAK,sBAAsB2O,UAAW80B,cA/BrCxgC,aAsCb9D,eACXE,KACAsG,YA/CoB,SAAC/D,GAAD,MAAuB,CAC3C8hC,QAAS9hC,EAAMhC,KAAKk/B,mBACpBvhB,cAAe3b,EAAMhC,KAAK2d,iBA8C1Bne,IAHWD,CAIb8jC,IC7CIU,8MACO/hC,MAAe,CACpBgiC,cAAe,KACfx2B,QAAS,+EAGY,IAAAnL,EACqBC,KAAKC,MAAvC3C,EADayC,EACbzC,QAASD,EADI0C,EACJ1C,eAAgBK,EADZqC,EACYrC,KAGjC,GADaJ,EAAQmB,SAASC,WACtB,kBAAAX,OAAuBL,EAAKZ,MAChC,OAAO,KAGX,IAAME,OAA0BO,IAAnBF,EAA+B,KAAOA,EAAeG,KAOlE,OAJIE,EAAKX,aAAaa,KAAK,SAAAC,GAAC,OAAIA,EAAEb,OAASA,KACvCU,EAAKX,aAAaa,KAAK,SAAAC,GAAC,MAAe,OAAXA,EAAEb,QAC9BU,EAAKX,aAAa,IAEHC,sCAGd,IAAAqI,EAAArF,KAAA6a,EAC8B7a,KAAKN,MAAhCwL,EADH2P,EACG3P,QAASw2B,EADZ7mB,EACY6mB,cACThkC,EAASsC,KAAKC,MAAdvC,KAEFV,EAAOgD,KAAK2hC,UAClB,OAAa,OAAT3kC,EACO,KAGK,OAAZkO,GAAoBw2B,IAAkB1kC,EAElCgB,EAAAC,EAAAC,cAAA,OAAK4J,MAAO,CAAEvG,YAAa,GAAI4K,aAAc,KACzCnO,EAAAC,EAAAC,cAAC4Z,GAAA,EAAD,CAAUjD,SAAU3J,MAK5Bw2B,IAAkB1kC,GAClB4kC,KAAMtS,IAAN,iBAAAvxB,OAA2BL,EAAKZ,KAAhC,KAAAiB,OAAwCf,EAAxC,QAAmD6kC,KAAK,SAAAlR,GACpD,IAAMmR,EAAcz8B,EAAKs8B,UAErBG,IAAgB9kC,GAIpBqI,EAAKvF,SAAS,CACVoL,QAASylB,EAAS1d,KAClByuB,cAAeI,MAMvB9jC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoC,IAAI,EACJuH,MAAO,CACHi6B,gBAAiB,QACjBv5B,OAAQ,IAEZ/H,eAAa,GAEbzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,eAjEoB2C,IAAMC,WAuE3B5D,gBAAWD,YAAaukC,KCpFxB,SAASO,KACpB,OACIhkC,EAAAC,EAAAC,cAAA,WACKR,EAAKD,IAAI,SAAAI,GAAC,OACPG,EAAAC,EAAAC,cAAC+jC,GAAD,CAAc7jC,IAAKP,EAAEf,KAAMY,KAAMG,OCyFlCZ,mBACXwG,YAtDoB,SAAC/D,GAAD,MAAuB,CAC3Cg9B,UAAWh9B,EAAMhC,KAAKg/B,aAsDtB17B,qBA/EW,SAACC,GAAD,OACXC,uBAAa,CACT8B,WAAY,CACRE,YAAa,GACbC,YAAa,IAEjBG,KAAM,CACFC,SAAU,GAEdkL,KAAM,CACFhG,OAAQ,OACRjH,QAAS,QAEb0J,QAAS,CACL3H,SAAU,EACV/B,QAAS,OACT0gC,SAAU,UAEd/gC,QAAQC,OAAAC,EAAA,EAAAD,CAAA,GACDH,EAAMK,OAAOH,QADb,CAEH8J,KAAM,gBA2DK,CAAExE,WAAW,IAFrBxJ,CA/Cf,SAAagD,GAAc,IACfC,EAAuBD,EAAvBC,QAASw8B,EAAcz8B,EAAdy8B,UACjB,OACI1+B,EAAAC,EAAAC,cAACikC,EAAA,EAAD,CAAeC,SAAUzlC,aACrBqB,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQuO,MACpBzQ,EAAAC,EAAAC,cAACmjC,EAAA,EAAD,KACIrjC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CACI1O,KAAK,aACLgH,OAAQ,kBAAQ43B,EAAsC1+B,EAAAC,EAAAC,cAACmkC,GAAD,MAA1BrkC,EAAAC,EAAAC,cAACokC,EAAA,EAAD,CAAUzI,GAAG,aAE7C77B,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CACI1O,KAAK,IACLgH,OAAQ,kBACJ9G,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACqkC,GAAD,MACAvkC,EAAAC,EAAAC,cAAA,QAAMyC,UAAWT,EAAQgL,SACrBlN,EAAAC,EAAAC,cAAA,OAAKyC,UAAWT,EAAQiB,UACxBnD,EAAAC,EAAAC,cAAA,OAAK4J,MAAO,CAAEmD,KAAM,aAChBjN,EAAAC,EAAAC,cAACmjC,EAAA,EAAD,KACIrjC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CACIg2B,OAAK,EACL1kC,KAAK,IACLgH,OAAQ,kBAAM9G,EAAAC,EAAAC,cAACokC,EAAA,EAAD,CAAUzI,GAAG,aAE/B77B,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAO1O,KAAK,QAAQ2O,UAAWi0B,KAC/B1iC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAO1O,KAAK,WAAW2O,UAAWk0B,KAClC3iC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CACI1O,KAAK,iBACL2O,UAAWm0B,KAEf5iC,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CACI1O,KAAK,iBACL2O,UAAWu1B,qDCvErDS,GAAc5oB,QACW,cAA7BT,OAAO3a,SAASikC,UAEe,UAA7BtpB,OAAO3a,SAASikC,UAEhBtpB,OAAO3a,SAASikC,SAAS3gC,MACvB,2DA8CN,SAAS4gC,GAAgBC,EAAe1rB,GACtC2rB,UAAUC,cACPC,SAASH,GACTf,KAAK,SAAAmB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxjC,QACfmjC,UAAUC,cAAcO,YAI1BxgB,QAAQC,IACN,iHAKE5L,GAAUA,EAAOosB,UACnBpsB,EAAOosB,SAASN,KAMlBngB,QAAQC,IAAI,sCAGR5L,GAAUA,EAAOqsB,WACnBrsB,EAAOqsB,UAAUP,UAO5BQ,MAAM,SAAAv6B,GACL4Z,QAAQ5Z,MAAM,4CAA6CA,KCvFjE,IAAMvJ,GAAQi4B,GAAMC,WAEpB,GAAsC,IAAlCl4B,GAAMiE,SAASD,QAAQzB,OAAc,KAAAwhC,IAAA,EAAAC,IAAA,EAAAC,QAAApmC,EAAA,IACrC,QAAAqmC,GAAAC,GjGlB0B,CAC1B,0BACA,8BACA,sDACA,mBACA,uDACA,wDACA,2CACA,oBACA,2BACA,iCACA,wBiGOA3lB,OAAAC,cAAAslB,IAAAG,GAAAC,GAAAhtB,QAAAuH,MAAAqlB,IAAA,EAAkC,KAAvBK,GAAuBF,GAAAr8B,MAC9BowB,GAAMsJ,SAASt0B,GAAUm3B,MAFQ,MAAAzlB,IAAAqlB,IAAA,EAAAC,GAAAtlB,GAAA,YAAAolB,IAAA,MAAAI,GAAAvlB,QAAAulB,GAAAvlB,SAAA,WAAAolB,GAAA,MAAAC,mCAMzC,QAAAI,GAAAC,GAAkBtkC,GAAMiE,SAASD,QAAjCwa,OAAAC,cAAA8lB,IAAAF,GAAAC,GAAAntB,QAAAuH,MAAA6lB,IAAA,EAA0C,KAA/BH,GAA+BC,GAAAx8B,MACtCowB,GAAMsJ,SAASh0B,GAAgBQ,QAAQq2B,GAAIl3B,kGAY/C,IAAIs3B,IAAYrB,UAAU9T,UAAc8T,UAAkBsB,cAA2B,MAAMnY,MACvF,KACF,GAMF2L,GAAMsJ,SACFjF,YAAW,CACPjsB,UAN2B,CAC/B,CAAEvS,KAAM,KAAMV,KAAM,WACpB,CAAEU,KAAM,KAAMV,KAAM,YAKhBa,YAAaymC,GACbrsB,QAAS,CAAEssB,6CAAsBC,gBAAiBJ,OAc1Dp/B,iBAAO+C,EAAA,cAVM,kBACTA,EAAA,qBAAKC,MAAO,CAAEW,OAAQ,SAClBZ,EAAA,cAAC08B,EAAA,EAAD,CAAU5M,MAAOA,IACb9vB,EAAA,cAAClD,EAAA,EAAD,CAAkBgzB,MAAOA,IACrB9vB,EAAA,cAAC28B,GAAD,UAMT,MAAUrrB,SAASsrB,eAAe,SDrClC,SAAkBvtB,GACvB,GAA6C,kBAAmB2rB,UAAW,CAMzE,GAJkB,IAAI6B,IACnB/nC,YACDyc,OAAO3a,SAASkmC,MAEJC,SAAWxrB,OAAO3a,SAASmmC,OAIvC,OAGFxrB,OAAOM,iBAAiB,OAAQ,WAC9B,IAAMkpB,EAAK,GAAA7kC,OAAMpB,YAAN,sBAEP8lC,IAgEV,SAAiCG,EAAe1rB,GAE9C2tB,MAAMjC,GACHf,KAAK,SAAAlR,GAEJ,IAAMmU,EAAcnU,EAASoU,QAAQzV,IAAI,gBAEnB,MAApBqB,EAASpR,QACO,MAAfulB,IAA8D,IAAvCA,EAAY/Z,QAAQ,cAG5C8X,UAAUC,cAAckC,MAAMnD,KAAK,SAAAmB,GACjCA,EAAaiC,aAAapD,KAAK,WAC7BzoB,OAAO3a,SAASymC,aAKpBvC,GAAgBC,EAAO1rB,KAG1BssB,MAAM,WACL3gB,QAAQC,IACN,mEArFAqiB,CAAwBvC,EAAO1rB,GAI/B2rB,UAAUC,cAAckC,MAAMnD,KAAK,WACjChf,QAAQC,IACN,gHAMJ6f,GAAgBC,EAAO1rB,MCS/B4rB","file":"static/js/main.e0d02588.chunk.js","sourcesContent":["// @ts-ignore\r\nprocess.env.LOCAL_STORAGE_VERSION = 1;","export interface DrinkingGame {\r\n    name: string;\r\n    translations: DrinkingGameExplanation[];\r\n}\r\n\r\ninterface DrinkingGameExplanation {\r\n    name: string;\r\n    lang: string;\r\n}\r\n\r\nconst games: DrinkingGame[] = [\r\n    {\r\n        name: \"drinking-driving\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Drink & Drive\" },\r\n            { lang: \"en\", name: \"Drink & Drive\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"horse-racing\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pferderennen\" },\r\n            { lang: \"en\", name: \"Horse Racing\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"image-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Image Game\" },\r\n            { lang: \"en\", name: \"Image Game\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"pizza-box\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pizza Karton\" },\r\n            { lang: \"en\", name: \"Pizza Box\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"weird-talk\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Weird Talk\" },\r\n            { lang: \"en\", name: \"Weird Talk\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"whisper-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Flüsterspiel\" },\r\n            { lang: \"en\", name: \"Whisper Game\" },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default games;","import React from \"react\";\r\nimport games from \"./registrations\";\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\n\r\ntype Props = LocalizeContextProps & RouteComponentProps;\r\n\r\nfunction MenuItems({ activeLanguage, history }: Props) {\r\n    const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n    return games.map(game => {\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n        const path = `/drinkingGames/${game.name}`;\r\n\r\n        return (\r\n            <ListItem\r\n                key={game.name}\r\n                button\r\n                onClick={() => history.push(path)}\r\n                selected={history.location.pathname === path}\r\n            >\r\n                <ListItemText primary={translation.name} />\r\n            </ListItem>\r\n        );\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withRouter,\r\n)(MenuItems) as React.ComponentType;\r\n","import {\r\n    Collapse,\r\n    createStyles,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport DrinkingGameItems from \"../features/drinking-games/DrinkingGameItems\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            paddingLeft: 20,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing.unit * 4,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & RouteComponentProps & LocalizeContextProps;\r\n\r\ninterface Route {\r\n    path: string;\r\n    icon: JSX.Element;\r\n}\r\n\r\nconst drinctetRoutes: Route[] = [\r\n    {\r\n        path: \"/play\",\r\n        icon: <FlightTakeoffIcon />,\r\n    },\r\n    {\r\n        path: \"/sources\",\r\n        icon: <LayersIcon />,\r\n    },\r\n    {\r\n        path: \"/configuration\",\r\n        icon: <SettingsIcon />,\r\n    },\r\n];\r\n\r\nconst secondaryRoutes: Route[] = [\r\n    {\r\n        path: \"/about\",\r\n        icon: <PersonIcon />,\r\n    },\r\n];\r\n\r\nfunction renderRoutes({ translate, history }: Props, routes: Route[]) {\r\n    return routes.map(route => (\r\n        <ListItem\r\n            key={route.path}\r\n            button\r\n            selected={history.location.pathname.startsWith(route.path)}\r\n            onClick={() => history.push(route.path)}\r\n        >\r\n            <ListItemIcon>{route.icon}</ListItemIcon>\r\n            <ListItemText primary={translate(`menu.${route.path.substring(1)}`)} />\r\n        </ListItem>\r\n    ));\r\n}\r\n\r\ninterface ExpandableItemState {\r\n    isOpen: boolean;\r\n}\r\n\r\nclass DrinkingGamesMenu extends React.Component<Props, ExpandableItemState> {\r\n    readonly state = { isOpen: false };\r\n\r\n    handleClick = () => {\r\n        this.setState(state => ({ isOpen: !state.isOpen }));\r\n    };\r\n\r\n    render() {\r\n        const { translate, classes } = this.props;\r\n        const { isOpen } = this.state;\r\n        const name = \"drinkingGames\";\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={this.handleClick} selected={false}>\r\n                    <ListItemIcon>\r\n                        <ReceiptIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={translate(`menu.${name}`)} />\r\n                    {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                </ListItem>\r\n                <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                    <List disablePadding>\r\n                        <div className={classes.nested}>\r\n                            <DrinkingGameItems />\r\n                        </div>\r\n                    </List>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction MainDrawer(props: Props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n                <div>\r\n                    <Typography variant=\"h6\">Drinctet</Typography>\r\n                    <Typography>The goal is to drink that!</Typography>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>{renderRoutes(props, drinctetRoutes)}</List>\r\n            <Divider />\r\n            <List>\r\n                <DrinkingGamesMenu {...props} />\r\n                <List>{renderRoutes(props, secondaryRoutes)}</List>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n    withLocalize,\r\n)(MainDrawer) as React.ComponentType;\r\n","export function getRootPath(path: string): string | null {\r\n    const match = /[a-zA-Z]+/g.exec(path);\r\n    return match !== null && match.length > 0 ? match[0] : null;\r\n}\r\n","import { PlayerSelectionInsights } from './../../core/selection/insights';\r\nimport { createStandardAction, createAsyncAction } from \"typesafe-actions\";\r\nimport { FollowUpSlide, Translator } from 'GameModels';\r\nimport { History } from 'history';\r\nimport { SlideSelectionInsights } from '@core/selection/insights';\r\nimport { CardRef } from '@core/cards/card-ref';\r\n\r\nexport const startGame = createStandardAction(\"START_GAME\")<History>();\r\n\r\nexport const cancelGame = createStandardAction(\"CANCEL_GAME\")();\r\n\r\nexport const requestSlideAsync = createAsyncAction(\r\n    \"NEXT_SLIDE_REQUEST\",\r\n    \"NEXT_SLIDE_SUCCESS\",\r\n    \"NEXT_SLIDE_FAILURE\",\r\n)<Translator, {slide: string, insights: SlideSelectionInsights | null}, string>();\r\n\r\nexport const applyCard = createStandardAction(\"APPLY_CARD\")<CardRef>();\r\n\r\nexport const setSlideState = createStandardAction(\"SET_SLIDE_STATE\")<{state: any, insights: PlayerSelectionInsights | null}>();\r\n\r\nexport const enqueueFollowUp = createStandardAction(\"ADD_FOLLOW_UP\")<FollowUpSlide>();\r\nexport const activateFollowUp = createStandardAction(\"ACTIVATE_FOLLOW_UP\")<FollowUpSlide>();\r\n\r\nexport const setWillPowerLocked = createStandardAction(\"SET_WILL_POWER_LOCKED\")<boolean>();\r\nexport const setWillPower = createStandardAction(\"SET_WILL_POWER\")<number>();\r\nexport const addWillPowerMemory = createStandardAction(\"ADD_WILL_POWER_MEMORY\")<string[]>();\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Theme,\r\n    Toolbar,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { Route, RouteComponentProps, withRouter } from \"react-router\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { getRootPath } from \"@utils/path\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as actions from \"../features/game/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                display: \"none\",\r\n            },\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        appbar: {},\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: state.settings.sources,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    startGame: actions.startGame,\r\n};\r\n\r\ninterface HandlerProps {\r\n    handleToggleDrawer(): void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> &\r\n    HandlerProps &\r\n    LocalizeContextProps &\r\n    RouteComponentProps &\r\n    ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps;\r\n\r\nfunction MainAppBar({ classes, handleToggleDrawer, history, sources, players, startGame }: Props) {\r\n    const arePlayersSelected = players.length > 1;\r\n    const areSourcesAdded = sources.filter(x => x.cards !== undefined).length > 0;\r\n    const areSourcesLoading = sources.filter(x => x.isLoading).length > 0;\r\n\r\n    const canPlay = arePlayersSelected && areSourcesAdded && !areSourcesLoading;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                    onClick={handleToggleDrawer}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} noWrap>\r\n                    <Translate id={`menu.${getRootPath(history.location.pathname)}`} />\r\n                </Typography>\r\n                <Route\r\n                    path=\"/play\"\r\n                    render={() => (\r\n                        <React.Fragment>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                onClick={() => history.push(\"/play/arrangements\")}\r\n                            >\r\n                                <PeopleIcon />\r\n                            </IconButton>\r\n                            <Button color=\"inherit\" disabled={!canPlay} onClick={() => startGame(history)}>\r\n                                <Translate id=\"play.start\" />\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    )}\r\n                />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(\r\n    withLocalize(\r\n        withRouter(\r\n            connect(\r\n                mapStateToProps,\r\n                dispatchProps,\r\n            )(MainAppBar),\r\n        ),\r\n    ),\r\n);\r\n","import React from \"react\";\r\nimport {\r\n    createStyles,\r\n    WithStyles,\r\n    WithTheme,\r\n    Theme,\r\n    Hidden,\r\n    Drawer,\r\n    withStyles,\r\n    SwipeableDrawer,\r\n} from \"@material-ui/core\";\r\nimport MainDrawer from \"./AppDrawer\";\r\nimport MainAppBar from \"./MainAppBar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        appBar: {\r\n            marginLeft: drawerWidth,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n            },\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme;\r\ninterface State {\r\n    mobileOpen: boolean;\r\n}\r\n\r\nclass AppDrawerContainer extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        mobileOpen: false,\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    setDrawerOpen = (isOpen: boolean) => {\r\n        this.setState({ mobileOpen: isOpen });\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n        const { mobileOpen } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <MainAppBar\r\n                    classes={{ appbar: classes.appBar }}\r\n                    handleToggleDrawer={this.handleDrawerToggle}\r\n                />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden mdUp implementation=\"css\">\r\n                        <SwipeableDrawer\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                            open={mobileOpen}\r\n                            onClose={() => this.setDrawerOpen(false)}\r\n                            onOpen={() => this.setDrawerOpen(true)}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                tabIndex={0}\r\n                                role=\"button\"\r\n                                onClick={() => this.setDrawerOpen(false)}\r\n                                onKeyDown={() => this.setDrawerOpen(false)}\r\n                            >\r\n                                <MainDrawer />\r\n                            </div>\r\n                        </SwipeableDrawer>\r\n                    </Hidden>\r\n                    <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open\r\n                        >\r\n                            <MainDrawer />\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(AppDrawerContainer);\r\n","import { Gender, PlayerInfo } from \"@core/player-info\";\r\nimport cuid from \"cuid\";\r\nimport { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { createStandardAction } from \"typesafe-actions\";\r\n\r\nexport const addPlayer = createStandardAction(\"ADD_PLAYER\").map(\r\n    (playerInfo: { name: string; gender: Gender }): { payload: PlayerInfo } => ({\r\n        payload: {\r\n            name: playerInfo.name,\r\n            gender: playerInfo.gender,\r\n            id: cuid(),\r\n        },\r\n    }),\r\n);\r\n\r\nexport const updatePlayer = createStandardAction(\"UPDATE_PLAYER\")<PlayerInfo>();\r\nexport const removePlayer = createStandardAction(\"REMOVE_PLAYER\")<string>();\r\n\r\nexport const addPlayerArrangment = createStandardAction(\"ADD_PLAYER_ARRANGEMENT\")<\r\n    PlayerArrangement\r\n>();\r\nexport const removePlayerArrangment = createStandardAction(\"REMOVE_PLAYER_ARRANGEMENT\")<string>();\r\n","import * as React from \"react\";\r\nimport { addPlayer } from \"../actions\";\r\nimport { Gender } from \"@core/player-info\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\n\r\nconst dispatchProps = {\r\n    addPlayer,\r\n};\r\n\r\ntype Props = typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    name: string;\r\n};\r\n\r\nclass AddPlayerForm extends React.Component<Props, State> {\r\n    readonly state = { name: \"\" };\r\n\r\n    handlePlayerNameChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ name: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        let gender: Gender = \"Male\";\r\n        if (this.state.name.endsWith(\"a\"))\r\n            //sorry Luca\r\n            gender = \"Female\";\r\n\r\n        this.props.addPlayer({ name: this.state.name, gender });\r\n        this.setState({ name: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.name) this.handleAddClick();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        const { translate } = this.props;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={name}\r\n                        placeholder={translate(\"settings.players.playerName\") as string}\r\n                        onChange={this.handlePlayerNameChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!name}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    dispatchProps,\r\n)(withLocalize(AddPlayerForm));\r\n","export class PlayerInfo {\r\n    constructor(public id: string, public name: string, public gender: Gender) {}\r\n}\r\n\r\nexport type Gender = \"Male\" | \"Female\";\r\n","import { PlayState } from './reducer';\r\n\r\nexport const getPlayers = (state: PlayState) => state.players;","import { Gender } from \"../../../core/player-info\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVenus, faMars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps } from \"react-localize-redux\";\r\n\r\ninterface Props extends LocalizeContextProps {\r\n    name: string;\r\n    gender: Gender;\r\n    onRemoveClick: () => void;\r\n    onSwapGenderClick: () => void;\r\n    onNameChanged: (name: string) => void;\r\n}\r\n\r\nconst getIconButtonStyle = (): React.CSSProperties => ({\r\n    margin: -10,\r\n    width: 48,\r\n    height: 48,\r\n});\r\n\r\nfunction PlayerListItem({ name, gender, onRemoveClick, onSwapGenderClick, onNameChanged, translate }: Props) {\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <IconButton\r\n                aria-label=\"Swap Gender\"\r\n                onClick={onSwapGenderClick}\r\n                style={{ ...getIconButtonStyle(), marginRight: 0 }}\r\n            >\r\n                <Icon>\r\n                    <FontAwesomeIcon icon={gender === \"Male\" ? faMars : faVenus} />\r\n                </Icon>\r\n            </IconButton>\r\n            <Input\r\n                error={!name}\r\n                onBlur={() => {\r\n                    if (!name) onRemoveClick();\r\n                }}\r\n                style={{ flexGrow: 1, marginLeft: 5, marginRight: 5 }}\r\n                placeholder={translate(\"settings.willBeRemoved\") as string}\r\n                value={name}\r\n                onChange={ev => onNameChanged(ev.currentTarget.value)}\r\n            />\r\n            <IconButton\r\n                aria-label=\"Delete\"\r\n                onClick={onRemoveClick}\r\n                style={{ ...getIconButtonStyle(), marginLeft: 0 }}\r\n                tabIndex={-1}\r\n            >\r\n                <DeleteIcon fontSize=\"default\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withLocalize(PlayerListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { removePlayer, updatePlayer } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport PlayerListItem from \"./PlayerListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  players: selectors.getPlayers(state.play),\r\n});\r\n\r\nconst dispatchProps = {\r\n  removePlayer,\r\n  updatePlayer,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction PlayerList({ players, removePlayer, updatePlayer }: Props) {\r\n  return (\r\n    <List>\r\n      {players.map(player => (\r\n        <ListItem key={player.id}>\r\n          <ListItemText>\r\n            <PlayerListItem\r\n              name={player.name}\r\n              gender={player.gender}\r\n              onRemoveClick={() => removePlayer(player.id)}\r\n              onNameChanged={name =>\r\n                updatePlayer(new PlayerInfo(player.id, name, player.gender))\r\n              }\r\n              onSwapGenderClick={() =>\r\n                updatePlayer(\r\n                  new PlayerInfo(\r\n                    player.id,\r\n                    player.name,\r\n                    player.gender === \"Female\" ? \"Male\" : \"Female\",\r\n                  ),\r\n                )\r\n              }\r\n            />\r\n          </ListItemText>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  dispatchProps,\r\n)(PlayerList);\r\n","import React from \"react\";\r\nimport {\r\n    Typography,\r\n    WithStyles,\r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { addPlayerArrangment, removePlayerArrangment } from \"../actions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        arrangmentItem: {\r\n            borderBottom: \"1px solid #d8d8d8\",\r\n            paddingBottom: 5,\r\n        },\r\n        arrangementSelect: {\r\n            width: 200,\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                width: \"100%\",\r\n            },\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    players: state.play.players,\r\n    arrangements: state.play.arrangements,\r\n});\r\n\r\nconst dispatchProps = {\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles>;\r\n\r\nfunction PlayerArrangements({\r\n    classes,\r\n    players,\r\n    arrangements,\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle2\">\r\n                <Translate id=\"settings.configuration.arrangements\" />\r\n            </Typography>\r\n            <Typography>\r\n                <Translate id=\"settings.configuration.arrangements.description\" />\r\n            </Typography>\r\n            <Grid container>\r\n                {players\r\n                    .filter(player => arrangements.findIndex(x => x.p2 === player.id) === -1)\r\n                    .map(player => {\r\n                        const arrangment = arrangements.find(x => x.p1 === player.id);\r\n                        const arrangedPlayerId = arrangment === undefined ? \"\" : arrangment.p2;\r\n                        return (\r\n                            <Grid\r\n                                item\r\n                                container\r\n                                alignItems=\"flex-end\"\r\n                                className={classes.arrangmentItem}\r\n                                key={player.id}\r\n                            >\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Typography variant=\"subtitle1\">{player.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl className={classes.arrangementSelect}>\r\n                                        <InputLabel htmlFor=\"player-selection\">\r\n                                            <Translate id=\"settings.configuration.arrangements.pairWith\" />\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            value={arrangedPlayerId}\r\n                                            onChange={ev => {\r\n                                                const value = ev.target.value;\r\n                                                if (value === \"\") {\r\n                                                    removePlayerArrangment(player.id);\r\n                                                } else {\r\n                                                    addPlayerArrangment({\r\n                                                        p1: player.id,\r\n                                                        p2: value,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            input={<Input id=\"player-selection\" />}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>\r\n                                                    <Translate id=\"settings.configuration.arrangements.none\" />\r\n                                                </em>\r\n                                            </MenuItem>\r\n                                            {players\r\n                                                .filter(\r\n                                                    x =>\r\n                                                        x.id !== player.id &&\r\n                                                        arrangements.findIndex(\r\n                                                            y =>\r\n                                                                (y.p1 === x.id || y.p2 === x.id) &&\r\n                                                                y.p1 !== player.id,\r\n                                                        ) === -1,\r\n                                                )\r\n                                                .map(x => (\r\n                                                    <MenuItem key={x.id} value={x.id}>\r\n                                                        {x.name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(PlayerArrangements) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangements from \"./PlayerArrangements\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: \"relative\",\r\n        },\r\n        flex: {\r\n            flex: 1,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing.unit * 2,\r\n        },\r\n        dialogPaper: {\r\n            height: \"80vh\",\r\n        },\r\n        fullscreenPaper: {\r\n            height: \"100vh\",\r\n        },\r\n    });\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction PlayerArrangementsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClose={() => history.goBack()}\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            classes={{\r\n                paperScrollPaper: classes.dialogPaper,\r\n                paperFullScreen: classes.fullscreenPaper,\r\n            }}\r\n        >\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                        <Translate id=\"play.playerArrangements\" />\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                        <Translate id=\"close\" />\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.content}>\r\n                <PlayerArrangements />\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(PlayerArrangementsDialog) as React.ComponentType;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddPlayerForm from \"../features/play/components/AddPlayerForm\";\r\nimport PlayerList from \"../features/play/components/PlayerList\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../features/play/components/PlayerArrangementsDialog\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            maxWidth: 800,\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction PlayComponent({ classes }: Props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className={classes.tabContainer}>\r\n                <div className={classes.headerMargin}>\r\n                    <AddPlayerForm />\r\n                </div>\r\n                <div className={classes.fillRemaining}>\r\n                    <PlayerList />\r\n                </div>\r\n            </Grid>\r\n\r\n            <Route path=\"/play/arrangements\" component={PlayerArrangementsDialog} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n)(PlayComponent) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { createAsyncAction, createStandardAction } from \"typesafe-actions\";\r\nimport { Card } from \"@core/cards/card\";\r\n\r\nexport const addSource = createStandardAction(\"ADD_SOURCE\").map(\r\n    (url: string): { payload: SourceInfo } => ({\r\n        payload: {\r\n            url,\r\n            isLoading: false,\r\n            errorMessage: null,\r\n            cards: null,\r\n            weight: 0.5,\r\n            tags: []\r\n        },\r\n    }),\r\n);\r\nexport const removeSource = createStandardAction(\"REMOVE_SOURCE\")<string>();\r\n\r\nexport const loadSourceAsync = createAsyncAction(\r\n    \"LOAD_SOURCE_REQUEST\",\r\n    \"LOAD_SOURCE_SUCCESS\",\r\n    \"LOAD_SOURCE_FAILURE\",\r\n)<string, { url: string; cards: Card[] }, { url: string; message: string }>();\r\n\r\nexport const setSourceWeight = createStandardAction(\"SET_SOURCE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setPreferOppositeGenders = createStandardAction(\"SET_PREFER_OPPOSITE_GENDERS\")<\r\n    boolean\r\n>();\r\n\r\nexport const setSocialMediaPlatform = createStandardAction(\"SET_SOCIAL_MEDIA_PLATFORM\")<string>();\r\n\r\nexport const setSlideWeight = createStandardAction(\"SET_SLIDE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setTagWeight = createStandardAction(\"SET_TAG_WEIGHT\")<Weighted<string>>();\r\n","import {SettingsState} from \"./reducer\";\r\n\r\nexport const getSources = (state: SettingsState) => state.sources;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSource, loadSourceAsync } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    addSource,\r\n    loadSource: loadSourceAsync.request,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    url: string;\r\n};\r\n\r\nclass AddSourceForm extends React.Component<Props, State> {\r\n    readonly state = { url: \"\" };\r\n\r\n    handleUrlChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ url: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        if (!this.state.url || this.props.sources.findIndex(x => x.url === this.state.url) > -1) {\r\n            return;\r\n        }\r\n\r\n        this.props.addSource(this.state.url);\r\n        this.props.loadSource(this.state.url);\r\n        this.setState({ url: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.url) {\r\n                this.handleAddClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { url } = this.state;\r\n        const { translate } = this.props;\r\n        const sourceExists = this.props.sources.findIndex(x => x.url === this.state.url) > -1;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={url}\r\n                        placeholder={translate(\"settings.sources.sourceUrl\") as string}\r\n                        error={sourceExists}\r\n                        onChange={this.handleUrlChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!url || sourceExists}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(AddSourceForm));\r\n","import {\r\n    Card,\r\n    CardHeader,\r\n    Typography,\r\n    Link,\r\n    Checkbox,\r\n    withStyles,\r\n    Theme,\r\n    createStyles,\r\n    LinearProgress,\r\n    Badge,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport React from \"react\";\r\nimport { Slider } from \"@material-ui/lab\";\r\n\r\ninterface LoadingFailedItemProps {\r\n    errorMessage: string | null;\r\n    onReloadClick: () => void;\r\n}\r\n\r\ninterface WeightProps {\r\n    weight: number;\r\n    onChangeWeight: (value: number) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n        },\r\n        title: {\r\n            textOverflow: \"elipsis\",\r\n            wordBreak: \"break-all\",\r\n            overflow: \"hidden\",\r\n        },\r\n        fullWidth: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ninterface Props extends LoadingFailedItemProps, WeightProps, WithStyles<typeof styles> {\r\n    url: string;\r\n    isLoading: boolean;\r\n    cardsCount: number;\r\n    weight: number;\r\n    onRemoveClick: () => void;\r\n}\r\n\r\nfunction LoadingItem() {\r\n    return <LinearProgress />;\r\n}\r\n\r\nfunction LoadingFailedItem({ errorMessage, onReloadClick }: LoadingFailedItemProps) {\r\n    return (\r\n        <Typography color=\"secondary\" variant=\"body1\" component=\"small\">\r\n            {`${errorMessage}`}\r\n            <Link\r\n                style={{ marginLeft: 15 }}\r\n                component=\"button\"\r\n                variant=\"body1\"\r\n                onClick={onReloadClick}\r\n            >\r\n                Reload\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction WeightSlider({ weight, onChangeWeight }: WeightProps) {\r\n    return (\r\n        <Slider\r\n            max={1}\r\n            min={0}\r\n            step={0.05}\r\n            style={{ margin: 10, padding: '4px 0px' }}\r\n            value={weight}\r\n            onChange={(_, n) => onChangeWeight(n)}\r\n        />\r\n    );\r\n}\r\n\r\nfunction SourcesListItem({\r\n    url,\r\n    classes,\r\n    isLoading,\r\n    errorMessage,\r\n    cardsCount,\r\n    weight,\r\n    onRemoveClick,\r\n    onReloadClick,\r\n    onChangeWeight,\r\n}: Props) {\r\n    return (\r\n        <Badge\r\n            badgeContent={cardsCount}\r\n            color=\"primary\"\r\n            max={9999}\r\n            className={classes.fullWidth}\r\n            showZero={false}\r\n        >\r\n            <Card className={classes.fullWidth}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Checkbox\r\n                            checked={weight !== 0}\r\n                            style={{ margin: -10 }}\r\n                            onChange={(_, b) => (b ? onChangeWeight(0.5) : onChangeWeight(0))}\r\n                        />\r\n                    }\r\n                    titleTypographyProps={{ className: classes.title }}\r\n                    title={url}\r\n                    action={\r\n                        <IconButton onClick={onRemoveClick}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    }\r\n                    subheader={\r\n                        isLoading ? (\r\n                            <LoadingItem />\r\n                        ) : errorMessage ? (\r\n                            <LoadingFailedItem\r\n                                errorMessage={errorMessage}\r\n                                onReloadClick={onReloadClick}\r\n                            />\r\n                        ) : (\r\n                            <WeightSlider weight={weight} onChangeWeight={onChangeWeight} />\r\n                        )\r\n                    }\r\n                />\r\n            </Card>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SourcesListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadSourceAsync, removeSource, setSourceWeight } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport SourcesListItem from \"./SourcesListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    loadSource: loadSourceAsync.request,\r\n    removeSource,\r\n    setSourceWeight,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SourcesList({ sources, removeSource, loadSource, setSourceWeight }: Props) {\r\n    return (\r\n        <List>\r\n            {sources.map(source => (\r\n                <ListItem key={source.url}>\r\n                    <ListItemText>\r\n                        <SourcesListItem\r\n                            url={source.url}\r\n                            isLoading={source.isLoading}\r\n                            errorMessage={source.errorMessage}\r\n                            cardsCount={(source.cards && source.cards.length) || 0}\r\n                            weight={source.weight}\r\n                            onChangeWeight={weight =>\r\n                                setSourceWeight({ value: source.url, weight })\r\n                            }\r\n                            onRemoveClick={() => removeSource(source.url)}\r\n                            onReloadClick={() => loadSource(source.url)}\r\n                        />\r\n                    </ListItemText>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(SourcesList);\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddSourceForm from \"../features/settings/components/AddSourceForm\";\r\nimport SourcesList from \"../features/settings/components/SourcesList\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction SourcesComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.headerMargin}>\r\n                <AddSourceForm />\r\n            </div>\r\n            <div className={classes.fillRemaining}>\r\n                <SourcesList />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(SourcesComponent);\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Grid,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nconst styles = () =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ntype Props = LocalizeContextProps & WithStyles<typeof styles>;\r\n\r\nfunction ChangeLanguage({ activeLanguage, languages, setActiveLanguage, classes }: Props) {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={10} md={8} lg={6}>\r\n                <FormControl className={classes.root}>\r\n                    <InputLabel htmlFor=\"language-input\">\r\n                        <Translate id=\"settings.configuration.language\" />\r\n                    </InputLabel>\r\n                    <Select\r\n                        inputProps={{\r\n                            id: \"language-input\",\r\n                        }}\r\n                        style={{ width: \"100%\" }}\r\n                        value={activeLanguage === undefined ? \"en\" : activeLanguage.code}\r\n                        onChange={ev => setActiveLanguage(ev.target.value)}\r\n                    >\r\n                        {languages.map(lang => (\r\n                            <MenuItem key={lang.code} value={lang.code}>{lang.name}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(withLocalize(ChangeLanguage));\r\n","import { FormControlLabel, Switch, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setPreferOppositeGenders } from \"../../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    preferOppositeGenders: state.settings.preferOppositeGenders,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setPreferOppositeGenders,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\nfunction PlayerSettings({ preferOppositeGenders, setPreferOppositeGenders }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.playerSettings\" />\r\n            </Typography>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={preferOppositeGenders}\r\n                        onChange={(_, c) => setPreferOppositeGenders(c)}\r\n                    />\r\n                }\r\n                label={<Translate id=\"settings.configuration.playerSettings.pairOppositeGenders\" />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n)(PlayerSettings) as React.ComponentType;\r\n","export const socialMediaPlatforms = [\"Snapchat\", \"Instagram\", \"Facebook\"];\r\n\r\nexport const defaultSources = [\r\n    \"/cards/bullshitfact.xml\",\r\n    \"/cards/ichundderalkohol.xml\",\r\n    \"/cards/ConversationStartersWorld.NeverHaveIEver.xml\",\r\n    \"/cards/Bevil.xml\",\r\n    \"/cards/ConversationStartersWorld.TruthOrDareDare.xml\",\r\n    \"/cards/ConversationStartersWorld.TruthOrDareTruth.xml\",\r\n    \"/cards/ConversationStartersWorld.Wyr.xml\",\r\n    \"/cards/common.xml\",\r\n    \"/cards/Picolo/Picolo.xml\",\r\n    \"/cards/Picolo/Picolo.Silly.xml\",\r\n    \"/cards/realfacts.xml\",\r\n];\r\n\r\nexport const slideWeights: { [key: string]: number } = {\r\n    FactSlide: 0.4,\r\n    DownSlide: 0.2,\r\n    NeverEverSlide: 0.5,\r\n    TruthOrDareSlide: 0.35,\r\n    WouldYouRatherSlide: 0.5,\r\n    DrinkSlide: 0.5,\r\n    VirusSlide: 0.25,\r\n    NoIdeaLosesSlide: 0.5,\r\n    GroupGameSlide: 0.4,\r\n    TaskSlide: 0.2,\r\n};\r\n\r\n// if a card has one of these tags and an arranged player is selected\r\n// the propability that their counterpart is selected is increased further\r\nexport const higherArrangementPropabilityTags = [\"sexual\"];\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport * as React from \"react\";\r\nimport { Typography, FormControl, Select, Input, MenuItem } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { setSocialMediaPlatform } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { socialMediaPlatforms } from \"../../../../preferences\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    platform: state.settings.socialMediaPlatform,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSocialMediaPlatform,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction ChangeLanguage({ platform, setSocialMediaPlatform }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.socialMediaPlatform\" />\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n                <Translate id=\"settings.configuration.socialMediaPlatform.description\" />\r\n            </Typography>\r\n            <FormControl>\r\n                <Select style={{width: 200, marginTop: 10}}\r\n                    value={platform}\r\n                    onChange={ev => setSocialMediaPlatform(ev.target.value)}\r\n                    input={<Input />}\r\n                >\r\n                    {socialMediaPlatforms.map(x => (\r\n                        <MenuItem key={x} value={x}>\r\n                            {x}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(ChangeLanguage));\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Slider } from \"@material-ui/lab\";\r\nimport * as React from \"react\";\r\n\r\ninterface Props {\r\n    items: Weighted<string>[];\r\n    onChangeWeight: (item: Weighted<string>) => void;\r\n}\r\n\r\nclass ItemPreferences extends React.Component<Props> {\r\n    render() {\r\n        const { items, onChangeWeight } = this.props;\r\n\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {items.map(x => \r\n                        <tr key={x.value}>\r\n                            <td>\r\n                                <Typography\r\n                                    style={{\r\n                                        opacity: x.weight === 0 ? 0.5 : 1,\r\n                                    }}\r\n                                >\r\n                                    {x.value}\r\n                                </Typography>\r\n                            </td>\r\n                            <td style={{width: \"100%\"}}>\r\n                                <Slider\r\n                                    max={1}\r\n                                    min={0}\r\n                                    style={{ padding: \"20px 0 20px 5px\", width: \"100%\" }}\r\n                                    step={0.05}\r\n                                    value={x.weight}\r\n                                    onChange={(_, v) =>\r\n                                        onChangeWeight({ value: x.value, weight: v })\r\n                                    }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n\r\n        // return (\r\n        //     <Grid container>\r\n        //         {items.map(x => (\r\n        //             <Grid key={x.value} item container alignItems=\"center\">\r\n        //                 <Grid item>\r\n        //                     <Typography\r\n        //                         style={{\r\n        //                             opacity: x.weight === 0 ? 0.5 : 1,\r\n        //                         }}\r\n        //                     >\r\n        //                         {x.value}\r\n        //                     </Typography>\r\n        //                 </Grid>\r\n        //                 <Grid item xs={8} lg={9}>\r\n        //                     <Slider\r\n        //                         max={1}\r\n        //                         min={0}\r\n        //                         style={{ padding: \"20px 0\" }}\r\n        //                         step={0.05}\r\n        //                         value={x.weight}\r\n        //                         onChange={(_, v) => onChangeWeight({ value: x.value, weight: v })}\r\n        //                     />\r\n        //                 </Grid>\r\n        //             </Grid>\r\n        //         ))}\r\n        //     </Grid>\r\n        // );\r\n    }\r\n}\r\n\r\nexport default ItemPreferences;\r\n","export function percentageFixedTotal<T>(\r\n    values: T[],\r\n    getPercentage: (x: T) => number,\r\n    target: number,\r\n): Array<{ value: T; part: number }> {\r\n    // https://stackoverflow.com/a/13483486\r\n    const percentageValues = values.map(value => ({ value, percent: getPercentage(value) }));\r\n    const total = percentageValues.reduce((x, y) => x + y.percent, 0);\r\n\r\n    const result = new Array<{ value: T; part: number }>();\r\n    let sum = 0;\r\n    let prevBaseline = 0;\r\n\r\n    for (let i = 0; i < percentageValues.length; i++) {\r\n        const {value, percent} = percentageValues[i];\r\n\r\n        sum += percent / total * target;\r\n        const sumRounded = Math.round(sum);\r\n\r\n        result.push({ value, part: sumRounded - prevBaseline });\r\n        prevBaseline = sumRounded;\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setSlideWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slides: state.settings.slides,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSlideWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SlidePreferences({ slides, setSlideWeight }: Props) {\r\n    const totalCards = 50;\r\n    const slidePercentages = percentageFixedTotal(slides, x => x.weight, totalCards);\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.slides\" />\r\n            </Typography>\r\n            <ItemPreferences items={slides} onChangeWeight={x => setSlideWeight(x)} />\r\n            <Typography>\r\n                <Translate\r\n                    id=\"settings.configuration.slidesProjection\"\r\n                    data={{ count: totalCards }}\r\n                />\r\n                {slidePercentages.map((x, i) => (\r\n                    <React.Fragment key={x.value.value}>\r\n                        <b style={{fontWeight: \"bolder\"}}>{x.value.value}</b>: {x.part}\r\n                        {i < slidePercentages.length - 1 ? \", \" : null}\r\n                    </React.Fragment>\r\n                ))}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(SlidePreferences));\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setTagWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    tags: state.settings.tags,\r\n    decks: state.settings.sources,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setTagWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction TagPreferences({ tags, decks, setTagWeight }: Props) {\r\n    const allTags = _.uniq(decks.flatMap(x => x.tags));\r\n    const weights = allTags.map(x => tags.find(y => y.value === x) || { value: x, weight: 0.5 });\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.tags\" />\r\n            </Typography>\r\n            <ItemPreferences items={weights} onChangeWeight={x => setTagWeight(x)} />\r\n            {weights.length === 0 ? (\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    <Translate id=\"settings.configuration.tags.none\" />\r\n                </Typography>\r\n            ) : (\r\n                undefined\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(TagPreferences));\r\n","import * as React from \"react\";\r\nimport ChangeLanguage from \"./configuration/ChangeLanguage\";\r\nimport PlayerPairing from \"./configuration/PlayerPairing\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SocialMediaPlatform from \"./configuration/SocialMediaPlatform\";\r\nimport SlidePreferences from \"./configuration/SlidePreferences\";\r\nimport TagsPerferences from \"./configuration/TagsPerferences\";\r\n\r\nclass Configuration extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid style={{ maxWidth: 800 }}>\r\n                <Grid container spacing={32} direction=\"column\">\r\n                    <Grid item style={{ marginBottom: 20 }}>\r\n                        <ChangeLanguage />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <PlayerPairing />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SocialMediaPlatform />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SlidePreferences />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TagsPerferences />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Configuration;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Configuration from \"../features/settings/components/Configuration\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            padding: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction ConfigurationComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.fillRemaining} style={{ overflowX: \"hidden\" }}>\r\n                <Configuration />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ConfigurationComponent);\r\n","import { LocalizeContextProps } from \"react-localize-redux\";\r\nimport { Translator } from \"GameModels\";\r\n\r\nexport function toTranslator(localize: LocalizeContextProps): Translator {\r\n    return {\r\n        languageCode: localize.activeLanguage.code,\r\n        translate: x => localize.translate(x) as string,\r\n    }\r\n}","import { ParsingOptions } from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { Theme, Typography } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nexport function getRootStyles(): CSSProperties {\r\n    return {\r\n        backgroundColor: \"transparent\",\r\n        height: \"100%\",\r\n        fontSize: 25,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        \"-webkit-tap-highlight-color\": \"rgba(255, 255, 255, 0)\"\r\n    };\r\n}\r\n\r\nexport function getContentStyles(theme: Theme): CSSProperties {\r\n    return {\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            width: \"100%\",\r\n            marginLeft: 30,\r\n            marginRight: 30,\r\n            fontSize: 20,\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"80%\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"60%\",\r\n        },\r\n    }\r\n}\r\n\r\nexport function spaceHeaderStyles(theme: Theme): CSSProperties {\r\n    return {\r\n        visibility: \"hidden\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"2rem\",\r\n        }\r\n    };\r\n}\r\n\r\nexport function getHeaderStyles(theme: Theme): CSSProperties {\r\n    return {\r\n        color: \"white\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"2rem\",\r\n        }\r\n    }\r\n}\r\n\r\nfunction MyParagaph({ children, ...props }: any) {\r\n    return (\r\n        <Typography {...props} style={{ marginBlockStart: 5, marginBlockEnd: 5, color: \"white\", fontSize: \"1.2rem\" }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction MyH3({ children, ...props }: any) {\r\n    return (\r\n        <h3 {...props} style={{ marginBlockStart: 5, marginBlockEnd: 5 }}>\r\n            {children}\r\n        </h3>\r\n    );\r\n}\r\n\r\nfunction MyH4({ children, ...props }: any) {\r\n    return (\r\n        <h4 {...props} style={{ marginBlockStart: 5, marginBlockEnd: 5 }}>\r\n            {children}\r\n        </h4>\r\n    );\r\n}\r\n\r\nexport const defaultMarkdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: MyParagaph,\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: MyH3,\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: MyH4,\r\n            props: {},\r\n        },\r\n    },\r\n};\r\n","import { createStyles, Theme, WithStyles, withStyles, Typography } from \"@material-ui/core\";\r\nimport { RootState, RootAction } from \"DrinctetTypes\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { defaultMarkdownOptions, getContentStyles, getRootStyles } from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { Keyframes, animated } from \"react-spring/renderprops\";\r\nimport { useSpring, animated as animatedDom } from \"react-spring\";\r\n\r\nconst color = \"#2980b9\";\r\nconst progressColor = \"#3498db\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as OpeningSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...getRootStyles(),\r\n            backgroundColor: color,\r\n            position: \"relative\",\r\n        },\r\n        rootProgress: {\r\n            height: \"100%\",\r\n            backgroundColor: progressColor,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            zIndex: 5,\r\n        },\r\n        content: {\r\n            ...getContentStyles(theme),\r\n            zIndex: 10,\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction OpeningSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state, translate } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const { continuationDate } = state;\r\n    const remaining = Math.abs(+continuationDate - Date.now());\r\n\r\n    const Container = Keyframes.Spring(async (next: any) => {\r\n        await next({\r\n            from: { width: \"0%\" },\r\n            width: \"100%\",\r\n            config: {\r\n                duration: remaining,\r\n            },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: progressColor },\r\n            backgroundColor: color,\r\n            config: { duration: 200 },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: color },\r\n            backgroundColor: progressColor,\r\n            config: { duration: 200 },\r\n        });\r\n    }) as any;\r\n\r\n    const tapToContinueProps = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: remaining,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            onClick={() =>\r\n                (new Date() > continuationDate || process.env.NODE_ENV === \"development\") &&\r\n                nextSlide(toTranslator(props))\r\n            }\r\n        >\r\n            <Container native>\r\n                {(props: any) => <animated.div className={classes.rootProgress} style={props} />}\r\n            </Container>\r\n            <div className={classes.content}>\r\n                <Typography variant=\"h5\" color=\"inherit\" className={classes.header} gutterBottom>\r\n                    <Translate id=\"game.welcome\" />\r\n                </Typography>\r\n                <Markdown\r\n                    children={translate(\"game.openingInfo\") as string}\r\n                    options={defaultMarkdownOptions}\r\n                />\r\n                <animatedDom.div style={tapToContinueProps}>\r\n                    <Typography style={{ color: \"white\", marginTop: 20 }} variant=\"h6\">\r\n                        <Translate id=\"game.tapToContinue\" />\r\n                    </Typography>\r\n                </animatedDom.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(OpeningSlideComponent) as React.ComponentType;\r\n\r\ninterface OpeningSlideState {\r\n    continuationDate: Date;\r\n}\r\n\r\nexport class OpeningSlide implements SlidePresenter {\r\n    slideType = \"OpeningSlide\";\r\n    requiredCards = [];\r\n    backgroundColor = color;\r\n\r\n    initialize(): RootAction[] {\r\n        const date = new Date();\r\n        date.setSeconds(date.getSeconds() + 5);\r\n\r\n        return [\r\n            this.setSlideState({\r\n                continuationDate: date,\r\n            }),\r\n        ];\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setSlideState(state: OpeningSlideState): RootAction {\r\n        return actions.setSlideState({ state, insights: null });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","// Source: https://github.com/vasilevich/react-fullscreen-crossbrowser (MIT)\r\n\r\nconst key: any = {\r\n    fullscreenEnabled: 0,\r\n    fullscreenElement: 1,\r\n    requestFullscreen: 2,\r\n    exitFullscreen: 3,\r\n    fullscreenchange: 4,\r\n    fullscreenerror: 5,\r\n};\r\n\r\nconst webkit = [\r\n    \"webkitFullscreenEnabled\",\r\n    \"webkitFullscreenElement\",\r\n    \"webkitRequestFullscreen\",\r\n    \"webkitExitFullscreen\",\r\n    \"webkitfullscreenchange\",\r\n    \"webkitfullscreenerror\",\r\n];\r\n\r\nconst moz = [\r\n    \"mozFullScreenEnabled\",\r\n    \"mozFullScreenElement\",\r\n    \"mozRequestFullScreen\",\r\n    \"mozCancelFullScreen\",\r\n    \"mozfullscreenchange\",\r\n    \"mozfullscreenerror\",\r\n];\r\n\r\nconst ms = [\r\n    \"msFullscreenEnabled\",\r\n    \"msFullscreenElement\",\r\n    \"msRequestFullscreen\",\r\n    \"msExitFullscreen\",\r\n    \"MSFullscreenChange\",\r\n    \"MSFullscreenError\",\r\n];\r\n\r\n// so it doesn't throw if no window or document\r\nconst document: any =\r\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\" ? window.document : {};\r\n\r\nconst vendor =\r\n    (\"fullscreenEnabled\" in document && Object.keys(key)) ||\r\n    (webkit[0] in document && webkit) ||\r\n    (moz[0] in document && moz) ||\r\n    (ms[0] in document && ms) ||\r\n    [];\r\n\r\nexport default class Fullscreen {\r\n    static requestFullscreen(element: any) {\r\n        return element[vendor[key.requestFullscreen]]();\r\n    }\r\n    static requestFullscreenFunction(element: any) {\r\n        return element[vendor[key.requestFullscreen]];\r\n    }\r\n    static get exitFullscreen() {\r\n        return document[vendor[key.exitFullscreen]].bind(document);\r\n    };\r\n    static addEventListener(type: any, handler: any, options: any) {\r\n        return document.addEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static removeEventListener(type: any, handler: any, options: any) {\r\n        return document.removeEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static get fullscreenEnabled() {\r\n        return Boolean(document[vendor[key.fullscreenEnabled]]);\r\n    }\r\n    static get fullscreenElement() {\r\n        return document[vendor[key.fullscreenElement]];\r\n    }\r\n    static get onfullscreenchange() {\r\n        return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenchange(handler) {\r\n        document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler;\r\n    }\r\n    static get onfullscreenerror() {\r\n        return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenerror(handler) {\r\n        document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler;\r\n    }\r\n}\r\n","import {\r\n    createStyles,\r\n    IconButton,\r\n    ListItemIcon,\r\n    Menu,\r\n    MenuItem,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component, ComponentType } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport Fullscreen from \"@utils/fullscreen\";\r\n\r\nconst styles = createStyles({\r\n    button: {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles> &\r\n    RouteComponentProps;\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n    activeFollowUp: state.game.activeFollowUp,\r\n    selectedCard: state.game.selectedCard,\r\n});\r\n\r\nconst dispatchProps = {};\r\n\r\ninterface State {\r\n    anchorEl: HTMLElement | null;\r\n    isFullscreen: boolean;\r\n}\r\n\r\nclass GameOptions extends Component<Props, State> {\r\n    readonly state: State = {\r\n        anchorEl: null,\r\n        isFullscreen: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        Fullscreen.onfullscreenchange = () => {\r\n            this.setState(state => ({ ...state, isFullscreen: Fullscreen.fullscreenElement }));\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Fullscreen.onfullscreenchange = null;\r\n    }\r\n\r\n    handleMenuOpenClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleNavigate = (path: string) => {\r\n        this.handleClose();\r\n        this.props.history.push(`/play/game/${path}`);\r\n    };\r\n\r\n    toggleFullscreen = () => {\r\n        const { isFullscreen } = this.state;\r\n        if (isFullscreen) {\r\n            Fullscreen.exitFullscreen();\r\n        } else {\r\n            Fullscreen.requestFullscreen(window.document.documentElement);\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n    \r\n    handleExit = () => {\r\n        this.handleClose();\r\n        this.props.history.push(\"/play\");\r\n    };\r\n\r\n    render() {\r\n        const { classes, selectedCard } = this.props;\r\n        const { anchorEl, isFullscreen } = this.state;\r\n        const isOpen = anchorEl !== null;\r\n\r\n        return (\r\n            <div>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={this.handleMenuOpenClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={isOpen}\r\n                    onClose={this.handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => this.handleNavigate(\"settings\")}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.settings\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => this.handleNavigate(\"insights\")}>\r\n                        <ListItemIcon>\r\n                            <DonutLargeIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.insights\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleClose} disabled={selectedCard === null}>\r\n                        <ListItemIcon>\r\n                            <FeedbackIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.reportCard\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.toggleFullscreen}>\r\n                        <ListItemIcon>\r\n                            {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\r\n                        </ListItemIcon>\r\n                        <Translate id={isFullscreen ? \"game.options.exitFullscreen\" : \"game.options.fullscreen\"} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleExit}>\r\n                        <ListItemIcon>\r\n                            <ArrowBackIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.exit\" />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withLocalize,\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withRouter,\r\n)(GameOptions) as ComponentType;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, createStyles, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slide: state.game.selectedSlide,\r\n    slideInsights: state.game.slideInsights,\r\n    playerInsights: state.game.playerInsights,\r\n    players: state.play.players,\r\n    cardRef: state.game.selectedCard,\r\n});\r\n\r\nconst styles = createStyles({\r\n    section: {\r\n        marginTop: 10,\r\n    },\r\n    scrollableTable: {\r\n        overflow: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    tableCellNoBreak: {\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles>;\r\n\r\nfunction renderPredefinedPlayers({ playerInsights, players }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography>\r\n                <Translate id=\"insights.predefinedPlayers\" />\r\n                {\": \"}\r\n                {playerInsights!.predefined\r\n                    .map(x => players.find(y => y.id === x))\r\n                    .filter(x => x != null)\r\n                    .map(x => x!.name)\r\n                    .join(\", \")}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderPlayerInsights(props: Props) {\r\n    const { playerInsights, players, classes } = props;\r\n    return (\r\n        <div className={classes.scrollableTable}>\r\n            {playerInsights!.predefined.length > 0 ? renderPredefinedPlayers(props) : null}\r\n            {playerInsights!.rounds.map((x, i) => {\r\n                const statistics = percentageFixedTotal(x, x => x.weight, 1000);\r\n                return (\r\n                    <table key={i}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className={classes.tableCellNoBreak}>\r\n                                    <Typography>\r\n                                        <Translate id=\"insights.player\" data={{ number: i + 1 }} />:\r\n                                    </Typography>\r\n                                </td>\r\n                                {statistics.map(y => {\r\n                                    const player = players.find(p => p.id === y.value.playerId);\r\n                                    let element: JSX.Element;\r\n                                    if (player === undefined) {\r\n                                        element = (\r\n                                            <span>\r\n                                                <i>\r\n                                                    <Translate id=\"insights.playerRemoved\" />\r\n                                                </i>{\" \"}\r\n                                                ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    } else {\r\n                                        element = (\r\n                                            <span>\r\n                                                {player.name} ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    }\r\n\r\n                                    return (\r\n                                        <td key={y.value.playerId} style={{ paddingLeft: 10 }}>\r\n                                            <Typography>\r\n                                                {conditionalBold(element, y.value.chosen)}\r\n                                            </Typography>\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction conditionalBold(element: JSX.Element, isBold: boolean): JSX.Element {\r\n    if (isBold) {\r\n        return <b>{element}</b>;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nfunction renderSlideWeights({ slide, slideInsights }: Props) {\r\n    const slides = slideInsights!.weights;\r\n    const statistics = percentageFixedTotal(slides, x => x.weight, 1000);\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {statistics.map(x => (\r\n                    <tr key={x.value.value}>\r\n                        <td>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.value.value}</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                        <td style={{ paddingLeft: 10 }}>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.part / 10}%</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nclass InsightsCurrentSlide extends Component<Props> {\r\n    render() {\r\n        const { playerInsights, classes, cardRef } = this.props;\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.currentSlide\" />\r\n                </Typography>\r\n                <Typography>\r\n                    <Translate id=\"insights.currentCard\" />\r\n                    {\": \"}\r\n                    {cardRef === null ? (\r\n                        <i>\r\n                            <Translate id=\"insights.noCard\" />\r\n                        </i>\r\n                    ) : (\r\n                        <span>\r\n                            <Translate\r\n                                id=\"insights.cardInfo\"\r\n                                data={{\r\n                                    name: cardRef.card.type,\r\n                                    id: cardRef.card.id,\r\n                                    wp: cardRef.card.willPower === undefined ? <Translate id=\"insights.universal\"/> : cardRef.card.willPower,\r\n                                    url: cardRef.deckUrl\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    )}\r\n                </Typography>\r\n                {renderSlideWeights(this.props)}\r\n\r\n                <Typography variant=\"h6\" className={classes.section}>\r\n                    <Translate id=\"insights.playerSelection\" />\r\n                </Typography>\r\n                {playerInsights === null ? (\r\n                    <Typography>\r\n                        <i>\r\n                            <Translate id=\"insights.noPlayers\" />\r\n                        </i>\r\n                    </Typography>\r\n                ) : (\r\n                    renderPlayerInsights(this.props)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsCurrentSlide) as React.ComponentType;\r\n","import { createStyles, FormControlLabel, FormGroup, Switch, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setWillPower, setWillPowerLocked } from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n    isLocked: state.game.isWillPowerLocked,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n};\r\n\r\nconst styles = \r\n    createStyles({\r\n        toggleContainer: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & WithStyles<typeof styles>;\r\n\r\nfunction InsightsWillPowerView({\r\n    currentWillPower,\r\n    isLocked,\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n    classes,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                <Translate id=\"insights.willPower\" />\r\n            </Typography>\r\n            <div className={classes.toggleContainer}>\r\n                <ToggleButtonGroup\r\n                    exclusive\r\n                    value={currentWillPower}\r\n                    onChange={(_, y) => setWillPower(y)}\r\n                    children={[1, 2, 3, 4, 5].map(x => (\r\n                        <ToggleButton key={x} value={x}>\r\n                            {x}\r\n                        </ToggleButton>\r\n                    ))}\r\n                />\r\n            </div>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch checked={isLocked} onChange={(_, x) => setWillPowerLocked(x)} />\r\n                    }\r\n                    label={<Translate id=\"insights.lockWillPower\" />}\r\n                />\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsWillPowerView) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { CardDeck } from \"@core/card-deck\";\r\n\r\nexport class Insights {\r\n    public playerSelection: PlayerSelectionInsights | null = null;\r\n    public slideWeights: SlideSelectionInsights | null  = null;\r\n}\r\n\r\nexport interface PlayerSelectionInsights {\r\n    predefined: string[];\r\n    rounds: Array<PlayerSelection[]>;\r\n}\r\n\r\nexport interface SlideSelectionInsights {\r\n    weights: Weighted<string>[];\r\n}\r\n\r\nexport interface PlayerSelection {\r\n    chosen: boolean;\r\n    weight: number;\r\n    playerId: string;\r\n}\r\n\r\nexport interface CardsInsight {\r\n    decks: Weighted<CardDeck>[];\r\n    willPower: Weighted<{willPower: number | null, count: number}>[];\r\n    totalCards: number;\r\n}\r\n","import { Weighted } from \"./../weighted\";\r\n\r\nexport type RNG = () => number;\r\nconst defaultRandomGenerator: RNG = () => Math.random();\r\n\r\nexport function selectRandomWeighted<T>(\r\n    items: T[],\r\n    getWeight: (item: T) => number,\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    if (items.length === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    const weights: Array<{ item: T; weight: number }> = [];\r\n    let totalWeight: number = 0;\r\n    for (const item of items) {\r\n        const weight = getWeight(item);\r\n        weights.push({ item, weight });\r\n\r\n        totalWeight += weight;\r\n    }\r\n\r\n    let randomWeight = totalWeight * random();\r\n    for (const { item, weight } of weights) {\r\n        if (weight === 0) {\r\n            continue;\r\n        }\r\n        randomWeight -= weight;\r\n\r\n        if (randomWeight <= 0) {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function selectRandomFromWeightedList<T>(\r\n    items: Weighted<T>[],\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    const result = selectRandomWeighted(items, item => item.weight, random);\r\n    if (result === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    return result.value;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { Weighted } from \"@core/weighted\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { SelectionAlgorithm } from \"./selection-algorithm\";\r\nimport { RNG, selectRandomFromWeightedList, selectRandomWeighted } from \"./utils\";\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport abstract class SelectionAlgorithmBase implements SelectionAlgorithm {\r\n    protected readonly random: RNG;\r\n\r\n    constructor(protected readonly status: GameStatus, random: RNG) {\r\n        this.random = random;\r\n    }\r\n\r\n    public abstract selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[];\r\n    public abstract selectNextSlide(availableSlides: SlideRegistration[]): string | undefined;\r\n    public abstract selectCard(cardType: string): CardRef;\r\n    public abstract getSips(min: number): number;\r\n    public abstract recomputeWillPower(memory: string[]): { willPower: number; memory: string[] };\r\n\r\n    public getRandom(): number {\r\n        return this.random();\r\n    }\r\n\r\n    public selectRandomWeighted<T>(items: T[], getWeight: (item: T) => number): T | undefined {\r\n        return selectRandomWeighted(items, getWeight, () => this.random());\r\n    }\r\n\r\n    protected selectRandomFromWeightedList<T>(items: Weighted<T>[]): T | undefined {\r\n        return selectRandomFromWeightedList(items, () => this.random());\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport _ from \"lodash\";\r\nimport { higherArrangementPropabilityTags } from \"../../preferences\";\r\nimport { CardDeck } from \"../card-deck\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { Gender, PlayerInfo } from \"../player-info\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { Weighted } from \"../weighted\";\r\nimport { CardsInsight, Insights, PlayerSelection, PlayerSelectionInsights } from \"./insights\";\r\nimport { SelectionAlgorithmBase } from \"./selection-algorithm-base\";\r\n\r\nexport class MelinaAlgorithm extends SelectionAlgorithmBase {\r\n    /** the percentage of cards that were played from one deck once the cards get weighted much lower */\r\n    private readonly deckExhaustionLimit = 0.1;\r\n\r\n    public readonly insights: Insights = new Insights();\r\n\r\n    public getAllCardDeckStatistics(cardType: string | null = null): CardsInsight {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n        const deckWeights: { [deckUrl: string]: number } = {};\r\n        const willPowerWeights: { [willPower: number]: number } = {};\r\n        const willPowerCounter: { [willPower: number]: number } = {};\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const deck of this.status.decks) {\r\n            deckWeights[deck.url] = 0;\r\n        }\r\n\r\n        for (const card of allCards) {\r\n            const { value, weight } = card;\r\n\r\n            const deck = this.status.decks.find(x => x.url === value.deckUrl)!;\r\n\r\n            deckWeights[value.deckUrl] += weight * deck.weight;\r\n\r\n            const willPower = value.card.willPower || 0;\r\n            if (willPowerCounter[willPower] === undefined) {\r\n                willPowerWeights[willPower] = 0;\r\n                willPowerCounter[willPower] = 0;\r\n            }\r\n\r\n            willPowerWeights[willPower] += weight * deck.weight;\r\n            willPowerCounter[willPower] += 1;\r\n        }\r\n        \r\n        const willPowerWeightsArray: Weighted<{\r\n            willPower: number | null;\r\n            count: number;\r\n        }>[] = Object.keys(willPowerWeights).map(propName => {\r\n            const willPower = Number(propName);\r\n            return ({\r\n                value: {\r\n                    willPower: willPower === 0 ? null : willPower,\r\n                    count: willPowerCounter[willPower],\r\n                },\r\n                weight: willPowerWeights[willPower],\r\n            });\r\n        });\r\n\r\n        const decksArray = Object.keys(deckWeights).map(url => {\r\n            const deck = this.status.decks.find(x => x.url === url)!;\r\n            return { value: deck, weight: deckWeights[url] * deck.weight };\r\n        });\r\n\r\n        return { decks: decksArray, willPower: willPowerWeightsArray, totalCards: allCards.length };\r\n    }\r\n\r\n    public selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[] {\r\n        if (playerSettings.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (playerSettings.length > this.status.players.length) {\r\n            throw new Error(\"More players were requested than available.\");\r\n        }\r\n\r\n        const forArrangement = new Array<string>();\r\n        const result: (PlayerInfo | null)[] = playerSettings.map((_, i) =>\r\n            definedPlayers.length > i ? definedPlayers[i] : null,\r\n        );\r\n\r\n        for (const player of definedPlayers.filter(x => x !== null).map(x => x!)) {\r\n            const arrangement = this.status.arrangements.find(\r\n                x => x.p1 === player.id || x.p2 === player.id,\r\n            );\r\n\r\n            if (arrangement !== undefined) {\r\n                if (arrangement.p1 === player.id) {\r\n                    forArrangement.push(arrangement.p2);\r\n                } else {\r\n                    forArrangement.push(arrangement.p1);\r\n                }\r\n            }\r\n        }\r\n\r\n        let resultCounter = 0;\r\n        const insights: PlayerSelectionInsights = {\r\n            predefined: definedPlayers.filter(x => x != null).map(x => x!.id),\r\n            rounds: [],\r\n        };\r\n\r\n        while (result.findIndex(x => x === null) !== -1) {\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                if (result[i] !== null) {\r\n                    continue;\r\n                }\r\n\r\n                const gender = playerSettings[i];\r\n                let sourceList: PlayerInfo[];\r\n\r\n                switch (gender) {\r\n                    case \"None\":\r\n                        sourceList = this.status.players;\r\n                        break;\r\n                    case \"Male\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Male\");\r\n                        break;\r\n                    case \"Female\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Female\");\r\n                        break;\r\n                    default:\r\n                        continue;\r\n                }\r\n\r\n                const source = sourceList.filter(x => !_.includes(result, x));\r\n                const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n                const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n\r\n                const selectionRoundInsights = new Array<PlayerSelection>();\r\n                const player = this.selectRandomWeighted(source, p => {\r\n                    let weight = 1;\r\n\r\n                    if (_.some(forArrangement, x => x === p.id)) {\r\n                        if (\r\n                            _.some(higherArrangementPropabilityTags, x =>\r\n                                _.some(tags, y => x === y.toLowerCase()),\r\n                            )\r\n                        ) {\r\n                            weight += source.length;\r\n                        } else {\r\n                            // everyone has ~ the weight 1\r\n                            weight += source.length * 0.5;\r\n                        }\r\n                    }\r\n\r\n                    if (gender === \"None\" && this.status.preferOppositeGenders) {\r\n                        if (malesCount > femalesCount) {\r\n                            if (p.gender === \"Female\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        } else if (femalesCount > malesCount) {\r\n                            if (p.gender === \"Male\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    selectionRoundInsights.push({ playerId: p.id, weight, chosen: false });\r\n                    return weight;\r\n                })!;\r\n\r\n                selectionRoundInsights.find(x => x.playerId === player.id)!.chosen = true;\r\n                insights.rounds.push(selectionRoundInsights);\r\n\r\n                result[i] = player;\r\n                resultCounter++;\r\n\r\n                const arrangement = this.status.arrangements.find(\r\n                    x => x.p1 === player.id || x.p2 === player.id,\r\n                );\r\n                if (arrangement !== undefined) {\r\n                    if (arrangement.p1 === player.id) {\r\n                        forArrangement.push(arrangement.p2);\r\n                    } else {\r\n                        forArrangement.push(arrangement.p1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultCounter === result.length) {\r\n                break;\r\n            }\r\n\r\n            // here we have to handle Same/Opposite genders\r\n\r\n            const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n            const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n            let dominant: Gender | null = null;\r\n\r\n            if (malesCount > femalesCount) dominant = \"Male\";\r\n            else if (femalesCount > malesCount) dominant = \"Female\";\r\n\r\n            if (dominant === null) {\r\n                // we try to change a 'Same' gender, so Same and opposite stay on different sites\r\n                // because the player gender will become dominant and opposite is always against dominant\r\n\r\n                let changed = false;\r\n                for (let i = 0; i < playerSettings.length; i++) {\r\n                    if (playerSettings[i] === \"Same\") {\r\n                        playerSettings[i] = \"None\";\r\n                        changed = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!changed) {\r\n                    // we have the problem here that we only have opposite genders left but we have no dominant gender.\r\n                    // We change the first opposite to none (so it gets filled) and all other to Same, so they will get\r\n                    // the same gender like the first item that was changed to Same\r\n\r\n                    for (let i = 0; i < playerSettings.length; i++) {\r\n                        if (playerSettings[i] === \"Opposite\") {\r\n                            if (!changed) {\r\n                                playerSettings[i] = \"None\";\r\n                                changed = true;\r\n                            } else {\r\n                                playerSettings[i] = \"Same\";\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                const gender = playerSettings[i];\r\n\r\n                switch (gender) {\r\n                    case \"Opposite\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Male\";\r\n                        } else {\r\n                            playerSettings[i] = \"Female\";\r\n                        }\r\n                        break;\r\n                    case \"Same\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Female\";\r\n                        } else {\r\n                            playerSettings[i] = \"Male\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.insights.playerSelection = insights;\r\n        return result.map(x => x!);\r\n    }\r\n\r\n    public selectCard(cardType: string): CardRef {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const card of allCards) {\r\n            const deck = this.status.decks.find(x => x.url === card.value.deckUrl)!;\r\n            card.weight *= deck.weight;\r\n        }\r\n\r\n        const selected = this.selectRandomWeighted(allCards, x => x.weight);\r\n        if (selected === undefined) {\r\n            throw new Error(\"That should not actually happen\");\r\n        }\r\n\r\n        return selected.value;\r\n    }\r\n\r\n    private boostWillPower(cards: Weighted<CardRef>[]): void {\r\n        const willPower = this.status.willPower;\r\n\r\n        const perfectCards = cards.filter(\r\n            x => x.value.card.willPower === willPower || x.value.card.willPower === willPower - 1,\r\n        );\r\n        const unplayedCards = perfectCards.filter(\r\n            x =>\r\n                this.status.cardsHistory.findIndex(\r\n                    y => y.deckUrl === x.value.deckUrl && y.card.id === x.value.card.id,\r\n                ) === -1,\r\n        );\r\n\r\n        // played cards / all cards\r\n        const percentage = (perfectCards.length - unplayedCards.length) / perfectCards.length;\r\n\r\n        // console.log(\r\n        //     `wp: ${willPower}, perfect: ${perfectCards.length}, unplayed: ${\r\n        //         unplayedCards.length\r\n        //     }, percentage: ${percentage}`,\r\n        // );\r\n\r\n        // we don't boost if we already played 10% (deckExhaustionLimit) of the cards\r\n        if (this.deckExhaustionLimit > percentage && unplayedCards.length > 50) {\r\n            const totalWeight = cards.reduce((x, y) => x + y.weight, 0);\r\n            const unplayedWeight = unplayedCards.reduce((x, y) => x + y.weight, 0);\r\n\r\n            console.log(`total: ${totalWeight}, unplayed: ${unplayedWeight}`);\r\n\r\n            const targetPercentage = 0.7;\r\n            if (totalWeight * targetPercentage > unplayedWeight) {\r\n                const factor =\r\n                    totalWeight * targetPercentage -\r\n                    unplayedWeight +\r\n                    unplayedWeight / unplayedWeight;\r\n\r\n                // const diff = (totalWeight * targetPercentage - unplayedWeight);\r\n                // const add = diff / unplayedCards.length;\r\n                console.log(\"factor: \" + factor);\r\n\r\n                // const add = (totalWeight - unplayedWeight) / perfectCards.length;\r\n                for (const perfectCard of unplayedCards) {\r\n                    perfectCard.weight = perfectCard.weight * factor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public selectNextSlide(availableSlides: SlideRegistration[]): string | undefined {\r\n        const uniqueCardTypes: string[] = [];\r\n        for (const slide of availableSlides) {\r\n            for (const cardType of slide.requestedCards) {\r\n                if (uniqueCardTypes.findIndex(x => x === cardType) === -1) {\r\n                    uniqueCardTypes.push(cardType);\r\n                }\r\n            }\r\n        }\r\n\r\n        const cardTypeRatings: { [type: string]: number } = {};\r\n        for (const cardType of uniqueCardTypes) {\r\n            const weightedDecks = this.weightCards(\r\n                this.status.decks.filter(x => x.weight !== 0),\r\n                cardType,\r\n            );\r\n\r\n            const allCards: Array<Weighted<Card>> = [];\r\n            for (const cardDeck of weightedDecks) {\r\n                allCards.push(...cardDeck.cards);\r\n            }\r\n\r\n            if (allCards.length === 0) {\r\n                cardTypeRatings[cardType] = 0;\r\n            } else {\r\n                cardTypeRatings[cardType] =\r\n                    0.75 + (0.25 * allCards.reduce((x, y) => x + y.weight, 0)) / allCards.length;\r\n            }\r\n        }\r\n\r\n        const weightedSlides: Array<Weighted<SlideRegistration>> = [];\r\n        for (const slide of availableSlides) {\r\n            const slideSettings = this.status.slides.find(x => x.value === slide.slideType);\r\n\r\n            if (slideSettings === undefined || slideSettings.weight === 0) {\r\n                continue;\r\n            }\r\n\r\n            let factor = 1;\r\n            for (const cardType of slide.requestedCards) {\r\n                factor = Math.min(cardTypeRatings[cardType], factor);\r\n            }\r\n\r\n            weightedSlides.push({ weight: factor * slideSettings.weight, value: slide });\r\n        }\r\n\r\n        if (weightedSlides.length > 2 && this.status.slidesHistory.length > 0) {\r\n            const lastSlideType = this.status.slidesHistory[0];\r\n            const lastSlide = weightedSlides.find(x => x.value.slideType === lastSlideType);\r\n            if (lastSlide !== undefined) {\r\n                lastSlide.weight = 0;\r\n            }\r\n        }\r\n        \r\n        this.insights.slideWeights = {\r\n            weights: weightedSlides.map(x => ({ weight: x.weight, value: x.value.slideType })),\r\n        };\r\n\r\n        const selected = this.selectRandomWeighted(weightedSlides, slide => slide.weight);\r\n        if (selected === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return selected.value.slideType;\r\n    }\r\n\r\n    public getSips(min: number): number {\r\n        min = Math.max(min, 1);\r\n\r\n        return Math.max(min,  Math.floor(this.getRandom() * 4) + 1);\r\n    }\r\n\r\n    protected weightCards(\r\n        decks: CardDeck[],\r\n        type: string | null,\r\n    ): Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> {\r\n        const filtered: CardDeck[] = decks.map(x => ({\r\n            cards: x.cards.filter(card => {\r\n                if (type !== null && card.type !== type) {\r\n                    return false;\r\n                }\r\n                return (\r\n                    card.tags.length === 0 ||\r\n                    card.tags.findIndex(x => {\r\n                        const weightedTag = this.status.tags.find(y => y.value === x);\r\n                        return weightedTag !== undefined && weightedTag.weight === 0;\r\n                    }) === -1\r\n                );\r\n            }),\r\n            url: x.url,\r\n            weight: x.weight,\r\n        }));\r\n\r\n        // cards are now of the correct type and playable\r\n\r\n        const totalCards = filtered.reduce((x, y) => x + y.cards.length, 0);\r\n\r\n        // every card should be rated by x when 0 < x <= 1\r\n        const result: Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> = [];\r\n\r\n        const willPower = this.status.willPower;\r\n\r\n        for (const deck of filtered) {\r\n            // cards from this deck that were already played\r\n            const cardsPlayed = this.status.cardsHistory.filter(x => x.deckUrl === deck.url);\r\n\r\n            // compute the deck exhaustion factor\r\n            let exhaustionFactor: number;\r\n\r\n            const percentage = cardsPlayed.length / deck.cards.length;\r\n            if (percentage > this.deckExhaustionLimit) {\r\n                // cubic reduction\r\n                exhaustionFactor = Math.pow(Math.max(1.1 - percentage, 0.1), 2) * 0.5;\r\n            } else {\r\n                exhaustionFactor = 1;\r\n            }\r\n\r\n            const weightedCards: Array<Weighted<Card>> = [];\r\n            for (const card of deck.cards) {\r\n                const willPowerRating = this.rateWillPower(card.willPower, willPower);\r\n                const historyFactor = this.getHistoryFactor(card.id, cardsPlayed, totalCards);\r\n                const tagsFactor = this.getTagsFactor(card.tags, this.status.tags);\r\n                const weight = exhaustionFactor * willPowerRating * historyFactor * tagsFactor;\r\n                if (weight === 0) {\r\n                    continue;\r\n                }\r\n\r\n                weightedCards.push({\r\n                    value: card,\r\n                    weight: weight,\r\n                });\r\n            }\r\n\r\n            result.push({ deck, cards: weightedCards });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public recomputeWillPower(memory: string[]): { willPower: number; memory: string[] } {\r\n        const addedMemory = new Array<string>();\r\n        const now = new Date();\r\n        let result = this.status.willPower;\r\n\r\n        if (!_.includes(memory, \"AFTER_10\") && (now.getHours() > 22 || now.getHours() < 8)) {\r\n            result++;\r\n            addedMemory.push(\"AFTER_10\");\r\n        }\r\n\r\n        const slidesCount = this.status.slidesHistory.length;\r\n        if (slidesCount % 12 === 0 && slidesCount !== 0) {\r\n            const id = slidesCount / 12;\r\n            if (!_.includes(memory, `SLIDES_${id}`)) {\r\n                result++;\r\n                addedMemory.push(`SLIDES_${id}`);\r\n            }\r\n        }\r\n\r\n        if (result > 5) {\r\n            result = 5;\r\n        }\r\n\r\n        return { willPower: result, memory: addedMemory };\r\n    }\r\n\r\n    protected getTagsFactor(tags: string[], tagWeights: Array<Weighted<string>>) {\r\n        const weights = tags\r\n            .map(x => tagWeights.find(y => y.value === x))\r\n            .filter(x => x !== undefined)\r\n            .map(x => x!.weight);\r\n        if (weights.length > 0) {\r\n            return Math.min(...weights);\r\n        }\r\n        return 0.5;\r\n    }\r\n\r\n    /** return a value between 0 and 1 that returns 1 if the card was never played and a smaller number if the card was played recently */\r\n    protected getHistoryFactor(id: string, history: CardRef[], totalCards: number) {\r\n        const historyPosition = history.findIndex(x => x.card.id === id);\r\n        if (historyPosition === -1) {\r\n            return 1;\r\n        }\r\n\r\n        if (historyPosition > totalCards) {\r\n            return 0;\r\n        }\r\n\r\n        return historyPosition / totalCards;\r\n    }\r\n\r\n    /** return a value between 0 and 1 for the given will power */\r\n    protected rateWillPower(cardWillPower: number | undefined, willPower: number) {\r\n        if (cardWillPower === undefined) {\r\n            return 0.75;\r\n        }\r\n\r\n        // --- --- --- ||| --- --- --- ---\r\n        // 0.5 .75 .75  1  .15  0   0   0\r\n\r\n        if (cardWillPower === willPower) {\r\n            return 1;\r\n        }\r\n\r\n        if (cardWillPower > willPower) {\r\n            const result = 0.15 - (cardWillPower - willPower) * 0.1;\r\n            return result < 0 ? 0 : result;\r\n        }\r\n\r\n        return 0.5;\r\n    }\r\n\r\n    protected filterDecks(decks: CardDeck[]): CardDeck[] {\r\n        const filteredDecks: CardDeck[] = [];\r\n\r\n        for (const deck of decks) {\r\n            // remove disabled decks\r\n            if (deck.weight <= 0) {\r\n                continue;\r\n            }\r\n\r\n            const cards: Card[] = [];\r\n            for (const card of deck.cards) {\r\n                if (!this.verifyPlayerSpecification(this.status.players, card.players)) {\r\n                    continue;\r\n                }\r\n\r\n                let weightedZero = false;\r\n                for (const tag of card.tags) {\r\n                    if (this.checkIfWeightedZero(tag, this.status.tags)) {\r\n                        weightedZero = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (weightedZero) {\r\n                    continue;\r\n                }\r\n\r\n                if (!card.condition(this.status)) {\r\n                    continue;\r\n                }\r\n\r\n                cards.push(card);\r\n            }\r\n\r\n            if (cards.length > 0) {\r\n                filteredDecks.push({ cards, weight: deck.weight, url: deck.url });\r\n            }\r\n        }\r\n\r\n        return filteredDecks;\r\n    }\r\n\r\n    protected checkIfWeightedZero<T>(value: T, weights: Array<Weighted<T>>): boolean {\r\n        return weights.findIndex(x => x.value === value && x.weight <= 0) > -1;\r\n    }\r\n\r\n    protected verifyPlayerSpecification(\r\n        players: PlayerInfo[],\r\n        specification: PlayerSetting[],\r\n    ): boolean {\r\n        if (specification.length > players.length) {\r\n            return false;\r\n        }\r\n\r\n        const specificationMales = specification.filter(x => x.gender === \"Male\").length;\r\n        const actualMales = players.filter(x => x.gender === \"Male\").length;\r\n\r\n        if (specificationMales > actualMales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationFemales = specification.filter(x => x.gender === \"Female\").length;\r\n        const actualFemales = players.filter(x => x.gender === \"Female\").length;\r\n        if (specificationFemales > actualFemales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationOpposite = specification.filter(x => x.gender === \"Opposite\").length;\r\n        if (specificationOpposite > Math.min(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        const specificationSame = specification.filter(x => x.gender === \"Same\").length;\r\n        if (specificationSame + 1 > Math.max(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Card } from \"./cards/card\";\r\nimport { CardParserFactory } from \"./parsing/card-parser-factory\";\r\n\r\nexport class CardsLoader {\r\n    private readonly domParser = new DOMParser();\r\n\r\n    constructor(\r\n        private requestFile: (url: string) => Promise<string>,\r\n        private parserFactory: CardParserFactory,\r\n    ) {}\r\n\r\n    public async loadFromUrl(url: string): Promise<Card[]> {\r\n        const result: Card[] = [];\r\n\r\n        await this.loadFile(url, result, undefined);\r\n        return result;\r\n    }\r\n\r\n    private async loadFile(url: string, result: Card[], requestedCards?: string[]): Promise<void> {\r\n        const xml = await this.requestFile(url);\r\n        \r\n        // the DOMParser doesn't like XML docs without a Root element\r\n        const xmlDoc = this.domParser.parseFromString(\"<Root>\" + xml + \"</Root>\", \"text/xml\");\r\n\r\n        const cardElements = xmlDoc.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < cardElements.length; i++) {\r\n            const xmlElement = cardElements[i];\r\n\r\n            if (xmlElement.parentElement !== xmlDoc.documentElement) {\r\n                continue;\r\n            }\r\n\r\n            if (xmlElement.nodeName === \"DeckReference\") {\r\n                await this.parseDeckReference(xmlElement, result, requestedCards);\r\n                continue;\r\n            }\r\n\r\n            const parser = this.parserFactory.createParser(xmlElement.nodeName);\r\n            if (parser === undefined) {\r\n                console.error(\r\n                    `The card ${xmlElement.nodeName} could not be parsed. No parser found.`,\r\n                );\r\n                continue;\r\n            }\r\n\r\n            const card = parser.deserialize(xmlElement);\r\n            if (requestedCards !== undefined && requestedCards.indexOf(card.id) === -1) {\r\n                continue;\r\n            }\r\n\r\n            result.push(card);\r\n        }\r\n    }\r\n\r\n    private parseDeckReference(\r\n        xmlElement: Element,\r\n        result: Card[],\r\n        requestedCards?: string[],\r\n    ): Promise<void> {\r\n        const url = xmlElement.getAttribute(\"url\");\r\n        if (url === null) {\r\n            throw new Error(\"The url on a deck reference must not be null.\");\r\n        }\r\n\r\n        const referenceRequests: string[] = [];\r\n\r\n        const cardRefs = xmlElement.getElementsByTagName(\"CardRef\");\r\n        for (let i = 0; i < cardRefs.length; i++) {\r\n            const cardRef = cardRefs[i];\r\n\r\n            const idAttr = cardRef.getAttribute(\"id\");\r\n            if (idAttr === null) {\r\n                continue;\r\n            }\r\n\r\n            referenceRequests.push(idAttr);\r\n        }\r\n\r\n        let deckWhitelist: string[] | undefined;\r\n        if (referenceRequests.length === 0) {\r\n            deckWhitelist = requestedCards;\r\n        } else {\r\n            if (requestedCards !== undefined) {\r\n                deckWhitelist = [];\r\n\r\n                // only request cards that are in the superior list aswell as in the reference list\r\n                for (const cardId of requestedCards) {\r\n                    if (referenceRequests.indexOf(cardId) > -1) {\r\n                        deckWhitelist.push(cardId);\r\n                    }\r\n                }\r\n            } else {\r\n                deckWhitelist = referenceRequests;\r\n            }\r\n        }\r\n\r\n        return this.loadFile(url, result, deckWhitelist);\r\n    }\r\n}\r\n","export class PlayerSetting {\r\n    constructor(public playerIndex: number, public gender: GenderRequirement = \"None\") {}\r\n}\r\n\r\nexport type GenderRequirement = 'None' | 'Male' | 'Female' | 'Opposite' | 'Same';\r\n","import { GenderRequirement } from \"../cards/player-setting\";\r\n\r\nexport class ParserHelper {\r\n    /** parse a player tag, e. g. \"Player\" or \"Player2\" or \"Player5000\" and return the index (1 if none is specified) or undefined */\r\n    public static parsePlayerTag(s: string): number | undefined {\r\n        const tagName = \"Player\";\r\n\r\n        if (!s.startsWith(tagName)) {\r\n            return undefined;\r\n        }\r\n\r\n        if (s.length > tagName.length) {\r\n            const index = Number(s.substring(tagName.length));\r\n            return isNaN(index) ? undefined : index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    /** parse a gender requirement string, e. g. \"m\", \"male\", \"Male\", etc. */\r\n    public static parseGenderRequirement(s: string): GenderRequirement |undefined {\r\n        s = s.toLowerCase();\r\n\r\n        if (s in this.genderRequirementMap) {\r\n            return this.genderRequirementMap[s];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** parse a timespan in the format hh:mm:ss or mm:ss */\r\n    public static parseTimeSpanStringToSeconds(s: string): number | undefined {\r\n        const a = s.split(\":\");\r\n\r\n        if (a.length > 3) {\r\n            return undefined;\r\n        }\r\n\r\n        let result = 0;\r\n\r\n        for (let i = 0; i < a.length; i++) {\r\n            const p = Number(a[i]);\r\n            if (isNaN(p)) {\r\n                return undefined;\r\n            }\r\n\r\n            result += p * Math.pow(60, (a.length - i - 1));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static genderRequirementMap: { [id: string]: GenderRequirement } = {\r\n        m: \"Male\",\r\n        male: \"Male\",\r\n        f: \"Female\",\r\n        female: \"Female\",\r\n        o: \"Opposite\",\r\n        opposite: \"Opposite\",\r\n        s: \"Same\",\r\n        same: \"Same\",\r\n    };\r\n}\r\n","import { BaseCard } from \"../cards/base-card\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { CardParser } from \"./card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\n\r\nexport abstract class BaseCardParser<TCard extends BaseCard> implements CardParser {\r\n    public deserialize(xml: Element): Card {\r\n        const card = this.createCard();\r\n\r\n        const idAttr = xml.getAttribute(\"id\");\r\n        if (idAttr === null) {\r\n            throw new Error(\"The id of a card must not be null\");\r\n        }\r\n        card.id = idAttr;\r\n\r\n        card.willPower = Number(xml.getAttribute(\"willPower\"));\r\n        if (card.willPower < 1 || card.willPower > 10) {\r\n            card.willPower = undefined;\r\n        }\r\n\r\n        const tags = xml.getAttribute(\"tags\");\r\n\r\n        card.tags = tags\r\n            ? [...this.getDefaultAttributes(), ...tags.split(\",\")]\r\n            : this.getDefaultAttributes();\r\n\r\n        this.parseAttributes(xml, card);\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            if (element.tagName === `${xml.tagName}.players`) {\r\n                card.players = this.parsePlayers(element);\r\n                continue;\r\n            }\r\n\r\n            this.parseElement(element, card);\r\n        }\r\n\r\n        if (card.players === undefined) {\r\n            card.players = [];\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    protected getDefaultAttributes(): string[] {\r\n        return [];\r\n    }\r\n\r\n    protected abstract parseAttributes(rootXml: Element, card: TCard): void;\r\n    protected abstract parseElement(element: Element, card: TCard): boolean;\r\n\r\n    protected abstract createCard(): TCard;\r\n\r\n    private parsePlayers(xml: Element): PlayerSetting[] {\r\n        const players: PlayerSetting[] = [];\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            const player = this.parsePlayer(element);\r\n            if (player !== undefined) {\r\n                players.push(player);\r\n            }\r\n        }\r\n\r\n        return players;\r\n    }\r\n\r\n    private parsePlayer(xml: Element): PlayerSetting | undefined {\r\n        const index = ParserHelper.parsePlayerTag(xml.tagName);\r\n        if (index === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        let requiredGender: GenderRequirement = \"None\";\r\n\r\n        const genderAttr = xml.getAttribute(\"gender\");\r\n        if (genderAttr) {\r\n            const genderReq = ParserHelper.parseGenderRequirement(genderAttr);\r\n\r\n            if (genderReq !== undefined) {\r\n                requiredGender = genderReq;\r\n            }\r\n        }\r\n\r\n        return new PlayerSetting(index, requiredGender);\r\n    }\r\n}\r\n","import { TextTranslation } from \"./text-translation\";\r\n\r\nexport class TextElement {\r\n    public weight: number = 1;\r\n    public translations!: TextTranslation[];\r\n}","export class TextTranslation {\r\n    constructor(public lang: string, public content: string) {}\r\n}\r\n","import { TextElement } from \"../cards/text-element\";\r\nimport { TextTranslation } from \"../cards/text-translation\";\r\n\r\n/** parses the text content of an element */\r\nexport class TextContentParser {\r\n    public result: TextElement[];\r\n\r\n    private isConditionalElement: boolean | undefined = undefined;\r\n\r\n    constructor() {\r\n        this.result = [];\r\n    }\r\n\r\n    public addElement(xml: Element): boolean {\r\n        switch (xml.tagName) {\r\n            case \"Case\":\r\n                if (this.isConditionalElement === false) {\r\n                    return false;\r\n                }\r\n                this.isConditionalElement = true;\r\n\r\n                this.result.push(this.parseTextElement(xml));\r\n                return true;\r\n            case \"Text\":\r\n                if (this.isConditionalElement === true) {\r\n                    return false;\r\n                } else if (this.isConditionalElement === undefined) {\r\n                    this.result.push({ translations: [], weight: 1 });\r\n                }\r\n\r\n                this.isConditionalElement = false;\r\n                this.result[0].translations.push(this.parseTranslation(xml));\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private parseTextElement(element: Element): TextElement {\r\n        const translations: TextTranslation[] = [];\r\n        const textElement = new TextElement();\r\n\r\n        const weight = element.getAttribute(\"weight\");\r\n        if (weight !== null && !isNaN(Number(weight))) {\r\n            textElement.weight = Number(weight);\r\n        } else {\r\n            textElement.weight = 1;\r\n        }\r\n\r\n        const texts = element.getElementsByTagName(\"Text\");\r\n        for (let i = 0; i < texts.length; i++) {\r\n            const textXmlNode = texts[i];\r\n            translations.push(this.parseTranslation(textXmlNode));\r\n        }\r\n\r\n        textElement.translations = translations;\r\n        return textElement;\r\n    }\r\n\r\n    private parseTranslation(element: Element) {\r\n        const lang = element.getAttribute(\"lang\");\r\n        if (lang === null) {\r\n            throw new Error(\"lang attribute not found on element\");\r\n        }\r\n\r\n        if (element.textContent === null) {\r\n            throw new Error(\"The text content of the element is empty.\");\r\n        }\r\n\r\n        return new TextTranslation(lang, element.textContent);\r\n    }\r\n}\r\n","import { TextCard } from \"../cards/text-card\";\r\nimport { BaseCardParser } from \"./base-card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\nimport { TextContentParser } from \"./text-content-parser\";\r\n\r\nexport abstract class TextCardParser<TCard extends TextCard> extends BaseCardParser<TCard> {\r\n    private textContentParser = new TextContentParser();\r\n\r\n    protected parseAttributes(rootXml: Element, card: TCard): void {\r\n        const followUpAttr = rootXml.getAttribute(\"followUpProbability\");\r\n        if (followUpAttr !== null) {\r\n            const followUpProbability = Number(followUpAttr);\r\n            if (isNaN(followUpProbability)) {\r\n                throw new Error(\r\n                    `The follow up propability ${followUpAttr} could not be parsed as a number (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpPropability = followUpProbability;\r\n        }\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay !== null) {\r\n            const seconds = ParserHelper.parseTimeSpanStringToSeconds(followUpDelay);\r\n            if (seconds === undefined) {\r\n                throw new Error(\r\n                    `Could not parse followUpDelay ${followUpDelay} as a timespan (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpDelay = seconds;\r\n        } else {\r\n            card.followUpDelay = 0;\r\n        }\r\n    }\r\n\r\n    protected parseElement(element: Element, card: TCard): boolean {\r\n        switch (element.tagName) {\r\n            case \"Text\":\r\n            case \"Case\":\r\n                card.content = this.textContentParser.result;\r\n                return this.textContentParser.addElement(element);\r\n        }\r\n\r\n        if (element.tagName === `${card.type}.followUp`) {\r\n            const parser = new TextContentParser();\r\n\r\n            const subElements = element.getElementsByTagName(\"*\");\r\n            for (let i = 0; i < subElements.length; i++) {\r\n                const subElement = subElements[i];\r\n                if (subElement.parentElement !== element) {\r\n                    continue;\r\n                }\r\n\r\n                parser.addElement(subElement);\r\n            }\r\n\r\n            card.followUp = parser.result;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { BaseCard } from \"./base-card\";\r\nimport { TextElement } from \"./text-element\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport _ from \"lodash\";\r\n\r\nexport abstract class TextCard extends BaseCard {\r\n    /** the propability (0-1) that this card follows up */\r\n    public followUpPropability: number = 1;\r\n\r\n    /** the delay of the follow up in seconds */\r\n    public followUpDelay!: number;\r\n\r\n    public content!: TextElement[];\r\n    public followUp!: TextElement[];\r\n\r\n    public condition: (status: GameStatus) => boolean = status => {\r\n        return _.some(this.content, x => _.some(x.translations, y => y.lang === status.language));\r\n    };\r\n}\r\n","import { GameStatus } from \"../game-status\";\r\nimport { Card } from \"./card\";\r\nimport { PlayerSetting } from \"./player-setting\";\r\n\r\n/** A very basic implementation of Card  */\r\nexport abstract class BaseCard implements Card {\r\n  public id!: string;\r\n  public willPower!: number | undefined;\r\n  public players!: PlayerSetting[];\r\n  public tags!: string[];\r\n  public condition!: (status: GameStatus) => boolean;\r\n\r\n  public readonly abstract type: string;\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class FactCard extends TextCard {\r\n    public readonly type: string = \"FactCard\";\r\n    public isTrueFact: boolean = false;\r\n}\r\n","import { TextCardParser } from \"../../core/parsing/text-card-parser\";\r\nimport { FactCard } from \"../cards/fact-card\";\r\n\r\nexport class FactCardParser extends TextCardParser<FactCard> {\r\n    protected createCard(): FactCard {\r\n        return new FactCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: FactCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const attr = rootXml.getAttribute(\"is\");\r\n        card.isTrueFact = attr === null ? true : this.toBool(attr);\r\n    }\r\n\r\n    protected toBool(value?: string): boolean {\r\n        if (value === \"true\") {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined) {\r\n            return false;\r\n        }\r\n\r\n        return !!+value;\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class VirusCard extends TextCard {\r\n    public readonly type: string = \"VirusCard\";\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { VirusCard } from '../cards/virus-card';\r\n\r\nexport class VirusCardParser extends TextCardParser<VirusCard> {\r\n    protected createCard(): VirusCard {\r\n        return new VirusCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: VirusCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay === null) {\r\n            card.followUpDelay = 60 * 5; // 5 minutes default\r\n        }\r\n    }\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DefaultTextCardParser<T extends TextCard> extends TextCardParser<T> {\r\n    constructor(private factory: new () => T) {\r\n        super();\r\n    }\r\n\r\n    protected createCard(): T {\r\n        return new this.factory();\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DownCard extends TextCard {\r\n    public readonly type: string = \"DownCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NeverEverCard extends TextCard {\r\n    public readonly type: string = \"NeverEverCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class JokeCard extends TextCard {\r\n    public readonly type: string = \"JokeCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class QuestionCard extends TextCard {\r\n    public readonly type: string = \"QuestionCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class TaskCard extends TextCard {\r\n    public readonly type: string = \"TaskCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class WouldYouRatherCard extends TextCard {\r\n    public readonly type: string = \"WyrCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DrinkCard extends TextCard {\r\n    public readonly type: string = \"DrinkCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class GroupGameCard extends TextCard {\r\n    public readonly type: string = \"GroupGameCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NoIdeaLosesCard extends TextCard {\r\n    public readonly type: string = \"NoIdeaLosesCard\";\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { FactCardParser } from \"./parsing/fact-card-parser\";\r\nimport { VirusCardParser } from \"./parsing/virus-card-parser\";\r\nimport { DefaultTextCardParser } from \"./parsing/default-text-card-parser\";\r\nimport { DownCard } from \"./cards/down-card\";\r\nimport { NeverEverCard } from \"./cards/never-ever-card\";\r\nimport { JokeCard } from \"./cards/joke-card\";\r\nimport { QuestionCard } from \"./cards/question-card\";\r\nimport { TaskCard } from \"./cards/task-card\";\r\nimport { WouldYouRatherCard } from \"./cards/would-you-rather-card\";\r\nimport { DrinkCard } from \"./cards/drink-card\";\r\nimport { GroupGameCard } from \"./cards/group-game-card\";\r\nimport { NoIdeaLosesCard } from \"./cards/no-idea-loses-card\";\r\n\r\ntype ParserRegistration = { [type: string]: () => CardParser };\r\n\r\nexport const parsers: ParserRegistration = {\r\n    FactCard: () => new FactCardParser(),\r\n    VirusCard: () => new VirusCardParser(),\r\n    DownCard: () => new DefaultTextCardParser<DownCard>(DownCard),\r\n    NeverEverCard: () => new DefaultTextCardParser<NeverEverCard>(NeverEverCard),\r\n    JokeCard: () => new DefaultTextCardParser<JokeCard>(JokeCard),\r\n    QuestionCard: () => new DefaultTextCardParser<QuestionCard>(QuestionCard),\r\n    TaskCard: () => new DefaultTextCardParser<TaskCard>(TaskCard),\r\n    WyrCard: () => new DefaultTextCardParser<WouldYouRatherCard>(WouldYouRatherCard),\r\n    DrinkCard: () => new DefaultTextCardParser<DrinkCard>(DrinkCard),\r\n    GroupGameCard: () => new DefaultTextCardParser<GroupGameCard>(GroupGameCard),\r\n    NoIdeaLosesCard: () => new DefaultTextCardParser<NoIdeaLosesCard>(NoIdeaLosesCard),\r\n};\r\n","import axios from \"axios\";\r\nimport { CardsLoader } from \"../../core/cards-loader\";\r\nimport { Card } from \"../../core/cards/card\";\r\nimport { DefaultCardParserFactory } from \"../../impl/default-card-parser-factory\";\r\n\r\nconst parserFactory = new DefaultCardParserFactory();\r\nconst loader = new CardsLoader(requestFile, parserFactory);\r\n\r\nasync function requestFile(url: string) : Promise<string> {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n}\r\n\r\nexport async function loadCards(url: string): Promise<Card[]> {\r\n    return loader.loadFromUrl(url);\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { CardParserFactory } from \"../core/parsing/card-parser-factory\";\r\nimport { parsers } from \"./registrations\";\r\n\r\nexport class DefaultCardParserFactory implements CardParserFactory {\r\n    private parsers: { [type: string]: () => CardParser };\r\n\r\n    constructor() {\r\n        this.parsers = parsers;\r\n    }\r\n\r\n    public createParser(cardType: string): CardParser | undefined {\r\n        if (cardType in this.parsers) {\r\n            return this.parsers[cardType]();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","import * as cardsLoader from \"./api/cards-loader\";\r\n\r\nexport default {\r\n    api: {\r\n        cardsLoader,\r\n    },\r\n};\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { from, of } from \"rxjs\";\r\nimport { catchError, filter, map, mergeMap } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport { loadSourceAsync } from \"./actions\";\r\n\r\nexport const loadSourceEpic: Epic<RootAction, RootAction, RootState, Services> = (\r\n    action$,\r\n    _state$,\r\n    { api },\r\n) =>\r\n    action$.pipe(\r\n        filter(isActionOf(loadSourceAsync.request)),\r\n        mergeMap(action =>\r\n            from(api.cardsLoader.loadCards(action.payload)).pipe(\r\n                map(cards => loadSourceAsync.success({ url: action.payload, cards })),\r\n                catchError((message: string) =>\r\n                    of(loadSourceAsync.failure({ url: action.payload, message })),\r\n                ),\r\n            ),\r\n        ),\r\n    );\r\n","export abstract class TextFragment {}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RawTextFragment extends TextFragment {\r\n    constructor(public text: string) {\r\n        super();\r\n    }\r\n}","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport abstract class VariableFragment extends TextFragment {\r\n}","import { VariableFragment } from \"./variable-fragment\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\n\r\nexport class PlayerReferenceFragment extends VariableFragment {\r\n    constructor(public playerIndex: number = 1, public gender: GenderRequirement = \"None\") {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SipsFragment extends VariableFragment {\r\n    constructor(public minSips: number = 1, public sipsIndex: number = 1) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomNumberFragment extends TextFragment {\r\n    constructor(public numbers: RandomNumber[]) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport interface RandomNumber {\r\n    getCount(): number;\r\n}\r\n\r\nexport class NumberRange implements RandomNumber {\r\n    constructor(public min: number, public max: number) {}\r\n\r\n    getCount(): number {\r\n        return this.max - this.min;\r\n    }\r\n}\r\n\r\nexport class StaticNumber implements RandomNumber {\r\n    constructor(public i: number) {}\r\n\r\n    getCount(): number {\r\n        return 1;\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomTextFragment extends TextFragment {\r\n    constructor(public texts: string[]) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class GenderBasedSelectionFragment extends TextFragment {\r\n    constructor(\r\n        public femaleText: string,\r\n        public maleText?: string,\r\n        public referencedPlayerIndex?: number,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SocialMediaPlatformFragment extends VariableFragment {\r\n}","import { ParserHelper } from \"./../parser-helper\";\r\nimport { CardTextDecoder } from \"./card-text-decoder\";\r\nimport { TextFragment } from \"../../text-fragment\";\r\nimport * as Consts from \"./text-decoder-consts\";\r\nimport { RawTextFragment } from \"../../fragments/raw-text-fragment\";\r\nimport { PlayerReferenceFragment } from \"../../fragments/player-reference-fragment\";\r\nimport { SipsFragment } from \"../../fragments/sips-fragment\";\r\nimport {\r\n    RandomNumberFragment,\r\n    RandomNumber,\r\n    NumberRange,\r\n    StaticNumber,\r\n} from \"../../fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"../../fragments/random-text-fragment\";\r\nimport { GenderBasedSelectionFragment } from \"../../fragments/gender-based-selection-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\n\r\nexport class DefaultTextDecoder implements CardTextDecoder {\r\n    decode(s: string): TextFragment[] {\r\n        const result: TextFragment[] = [];\r\n\r\n        let index = 0;\r\n        let lastTokenIndex = 0;\r\n\r\n        do {\r\n            if (s[index] == Consts.VarStartChar) {\r\n                if (lastTokenIndex !== index) {\r\n                    result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                }\r\n\r\n                const token = this.readToken(s, index, Consts.VarEndChar);\r\n                index = token.index;\r\n\r\n                result.push(this.parseVariableFragment(token.value));\r\n            } else if (s[index] === Consts.SelectionStartChar) {\r\n                if (index > 1 && s[index - 1] === Consts.SelectionModifierStartChar) {\r\n                    // handle !{...}\r\n                    index--;\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    index++;\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseRandomSelectionFragment(content.value));\r\n                } else {\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseGenderSelectionFragment(content.value));\r\n                }\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            lastTokenIndex = index;\r\n        } while (++index < s.length);\r\n\r\n        if (lastTokenIndex !== s.length) {\r\n            result.push(new RawTextFragment(s.substring(lastTokenIndex)));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseVariableFragment(content: string): TextFragment {\r\n        content = content.toLowerCase();\r\n\r\n        if (content.startsWith(Consts.PlayerVariable)) {\r\n            // Samples:\r\n            // [Player1:f]\r\n            // [Player1]\r\n            // [Player]\r\n\r\n            const playerRef = new PlayerReferenceFragment();\r\n\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let playerTag: string;\r\n            if (parameterBegin === -1) {\r\n                playerTag = content;\r\n            } else {\r\n                playerTag = content.substring(0, parameterBegin);\r\n\r\n                const genderString = content.substring(parameterBegin + 1);\r\n                const gender = ParserHelper.parseGenderRequirement(genderString);\r\n                if (gender === undefined) {\r\n                    throw new Error(\r\n                        `Gender parameter of player tag could not be parsed: ${content}`,\r\n                    );\r\n                }\r\n\r\n                playerRef.gender = gender;\r\n            }\r\n\r\n            playerRef.playerIndex = this.parsePlayerIndex(playerTag);\r\n            return playerRef;\r\n        }\r\n\r\n        if (content.startsWith(Consts.SipsVariable)) {\r\n            const sipsFragment = new SipsFragment();\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let sipsTag: string;\r\n            if (parameterBegin === -1) {\r\n                sipsTag = content;\r\n            } else {\r\n                sipsTag = content.substring(0, parameterBegin);\r\n                sipsFragment.minSips = Number(content.substring(parameterBegin + 1));\r\n                if (isNaN(sipsFragment.minSips)) {\r\n                    throw new Error(`The sips amount of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            if (sipsTag.length > Consts.SipsVariable.length) {\r\n                sipsFragment.sipsIndex = Number(sipsTag.substring(Consts.SipsVariable.length));\r\n                if (isNaN(sipsFragment.sipsIndex)) {\r\n                    throw new Error(`The sips index of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            return sipsFragment;\r\n        }\r\n\r\n        if (content === Consts.SocialMediaVariable) {\r\n            return new SocialMediaPlatformFragment();\r\n        }\r\n\r\n        return new RawTextFragment(content);\r\n    }\r\n\r\n    public parseRandomSelectionFragment(content: string): TextFragment {\r\n        // Samples:\r\n        // 12,54,56-90\r\n        // 12,hello,not,19\r\n\r\n        const isNumericSelection = /^[0-9,-]+$/.test(content);\r\n        if (isNumericSelection) {\r\n            const numbers = this.parseNumberArray(content);\r\n            return new RandomNumberFragment(numbers);\r\n        }\r\n\r\n        const texts = this.splitQuoted(content, \",\");\r\n        return new RandomTextFragment(texts);\r\n    }\r\n\r\n    public parseNumberArray(content: string): RandomNumber[] {\r\n        const result: RandomNumber[] = [];\r\n        let currentNumber: RandomNumber | null = null;\r\n\r\n        let numberStart = 0;\r\n        let isRangeToken = false;\r\n\r\n        let i = 0;\r\n        while (true) {\r\n            for (; i < content.length; i++) {\r\n                const c = content[i];\r\n\r\n                if (!isNaN(Number(c))) {\r\n                    continue;\r\n                }\r\n\r\n                if (c === \"-\") {\r\n                    if (isRangeToken) {\r\n                        throw new Error(\"Can only have one range identifier per field\");\r\n                    }\r\n                    isRangeToken = true;\r\n\r\n                    currentNumber = new NumberRange(Number(content.substring(numberStart, i)), 0);\r\n                    numberStart = i + 1;\r\n                    continue;\r\n                }\r\n\r\n                if (c === \",\") {\r\n                    break;\r\n                }\r\n\r\n                throw new Error(\"Invalid character found: \" + c);\r\n            }\r\n\r\n            if (i === numberStart) {\r\n                throw new Error(`A number was expected at position ${i} in string \"${content}\"`);\r\n            }\r\n\r\n            const num = Number(content.substring(numberStart, i));\r\n            if (isRangeToken) {\r\n                (currentNumber as NumberRange).max = num;\r\n            } else {\r\n                currentNumber = new StaticNumber(num);\r\n            }\r\n\r\n            result.push(currentNumber!);\r\n\r\n            if (i === content.length) {\r\n                break;\r\n            }\r\n\r\n            currentNumber = null;\r\n            isRangeToken = false;\r\n            numberStart = ++i;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public splitQuoted(value: string, delimiter: string): string[] {\r\n        let tokenStart = 0;\r\n        let result: string[] = [];\r\n\r\n        while (value.length > tokenStart - 1) {\r\n            let withinQuotes = false;\r\n\r\n            if (value[tokenStart] === '\"') {\r\n                withinQuotes = true;\r\n                tokenStart++;\r\n            }\r\n\r\n            let i = tokenStart;\r\n            do {\r\n                if (value[i] === delimiter) {\r\n                    if (withinQuotes) continue;\r\n\r\n                    result.push(value.substring(tokenStart, i));\r\n                    tokenStart = i + 1;\r\n                    break;\r\n                }\r\n\r\n                if (value[i] == '\"') {\r\n                    if (!withinQuotes) {\r\n                        continue; //allow quotes in the middle\r\n                    }\r\n\r\n                    if (i == value.length - 1) {\r\n                        //if its the last char\r\n                        result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                        return result;\r\n                    }\r\n\r\n                    const nextChar = value[i + 1];\r\n                    if (nextChar == '\"') {\r\n                        i++;\r\n                        continue; //escaped quotes\r\n                    }\r\n\r\n                    if (nextChar != delimiter)\r\n                        throw new Error(\"The delimiter must come after the closing quotes.\");\r\n\r\n                    result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                    tokenStart = i + 2;\r\n                    break;\r\n                }\r\n\r\n                if (i == value.length - 1) {\r\n                    if (withinQuotes) {\r\n                        throw new Error(\"The text must end with a quote\");\r\n                    }\r\n\r\n                    result.push(value.substring(tokenStart, i + 1));\r\n                    return result;\r\n                }\r\n            } while (++i < value.length);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseGenderSelectionFragment(content: string): GenderBasedSelectionFragment {\r\n        const fragment = new GenderBasedSelectionFragment(\"\");\r\n\r\n        const splitterIndex = content.indexOf(Consts.SelectionSplitterChar);\r\n        const reference = content.indexOf(Consts.SelectionReferenceChar);\r\n\r\n        if (reference !== -1) {\r\n            fragment.referencedPlayerIndex = this.parsePlayerIndex(\r\n                content.substring(reference + 1),\r\n            );\r\n            content = content.substring(0, reference);\r\n        }\r\n\r\n        if (splitterIndex === -1) {\r\n            fragment.femaleText = content;\r\n        } else {\r\n            fragment.maleText = content.substring(0, splitterIndex);\r\n            fragment.femaleText = content.substring(splitterIndex + 1, content.length);\r\n        }\r\n\r\n        return fragment;\r\n    }\r\n\r\n    public parsePlayerIndex(value: string): number {\r\n        if (value.length > Consts.PlayerVariable.length) {\r\n            const index = Number(value.substring(Consts.PlayerVariable.length));\r\n            if (isNaN(index)) {\r\n                throw new Error(`The player index of \"${value}\" could not be parsed.`);\r\n            }\r\n\r\n            return index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    public readToken(\r\n        value: string,\r\n        index: number,\r\n        endChar: string,\r\n    ): { value: string; index: number } {\r\n        const length = value.length;\r\n        const tokenStart = index;\r\n\r\n        while (++index < length) {\r\n            const char = value[index];\r\n\r\n            if (char === Consts.EscapeChar) {\r\n                index++;\r\n                continue;\r\n            }\r\n\r\n            if (char === endChar) {\r\n                index++;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { index, value: value.substring(tokenStart + 1, index - 1) };\r\n    }\r\n}\r\n","export const VarStartChar: string = \"[\";\r\nexport const VarEndChar: string = \"]\";\r\nexport const EscapeChar: string = \"\\\\\";\r\nexport const SelectionStartChar: string = \"{\";\r\nexport const SelectionModifierStartChar: string = \"!\";\r\nexport const SelectionEndChar: string = \"}\";\r\n\r\nexport const PlayerVariable: string = \"player\";\r\nexport const SipsVariable: string = \"sips\";\r\nexport const VariableParametersStart: string = \":\";\r\nexport const SocialMediaVariable: string = \"socialmediaplatform\";\r\n\r\nexport const SelectionSplitterChar: string = \"/\";\r\nexport const SelectionReferenceChar: string = \"|\";\r\nexport const ArrayDelimiter: string = \",\";\r\n","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GenderBasedSelectionFragment } from \"@core/fragments/gender-based-selection-fragment\";\r\nimport { PlayerReferenceFragment } from \"@core/fragments/player-reference-fragment\";\r\nimport { NumberRange, RandomNumberFragment, StaticNumber } from \"@core/fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"@core/fragments/random-text-fragment\";\r\nimport { RawTextFragment } from \"@core/fragments/raw-text-fragment\";\r\nimport { SipsFragment } from \"@core/fragments/sips-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { RandomUtils } from \"@core/selection/selection-algorithm\";\r\nimport { TextFragment } from \"@core/text-fragment\";\r\nimport _ from \"lodash\";\r\n\r\nexport class TextFormatter {\r\n    public static getRequiredPlayers(fragments: TextFragment[], playerSettings: PlayerSetting[]) {\r\n        const requiredPlayers = new Array<PlayerSetting>();\r\n\r\n        const players = _.groupBy(\r\n            fragments\r\n                .filter(x => x instanceof PlayerReferenceFragment)\r\n                .map(x => x as PlayerReferenceFragment),\r\n            \"playerIndex\",\r\n        );\r\n\r\n        for (const key in players) {\r\n            if (players.hasOwnProperty(key)) {\r\n                const player = players[key][0];\r\n\r\n                let requiredGender = player.gender;\r\n\r\n                if (requiredGender === \"None\") {\r\n                    const rootSetting = playerSettings.find(\r\n                        x => x.playerIndex === player.playerIndex,\r\n                    );\r\n                    if (rootSetting !== undefined) {\r\n                        requiredGender = rootSetting.gender;\r\n                    }\r\n                }\r\n\r\n                requiredPlayers.push({ playerIndex: player.playerIndex, gender: requiredGender });\r\n            }\r\n        }\r\n\r\n        return requiredPlayers;\r\n    }\r\n\r\n    public static getRequiredSips(fragments: TextFragment[]): SipsFragment[] {\r\n        const sips = _.groupBy(\r\n            fragments.filter(x => x instanceof SipsFragment).map(x => x as SipsFragment),\r\n            \"sipsIndex\",\r\n        );\r\n        return Object.values(sips).map(x => x[0]);\r\n    }\r\n\r\n    public static format(\r\n        fragments: TextFragment[],\r\n        players: { [index: number]: PlayerInfo },\r\n        sips: { [index: number]: number },\r\n        socialMediaPlatform: string,\r\n        translate: (key: string) => string,\r\n        selection: RandomUtils,\r\n        options: Partial<FormatOptions>,\r\n    ): string {\r\n        let result = \"\";\r\n        let lastPlayerFragment: PlayerReferenceFragment | null = null;\r\n\r\n        for (const fragment of fragments) {\r\n            if (fragment instanceof RawTextFragment) {\r\n                result += fragment.text;\r\n            } else if (fragment instanceof PlayerReferenceFragment) {\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n                result += players[fragment.playerIndex].name;\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                lastPlayerFragment = fragment;\r\n            } else if (fragment instanceof SipsFragment) {\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                const sip = sips[fragment.sipsIndex];\r\n                if (sip === 1) {\r\n                    result += translate(\"oneSip\");\r\n                } else {\r\n                    result += `${sip} ${translate(\"sips\")}`;\r\n                }\r\n\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n            } else if (fragment instanceof GenderBasedSelectionFragment) {\r\n                let referencedPlayer: number;\r\n                if (fragment.referencedPlayerIndex !== undefined) {\r\n                    referencedPlayer = fragment.referencedPlayerIndex;\r\n                } else if (lastPlayerFragment !== null) {\r\n                    referencedPlayer = lastPlayerFragment.playerIndex;\r\n                } else {\r\n                    const playerKeys = Object.keys(players);\r\n                    if (playerKeys.length === 0) {\r\n                        continue;\r\n                    }\r\n\r\n                    referencedPlayer = Number(playerKeys[0]);\r\n                }\r\n\r\n                const player = players[referencedPlayer];\r\n                const text = player.gender === \"Female\" ? fragment.femaleText : fragment.maleText;\r\n                if (text !== undefined) {\r\n                    result += text;\r\n                }\r\n            } else if (fragment instanceof RandomTextFragment) {\r\n                const text = selection.selectRandomWeighted(fragment.texts, () => 1);\r\n                result += text;\r\n            } else if (fragment instanceof RandomNumberFragment) {\r\n                const number = selection.selectRandomWeighted(fragment.numbers, x => x.getCount());\r\n                if (number === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                if (number instanceof NumberRange) {\r\n                    const random =\r\n                        number.min + Math.round((number.max - number.min) * selection.getRandom());\r\n                    result += random;\r\n                } else if (number instanceof StaticNumber) {\r\n                    result += number.i;\r\n                }\r\n            } else if (fragment instanceof SocialMediaPlatformFragment) {\r\n                result += socialMediaPlatform;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport interface FormatOptions {\r\n    boldPlayerNames: boolean;\r\n    boldSips: boolean;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { DefaultTextDecoder } from \"@core/parsing/text-decoder/default-text-decoder\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { FollowUpSlide, SelectedPlayer, Translator } from \"GameModels\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../../../store\";\r\nimport * as actions from \"../../actions\";\r\nimport { TextFormatter } from \"../../formatter/text-formatter\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { CardPresenter } from \"./card-presenter\";\r\n\r\nexport interface TextSlideState {\r\n    markdownContent: string;\r\n}\r\n\r\nexport abstract class TextSlidePresenter<\r\n    TState extends TextSlideState,\r\n    TCard extends TextCard\r\n> extends CardPresenter<TCard> {\r\n    constructor(protected translator: Translator, cardType: string, slideType: string) {\r\n        super(cardType, slideType);\r\n    }\r\n\r\n    protected initializeCard(card: TCard, cardRef: CardRef): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const result = new Array<RootAction>();\r\n\r\n        const text = this.selectText(selection, card);\r\n        const { formatted, players } = this.formatText(text, card, null, selection);\r\n\r\n        const state = this.initializeState(formatted, card, players, selection);\r\n        result.push(\r\n            actions.setSlideState({\r\n                state,\r\n                insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n            }),\r\n        );\r\n\r\n        if (_.some(card.followUp)) {\r\n            // dont check for correct translation as the language may change\r\n            if (Math.random() <= card.followUpPropability) {\r\n                const due = new Date();\r\n                due.setSeconds(due.getSeconds() + card.followUpDelay);\r\n\r\n                result.push(actions.enqueueFollowUp(this.createFollowUp(cardRef, players, due)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected initializeFollowUpCard(card: TCard, param: any): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n\r\n        try {\r\n            const { text, players } = this.selectFollowUpText(selection, card, param);\r\n            const { formatted } = this.formatText(text, card, players || [], selection);\r\n\r\n            const state = this.initializeFollowUpState(formatted, card, selection, param);\r\n            return [\r\n                actions.setSlideState({\r\n                    state,\r\n                    insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n                }),\r\n            ];\r\n        } catch (error) {\r\n            //no follow up found\r\n            return [actions.requestSlideAsync.request(this.translator)];\r\n        }\r\n    }\r\n\r\n    protected abstract initializeState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): TState;\r\n\r\n    protected abstract initializeFollowUpState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        selection: SelectionAlgorithm,\r\n        param: any,\r\n    ): TState;\r\n\r\n    protected createFollowUp(cardRef: CardRef, players: SelectedPlayer[], due: Date): FollowUpSlide {\r\n        return {\r\n            due: due,\r\n            slideType: this.slideType,\r\n            selectedCard: cardRef,\r\n            param: { definedPlayers: players },\r\n        };\r\n    }\r\n\r\n    protected selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return selectText(selection, selectedCard, this.translator);\r\n    }\r\n\r\n    protected formatText(\r\n        text: string,\r\n        card: TCard,\r\n        definedPlayers: SelectedPlayer[] | null,\r\n        selection: SelectionAlgorithm,\r\n    ): { formatted: string; players: SelectedPlayer[] } {\r\n        return formatText(text, card, definedPlayers, selection, this.translator);\r\n    }\r\n\r\n    selectFollowUpText(\r\n        selection: SelectionAlgorithm,\r\n        selectedCard: TextCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const lang = this.translator.languageCode;\r\n\r\n        const followUps = selectedCard.followUp.filter(x =>\r\n            _.some(x.translations, y => y.lang.toLowerCase() === lang),\r\n        );\r\n        if (followUps.length === 0) {\r\n            throw new Error(\"No follow ups found\");\r\n        }\r\n\r\n        let players: SelectedPlayer[] | undefined;\r\n        if (\"definedPlayers\" in param) {\r\n            players = param.definedPlayers;\r\n        } else {\r\n            players = undefined;\r\n        }\r\n\r\n        const content = selection.selectRandomWeighted(followUps, x => x.weight)!;\r\n        const text = content.translations.find(x => x.lang === lang)!.content;\r\n        return { text, players };\r\n    }\r\n}\r\n\r\nexport function formatText<TCard extends TextCard>(\r\n    text: string,\r\n    card: TCard,\r\n    definedPlayers: SelectedPlayer[] | null,\r\n    selection: SelectionAlgorithm,\r\n    translator: Translator,\r\n): { formatted: string; players: SelectedPlayer[] } {\r\n    const fragments = new DefaultTextDecoder().decode(text);\r\n    const playerRequirements = TextFormatter.getRequiredPlayers(fragments, card.players);\r\n\r\n    const players = gameEngine.selectPlayers(\r\n        selection,\r\n        playerRequirements,\r\n        definedPlayers || [],\r\n        card.tags,\r\n    );\r\n\r\n    const requiredSips = TextFormatter.getRequiredSips(fragments);\r\n\r\n    const indexedPlayers: { [index: number]: PlayerInfo } = {};\r\n    for (const player of players) {\r\n        indexedPlayers[player.index] = player.player;\r\n    }\r\n\r\n    const sips: { [index: number]: number } = {};\r\n    for (const sipInfo of requiredSips) {\r\n        sips[sipInfo.sipsIndex] = selection.getSips(sipInfo.minSips);\r\n    }\r\n\r\n    const socialMediaPlatform = store.getState().settings.socialMediaPlatform;\r\n\r\n    const formatted = TextFormatter.format(\r\n        fragments,\r\n        indexedPlayers,\r\n        sips,\r\n        socialMediaPlatform,\r\n        x => translator.translate(`game.textFormatter.${x}`),\r\n        selection,\r\n        { boldPlayerNames: true, boldSips: true },\r\n    );\r\n\r\n    return { formatted: formatted, players };\r\n}\r\n\r\nexport function selectText(\r\n    selection: SelectionAlgorithm,\r\n    selectedCard: TextCard,\r\n    translator: Translator,\r\n): string {\r\n    const lang = translator.languageCode;\r\n\r\n    const viableContents = selectedCard.content.filter(x =>\r\n        _.some(x.translations, y => y.lang.toLocaleLowerCase() === lang),\r\n    );\r\n    const content = selection.selectRandomWeighted(viableContents, x => x.weight)!;\r\n    return content.translations.find(x => x.lang === lang)!.content;\r\n}\r\n","import { SlidePresenter } from \"./slide-presenter\";\r\nimport { Card } from \"@core/cards/card\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { ReactNode } from \"react\";\r\nimport * as actions from \"../../actions\";\r\nimport { ActionType } from \"typesafe-actions\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport abstract class CardPresenter<TCard extends Card> implements SlidePresenter {\r\n    abstract backgroundColor: string;\r\n    requiredCards: string[];\r\n\r\n    constructor(protected cardType: string, public slideType: string) {\r\n        this.requiredCards = [cardType];\r\n    }\r\n\r\n    initialize(): ActionType<any>[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const cardRef = selection.selectCard(this.cardType);\r\n\r\n        return [actions.applyCard(cardRef), ...this.initializeCard(cardRef.card as TCard, cardRef)];\r\n    }\r\n\r\n    initializeFollowUp(card: CardRef | null, param: any): ActionType<any>[] {\r\n        return this.initializeFollowUpCard(card!.card as TCard, param, card!);\r\n    }\r\n\r\n    abstract render(): ReactNode;\r\n    protected abstract initializeCard(card: TCard, cardRef: CardRef): ActionType<any>[];\r\n    protected abstract initializeFollowUpCard(card: TCard, param: any, cardRef: CardRef): ActionType<any>[];\r\n}\r\n","export default {\r\n    down: \"#c23616\", //pomegrenate (red)\r\n    drink: \"#2470A3\", //belize hole (blue)\r\n    fact: \"#D5880B\", //orange\r\n    groupGame: \"#664EDF\", //green sea\r\n    neverEver: \"#C75000\", //pumpkin\r\n    noIdeaLoses: \"#192a56\", //pico void (dark blue)\r\n    truthOrDare: \"#2c3e50\", //Midnight blue\r\n    virus: \"##219150\",\r\n    wouldYouRather: \"#273c75\",\r\n    task: \"##667293\",\r\n};","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { PlayerSelectionInsights } from \"@core/selection/insights\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    Button,\r\n    createStyles,\r\n    Paper,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport * as gameEngine from \"../game-engine\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { defaultMarkdownOptions, getContentStyles, getRootStyles } from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { formatText, selectText } from \"./base/text-slide-presenter\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TruthOrDareSlideState,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n    setState: actions.setSlideState,\r\n    applyCard: actions.applyCard,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...getRootStyles(),\r\n            cursor: \"default\",\r\n        },\r\n        clickableRoot: {\r\n            ...getRootStyles(),\r\n        },\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            color: \"white\",\r\n            marginBottom: 15,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                fontSize: \"1.5rem\",\r\n            },\r\n        },\r\n        spaceHeader: {\r\n            visibility: \"hidden\",\r\n            marginTop: 15,\r\n        },\r\n        questionPaper: {\r\n            padding: theme.spacing.unit * 2,\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                padding: theme.spacing.unit * 3,\r\n                width: theme.spacing.unit * 50,\r\n            },\r\n        },\r\n        questionButtonsContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: theme.spacing.unit,\r\n        },\r\n        refuseMessage: {\r\n            opacity: 0.8,\r\n            marginTop: 10,\r\n        }\r\n    });\r\n\r\ntype MappedActions = typeof dispatchProps;\r\n\r\ntype Props = MappedActions &\r\n    ReturnType<typeof mapStateToProps> &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction QuestionComponent(props: Props) {\r\n    const { state, players, nextSlide, classes } = props;\r\n    const player = players.find(x => x.id === state.selectedPlayer);\r\n    if (player === undefined) {\r\n        nextSlide(toTranslator(props));\r\n        return <div />;\r\n    }\r\n\r\n    const select = (decision: TruthOrDare) =>\r\n        new TruthOrDareSlide(toTranslator(props)).select(decision, props, player);\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"scale(1, 1)\",\r\n        from: { opacity: 0, transform: \"scale(2.5, 2.5)\" },\r\n    });\r\n\r\n    return (\r\n        <animated.div style={springProps}>\r\n            <Paper className={classes.questionPaper}>\r\n                <Typography variant=\"h6\" component=\"h6\">\r\n                    <Translate\r\n                        id=\"slides.truthordare.playerTruthordare\"\r\n                        data={{ name: player.name }}\r\n                    />\r\n                </Typography>\r\n                <div className={classes.questionButtonsContainer}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: 15 }}\r\n                        onClick={() => select(\"Truth\")}\r\n                    >\r\n                        <Translate id=\"slides.truthordare.truth\" />\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => select(\"Dare\")}>\r\n                        <Translate id=\"slides.truthordare.dare\" />\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        </animated.div>\r\n    );\r\n}\r\n\r\nfunction DareComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\">\r\n            <Translate id=\"slides.truthordare.truth\" /> <Translate id=\"slides.truthordare.or\" />{\" \"}\r\n            <b>\r\n                <Translate id=\"slides.truthordare.dare\" />\r\n            </b>\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={defaultMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseDare\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\">\r\n            <b>\r\n                <Translate id=\"slides.truthordare.truth\" />\r\n            </b>{\" \"}\r\n            <Translate id=\"slides.truthordare.or\" /> <Translate id=\"slides.truthordare.dare\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={defaultMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseTruth\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthOrDareComponent(props: Props) {\r\n    const { classes, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    if (state.isDeciding) {\r\n        return <div className={classes.root}>{QuestionComponent(props)}</div>;\r\n    }\r\n\r\n    if (state.decision === \"Dare\") {\r\n        return DareComponent(props);\r\n    } else {\r\n        return TruthComponent(props);\r\n    }\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TruthOrDareComponent) as React.ComponentType;\r\n\r\ntype TruthOrDare = \"Truth\" | \"Dare\";\r\n\r\ninterface TruthOrDareSlideState {\r\n    selectedPlayer: string;\r\n    isDeciding: boolean;\r\n    decision?: TruthOrDare;\r\n    markdownContent?: string;\r\n}\r\n\r\nexport class TruthOrDareSlide implements SlidePresenter {\r\n    backgroundColor = colors.truthOrDare;\r\n\r\n    constructor(private translator: Translator) {}\r\n\r\n    public slideType = \"TruthOrDareSlide\";\r\n    public requiredCards = [\"TaskCard\", \"QuestionCard\"];\r\n\r\n    public select(decision: TruthOrDare, actions: MappedActions, player: PlayerInfo) {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const cardType = decision === \"Dare\" ? \"TaskCard\" : \"QuestionCard\";\r\n        const cardRef = selection.selectCard(cardType);\r\n        const card = cardRef.card as TextCard;\r\n\r\n        const selectedText = selectText(selection, card, this.translator);\r\n        const text = `#### ${this.translator.translate(\r\n            \"slides.truthordare.instruction\",\r\n        )}\\n${selectedText}`;\r\n\r\n        const { formatted } = formatText(\r\n            text,\r\n            card,\r\n            [{ index: 99, player }],\r\n            selection,\r\n            this.translator,\r\n        );\r\n\r\n        actions.applyCard(cardRef);\r\n\r\n        const state: TruthOrDareSlideState = {\r\n            isDeciding: false,\r\n            selectedPlayer: player.id,\r\n            markdownContent: formatted,\r\n            decision,\r\n        };\r\n        actions.setState({ state, insights: selection.insights.playerSelection });\r\n    }\r\n\r\n    initialize(): RootAction[] {\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const player = gameEngine.selectPlayers(\r\n            selection,\r\n            [new PlayerSetting(1, \"None\")],\r\n            [],\r\n            [],\r\n        )[0].player;\r\n\r\n        return [\r\n            this.setState(\r\n                { isDeciding: true, selectedPlayer: player.id },\r\n                selection.insights.playerSelection,\r\n            ),\r\n        ];\r\n    }\r\n\r\n    private setState(\r\n        state: TruthOrDareSlideState,\r\n        insights: PlayerSelectionInsights | null = null,\r\n    ): RootAction {\r\n        return actions.setSlideState({ state, insights });\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not supported.\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spring, config } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport { DownCard } from \"src/impl/cards/down-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport {\r\n    defaultMarkdownOptions,\r\n    getContentStyles,\r\n    getRootStyles,\r\n    spaceHeaderStyles,\r\n    getHeaderStyles,\r\n} from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DownSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DownSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\">\r\n            <Translate id=\"slides.down.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Spring\r\n                    config={config.wobbly}\r\n                    from={{ transform: \"translate(-100px, 0px)\" }}\r\n                    to={{ transform: \"translate(0px, 0px)\" }}\r\n                >\r\n                    {props => (\r\n                        <div style={props as any}>\r\n                            {header}\r\n                            <Markdown\r\n                                children={state.markdownContent}\r\n                                options={defaultMarkdownOptions}\r\n                            />\r\n                            <div className={classes.spaceHeader}>{header}</div>\r\n                        </div>\r\n                    )}\r\n                </Spring>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DownSlideComponent) as React.ComponentType;\r\n\r\ninterface DownSlideState extends TextSlideState {}\r\nexport class DownSlide extends TextSlidePresenter<DownSlideState, DownCard> {\r\n    backgroundColor = colors.down;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DownCard\", \"DownSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { FactCard } from \"src/impl/cards/fact-card\";\r\nimport * as actions from \"../actions\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { defaultMarkdownOptions, getContentStyles, getRootStyles, spaceHeaderStyles, getHeaderStyles } from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as FactSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction FactSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\">\r\n            <Translate id={`slides.fact.title${state.isFollowUp ? (state.isTrue ? \".true\" : \".false\") : \"\"}`} />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface FactSlideFollowUpParam {\r\n    mode: FactSlideMode;\r\n    players: SelectedPlayer[];\r\n    isTrue: boolean;\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize\r\n)(FactSlideComponent) as React.ComponentType;\r\n\r\ntype FactSlideMode = \"singleplayer\" | \"multiplayer\";\r\nconst availableFactSlideModes: FactSlideMode[] = [\"singleplayer\", \"multiplayer\"];\r\n\r\ninterface FactSlideState extends TextSlideState {\r\n    isFollowUp: boolean;\r\n    mode: FactSlideMode;\r\n    isTrue: boolean;\r\n}\r\n\r\nexport class FactSlide extends TextSlidePresenter<FactSlideState, FactCard> {\r\n    private selectedMode: FactSlideMode;\r\n    private players?: SelectedPlayer[];\r\n    backgroundColor = colors.fact;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"FactCard\", \"FactSlide\");\r\n\r\n        this.selectedMode =\r\n            availableFactSlideModes[Math.floor(availableFactSlideModes.length * Math.random())];\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        const cardText = super.selectText(selection, selectedCard);\r\n        const instruction = this.translator.translate(`slides.fact.${this.selectedMode}`);\r\n\r\n        return `#### ${instruction}\\n${cardText}`;\r\n    }\r\n\r\n    selectFollowUpText(\r\n        _selection: SelectionAlgorithm,\r\n        selectedCard: FactCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const { mode, players } = param as FactSlideFollowUpParam;\r\n        const { isTrueFact } = selectedCard;\r\n\r\n        const text = this.translator.translate(`slides.fact.${mode}.${isTrueFact}`);\r\n        return { text, players };\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        card: FactCard,\r\n        players: SelectedPlayer[],\r\n    ): FactSlideState {\r\n        this.players = players;\r\n\r\n        return {\r\n            isFollowUp: false,\r\n            markdownContent: markdownContent,\r\n            mode: this.selectedMode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string, card: FactCard,  param: any): FactSlideState {\r\n        const { mode } = param as FactSlideFollowUpParam;\r\n        return {\r\n            isFollowUp: true,\r\n            markdownContent: markdownContent,\r\n            mode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeCard(card: FactCard, cardRef: CardRef): RootAction[] {\r\n        return [...super.initializeCard(card, cardRef), actions.enqueueFollowUp({\r\n            due: new Date(),\r\n            selectedCard: cardRef,\r\n            slideType: \"FactSlide\",\r\n            param: {\r\n                mode: this.selectedMode,\r\n                players: this.players,\r\n            } as FactSlideFollowUpParam,\r\n        })];\r\n    }\r\n}\r\n","import { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport {\r\n    getRootStyles,\r\n    defaultMarkdownOptions,\r\n    getContentStyles,\r\n    spaceHeaderStyles,\r\n    getHeaderStyles,\r\n} from \"./base/helper\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { ReactNode } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStyles, Theme, WithStyles, Typography, withStyles } from \"@material-ui/core\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { NeverEverCard } from \"src/impl/cards/never-ever-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as State,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NeverEverComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"subtitle1\">\r\n            <Translate id=\"slides.neverever.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"rotate(0deg)\",\r\n        from: { opacity: 0, transform: \"rotate(20deg)\" },\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <animated.div style={springProps} className={classes.content}>\r\n                {header}\r\n                <Typography variant=\"h6\" color=\"inherit\">\r\n                    <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n                </Typography>\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography\r\n                        style={{ marginTop: 20 }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                    >\r\n                        <Translate id=\"slides.neverever.instruction\" data={{ sips: state.sips }} />\r\n                    </Typography>\r\n                </div>\r\n            </animated.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NeverEverComponent) as React.ComponentType;\r\n\r\ninterface State extends TextSlideState {\r\n    sips: number;\r\n}\r\n\r\nexport class NeverEverSlide extends TextSlidePresenter<State, NeverEverCard> {\r\n    backgroundColor = colors.neverEver;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NeverEverCard\", \"NeverEverSlide\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: NeverEverCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n        };\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator, SelectedPlayer } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WouldYouRatherCard } from \"src/impl/cards/would-you-rather-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport {\r\n    defaultMarkdownOptions,\r\n    getContentStyles,\r\n    getRootStyles,\r\n    spaceHeaderStyles,\r\n    getHeaderStyles,\r\n} from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as WouldYouRatherSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction WouldYouRatherSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\">\r\n            <Translate id=\"slides.wouldyourather.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography\r\n                        style={{ marginTop: 20 }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                    >\r\n                        <Translate id=\"slides.wouldyourather.instruction\" data={{ sips: state.sips }} />\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(WouldYouRatherSlideComponent) as React.ComponentType;\r\n\r\ninterface WouldYouRatherSlideState extends TextSlideState {\r\n    sips: number;\r\n}\r\n\r\nexport class WouldYouRatherSlide extends TextSlidePresenter<\r\n    WouldYouRatherSlideState,\r\n    WouldYouRatherCard\r\n> {\r\n    backgroundColor = colors.wouldYouRather;\r\n    constructor(translator: Translator) {\r\n        super(translator, \"WyrCard\", \"WouldYouRatherSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: WouldYouRatherCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { DrinkCard } from \"src/impl/cards/drink-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { defaultMarkdownOptions, getContentStyles, getRootStyles } from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DrinkSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DrinkSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DrinkSlideComponent) as React.ComponentType;\r\n\r\ninterface DrinkSlideState extends TextSlideState {}\r\nexport class DrinkSlide extends TextSlidePresenter<DrinkSlideState, DrinkCard> {\r\n    backgroundColor = colors.drink;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DrinkCard\", \"DrinkSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { VirusCard } from \"src/impl/cards/virus-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport {\r\n    defaultMarkdownOptions,\r\n    getContentStyles,\r\n    getRootStyles,\r\n    spaceHeaderStyles,\r\n    getHeaderStyles\r\n} from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as VirusSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction VirusSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\">\r\n            <Translate id=\"slides.virus.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(VirusSlideComponent) as React.ComponentType;\r\n\r\ninterface VirusSlideState extends TextSlideState {}\r\nexport class VirusSlide extends TextSlidePresenter<VirusSlideState, VirusCard> {\r\n    backgroundColor = colors.virus;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"VirusCard\", \"VirusSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { NoIdeaLosesCard } from \"src/impl/cards/no-idea-loses-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { defaultMarkdownOptions, getContentStyles, getRootStyles } from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as NoIdeaLosesSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NoIdeaLosesSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NoIdeaLosesSlideComponent) as React.ComponentType;\r\n\r\ninterface NoIdeaLosesSlideState extends TextSlideState {}\r\nexport class NoIdeaLosesSlide extends TextSlidePresenter<NoIdeaLosesSlideState, NoIdeaLosesCard> {\r\n    backgroundColor = colors.noIdeaLoses;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NoIdeaLosesCard\", \"NoIdeaLosesSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { GroupGameCard } from \"src/impl/cards/group-game-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport {\r\n    defaultMarkdownOptions,\r\n    getContentStyles,\r\n    getRootStyles,\r\n    spaceHeaderStyles,\r\n    getHeaderStyles,\r\n} from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as GroupGameSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction GroupGameSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\">\r\n            <Translate id=\"slides.groupgame.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(GroupGameSlideComponent) as React.ComponentType;\r\n\r\ninterface GroupGameSlideState extends TextSlideState {}\r\nexport class GroupGameSlide extends TextSlidePresenter<GroupGameSlideState, GroupGameCard> {\r\n    backgroundColor = colors.groupGame;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"GroupGameCard\", \"GroupGameSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { TaskCard } from \"src/impl/cards/task-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport {\r\n    defaultMarkdownOptions,\r\n    getContentStyles,\r\n    getRootStyles,\r\n    spaceHeaderStyles,\r\n    getHeaderStyles,\r\n} from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TaskSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: getRootStyles(),\r\n        content: getContentStyles(theme),\r\n        header: {\r\n            ...getHeaderStyles(theme),\r\n            marginBottom: 15,\r\n        },\r\n        spaceHeader: spaceHeaderStyles(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction TaskSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\">\r\n            <Translate id=\"slides.task.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={defaultMarkdownOptions} />\r\n                <Typography style={{ opacity: 0.8, marginTop: 10 }} color=\"inherit\">\r\n                    <Translate id=\"slides.task.instruction\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TaskSlideComponent) as React.ComponentType;\r\n\r\ninterface TaskSlideState extends TextSlideState {}\r\nexport class TaskSlide extends TextSlidePresenter<TaskSlideState, TaskCard> {\r\n    backgroundColor = colors.task;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"TaskCard\", \"TaskSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        let task = super.selectText(selection, selectedCard);\r\n        if (/[A-Z-a-z]$/g.test(task)) {\r\n            task = task + \".\";\r\n        }\r\n\r\n        return \"[Player99]: \" + task;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { TruthOrDareSlide } from './slides/TruthOrDareSlide';\r\nimport { DownSlide } from \"./slides/DownSlide\";\r\nimport { SlidePresenter } from \"./slides/base/slide-presenter\";\r\nimport { FactSlide } from \"./slides/FactSlide\";\r\nimport { NeverEverSlide } from \"./slides/NeverEverSlide\";\r\nimport { Translator } from \"GameModels\";\r\nimport { WouldYouRatherSlide } from './slides/WouldYouRatherSlide';\r\nimport { DrinkSlide } from './slides/DrinkSlide';\r\nimport { VirusSlide } from './slides/VirusSlide';\r\nimport { NoIdeaLosesSlide } from './slides/NoIdeaLosesSlide';\r\nimport { GroupGameSlide } from './slides/GroupGameSlide';\r\nimport { TaskSlide } from './slides/TaskSlide';\r\nimport { OpeningSlide } from './slides/OpeningSlide';\r\n\r\nexport type SlideComponents = { [type: string]: new(translator: Translator) => SlidePresenter };\r\n\r\nexport const slideComponents: SlideComponents = {\r\n    DownSlide,\r\n    FactSlide,\r\n    NeverEverSlide,\r\n    TruthOrDareSlide,\r\n    WouldYouRatherSlide,\r\n    DrinkSlide,\r\n    VirusSlide,\r\n    NoIdeaLosesSlide,\r\n    GroupGameSlide,\r\n    TaskSlide,\r\n    OpeningSlide,\r\n};\r\n","import { MelinaAlgorithm } from \"./../../core/selection/melina-algorithm\";\r\nimport { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { filter, mergeMap, tap, ignoreElements } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../store/index\";\r\nimport * as actions from \"./actions\";\r\nimport { getRandomSelectionAlgorithm } from \"./game-engine\";\r\nimport { slideComponents } from \"./component-registry\";\r\nimport { of } from \"rxjs\";\r\nimport { Translator } from \"GameModels\";\r\nimport { getSlideRegistrations } from \"./slides-processor\";\r\n\r\nexport const nextSlideEpic: Epic<RootAction, RootAction, RootState, Services> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.requestSlideAsync.request)),\r\n        mergeMap(x => of(...nextSlide(x.payload))),\r\n    );\r\n\r\nexport const redirectOnGameStartedEpic: Epic<\r\n    RootAction,\r\n    RootAction,\r\n    RootState,\r\n    Services\r\n> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.startGame)),\r\n        tap(action => action.payload.push(\"/play/game\")),\r\n        ignoreElements(),\r\n    );\r\n\r\nfunction nextSlide(translator: Translator): RootAction[] {\r\n    const now = new Date();\r\n    let state = store.getState();\r\n\r\n    const dueFollowUps = state.game.followUp.filter(x => x.due < now);\r\n    if (dueFollowUps.length > 0) {\r\n        const followUp = _.sortBy(dueFollowUps, x => x.due.getSeconds())[0];\r\n\r\n        const factory = slideComponents[followUp.slideType];\r\n        const slideInitalizer = new factory(translator);\r\n        const slideActions = slideInitalizer.initializeFollowUp(\r\n            followUp.selectedCard,\r\n            followUp.param,\r\n        );\r\n\r\n        return [actions.activateFollowUp(followUp), ...slideActions];\r\n    }\r\n\r\n    let selection = getRandomSelectionAlgorithm(state);\r\n    const slides = getSlideRegistrations(slideComponents);\r\n\r\n    const { willPower, memory } = selection.recomputeWillPower(state.game.willPowerMemory);\r\n    const willPowerActions = new Array<RootAction>();\r\n\r\n    if (willPower !== state.game.currentWillPower) {\r\n        if (!state.game.isWillPowerLocked) {\r\n            willPowerActions.push(actions.setWillPower(willPower));\r\n            state = { ...state, game: { ...state.game, currentWillPower: willPower } };\r\n            selection = getRandomSelectionAlgorithm(state);\r\n        }\r\n    }\r\n\r\n    if (memory.length > 0) {\r\n        willPowerActions.push(actions.addWillPowerMemory(memory));\r\n    }\r\n\r\n    const slideType = selection.selectNextSlide(slides);\r\n    if (slideType === undefined) {\r\n        // TODO: end game\r\n        throw new Error(\"Game Finished\");\r\n    }\r\n\r\n    const factory = slideComponents[slideType];\r\n    const slideInitalizer = new factory(translator);\r\n    const slideActions = slideInitalizer.initialize();\r\n\r\n    return [\r\n        actions.requestSlideAsync.success({\r\n            slide: slideType,\r\n            insights: (selection as MelinaAlgorithm).insights.slideWeights!,\r\n        }),\r\n        ...slideActions,\r\n        ...willPowerActions\r\n    ];\r\n}\r\n","import { SlideComponents } from \"./component-registry\";\r\nimport { SlideRegistration } from \"@core/slide-registration\";\r\n\r\nexport function getSlideRegistrations(components: SlideComponents): SlideRegistration[] {\r\n    const result = new Array<SlideRegistration>();\r\n\r\n    for (const component in components) {\r\n        if (components.hasOwnProperty(component)) {\r\n            const element = components[component];\r\n            const slide = new element({ languageCode: \"en\", translate: () => \"\" });\r\n            result.push({ slideType: slide.slideType, requestedCards: slide.requiredCards });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { combineEpics } from \"redux-observable\";\r\nimport * as settingsEpics from \"../features/settings/epics\";\r\nimport * as gameEpics from \"../features/game/epics\";\r\n\r\nexport default combineEpics(...Object.values(settingsEpics), ...Object.values(gameEpics));\r\n","import { compose } from \"redux\";\r\n\r\n// @ts-ignore\r\nexport const composeEnhancers =\r\n    (process.env.NODE_ENV === \"development\" &&\r\n        window &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n","import { PlayerSelectionInsights, SlideSelectionInsights } from \"./../../core/selection/insights\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { FollowUpSlide } from \"GameModels\";\r\nimport cuid from \"cuid\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport type GameState = Readonly<{\r\n    isStarted: boolean;\r\n\r\n    selectedSlide: string | null;\r\n    selectedCard: CardRef | null;\r\n\r\n    slideState: any | null;\r\n\r\n    currentWillPower: number;\r\n    isWillPowerLocked: boolean;\r\n    willPowerMemory: string[];\r\n\r\n    playerInsights: PlayerSelectionInsights | null;\r\n    slideInsights: SlideSelectionInsights | null;\r\n\r\n    startTime: Date | null;\r\n\r\n    cardsHistory: CardRef[];\r\n    slidesHistory: string[];\r\n    followUp: FollowUpSlide[];\r\n    activeFollowUp: FollowUpSlide | null;\r\n    currentSlideStatus: string;\r\n}>;\r\n\r\nexport default combineReducers<GameState, RootAction>({\r\n    cardsHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return [action.payload, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slidesHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return [action.payload.slide, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    isStarted: (state = false, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.startGame):\r\n                return true;\r\n            case getType(actions.cancelGame):\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedCard: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return action.payload;\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.selectedCard;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedSlide: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.slide;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.slideType;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideState: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n            case getType(actions.activateFollowUp):\r\n            case getType(actions.startGame):\r\n                return null;\r\n            case getType(actions.setSlideState):\r\n                return action.payload.state;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    followUp: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.enqueueFollowUp):\r\n                return [...state, action.payload];\r\n            case getType(actions.activateFollowUp):\r\n                return state.filter(x => x.due !== action.payload.due);\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    activeFollowUp: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    startTime: (state = null, action) => {\r\n        if (action.type === getType(actions.startGame)) {\r\n            return new Date();\r\n        }\r\n        return state;\r\n    },\r\n    isWillPowerLocked: (state = false, action) => {\r\n        if (action.type === getType(actions.setWillPowerLocked)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    currentWillPower: (state = 1, action) => {\r\n        if (action.type === getType(actions.setWillPower)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    willPowerMemory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addWillPowerMemory):\r\n                return [...state, ...action.payload];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    playerInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideState):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    currentSlideStatus: (state = \"\", action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return cuid();\r\n            case getType(actions.startGame):\r\n                return \"\";\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { slideWeights } from \"../../preferences\";\r\nimport _ from \"lodash\";\r\n\r\nexport type SettingsState = Readonly<{\r\n    preferOppositeGenders: boolean;\r\n    slides: Array<Weighted<string>>;\r\n    socialMediaPlatform: string;\r\n    sources: SourceInfo[];\r\n    tags: Array<Weighted<string>>;\r\n}>;\r\n\r\nexport default combineReducers<SettingsState, RootAction>({\r\n    sources: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addSource):\r\n                return [...state, action.payload];\r\n            case getType(actions.removeSource):\r\n                return state.filter(x => x.url !== action.payload);\r\n            case getType(actions.loadSourceAsync.request):\r\n                return state.map(item =>\r\n                    item.url === action.payload ? { ...item, isLoading: true } : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.success):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? {\r\n                              ...item,\r\n                              cards: action.payload.cards,\r\n                              errorMessage: null,\r\n                              isLoading: false,\r\n                              tags: _.uniq(_.flatten(action.payload.cards.map(x => x.tags)).map(x => (x as string).toLowerCase()))\r\n                          }\r\n                        : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.failure):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? { ...item, isLoading: false, errorMessage: action.payload.message }\r\n                        : item,\r\n                );\r\n            case getType(actions.setSourceWeight):\r\n                return state.map(item =>\r\n                    item.url === action.payload.value\r\n                        ? { ...item, weight: action.payload.weight }\r\n                        : item,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    preferOppositeGenders: (state = true, action) => {\r\n        if (action.type === getType(actions.setPreferOppositeGenders)) {\r\n            return action.payload;\r\n        }\r\n        return state;\r\n    },\r\n    slides: (state = GetSlideWeightedArray(), action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideWeight):\r\n                return state.map(x => (x.value === action.payload.value ? action.payload : x));\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    socialMediaPlatform: (state = \"Snapchat\", action) => {\r\n        if (action.type === getType(actions.setSocialMediaPlatform)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    tags: (state = [], action) => {\r\n        if (action.type === getType(actions.setTagWeight)) {\r\n            const value = action.payload.value.toLowerCase();\r\n            const existingTag = state.find(x => x.value === value);\r\n            if (existingTag !== undefined) {\r\n                return state.map(x => x.value === value ? {value, weight: action.payload.weight} : x);\r\n            } else {\r\n                return [...state, action.payload];\r\n            }\r\n        }\r\n\r\n        return state;\r\n    },\r\n});\r\n\r\nfunction GetSlideWeightedArray() {\r\n    const weightsList: Weighted<string>[] = [];\r\n    for (const key in slideWeights) {\r\n        if (slideWeights.hasOwnProperty(key)) {\r\n            const element = slideWeights[key];\r\n            weightsList.push({ value: key, weight: element });\r\n        }\r\n    }\r\n\r\n    return weightsList;\r\n}\r\n","import { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { combineReducers } from \"redux\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport * as actions from \"./actions\";\r\nimport { getType } from \"typesafe-actions\";\r\n\r\nexport type PlayState = Readonly<{\r\n    players: PlayerInfo[];\r\n    arrangements: PlayerArrangement[];\r\n}>;\r\n\r\nexport default combineReducers<PlayState, RootAction>({\r\n    players: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayer):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayer):\r\n                return state.filter(x => x.id !== action.payload);\r\n            case getType(actions.updatePlayer):\r\n                return state.map(player =>\r\n                    player.id === action.payload.id ? action.payload : player,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    arrangements: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayerArrangment):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayerArrangment):\r\n                return state.filter(x => x.p1 !== action.payload);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport gameReducer from \"../features/game/reducer\";\r\nimport settingsReducer from \"../features/settings/reducer\";\r\nimport playReducer from \"../features/play/reducer\";\r\nimport { localizeReducer } from \"react-localize-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    play: playReducer,\r\n    game: gameReducer,\r\n    settings: settingsReducer,\r\n    localize: localizeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport services from \"../services\";\r\nimport rootEpic from \"./root-epic\";\r\nimport { composeEnhancers } from \"./utils\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport { loadState, persistState } from \"./storage\";\r\n\r\nexport const epicMiddleware = createEpicMiddleware<RootAction, RootAction, RootState, Services>({\r\n    dependencies: services,\r\n});\r\n\r\n// configure middlewares\r\nconst middlewares = [epicMiddleware];\r\n\r\n// compose enchancers\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n// rehydrate state on app start\r\nconst initialState = loadState();\r\n\r\n// create store\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\npersistState(store);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\n// export store singleton instance\r\nexport default store;\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { SettingsState } from \"../features/settings/reducer\";\r\n\r\nexport function persistState(store: any) {\r\n    store.subscribe(() => {\r\n        const state: RootState = store.getState();\r\n        const toStore: SettingsState = {\r\n            ...state.settings,\r\n            sources: state.settings.sources.map(x => ({\r\n                url: x.url,\r\n                weight: x.weight,\r\n                isLoading: false,\r\n                cards: null,\r\n                errorMessage: null,\r\n                tags: []\r\n            })),\r\n        };\r\n        localStorage.setItem(\"settingsState\", JSON.stringify(toStore));\r\n    });\r\n}\r\n\r\nexport function loadState(): Partial<RootState> {\r\n    const settings = localStorage.getItem(\"settingsState\");\r\n    const state = settings !== null ? JSON.parse(settings) : {};\r\n    return { settings: state };\r\n}\r\n","import { CardDeck } from \"@core/card-deck\";\r\nimport { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GameStatus } from \"@core/game-status\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer } from \"GameModels\";\r\nimport seedrandom from \"seedrandom\";\r\nimport store from \"../../store\";\r\n\r\nexport function selectPlayers(\r\n    selection: SelectionAlgorithm,\r\n    players: PlayerSetting[],\r\n    predefined: SelectedPlayer[],\r\n    tags: string[],\r\n): SelectedPlayer[] {\r\n    const result = selection.selectPlayers(\r\n        players.map(x => x.gender),\r\n        players.map(x => {\r\n            const p = predefined.find(y => y.index === x.playerIndex);\r\n            if (p === undefined) {\r\n                return null;\r\n            }\r\n\r\n            return p.player;\r\n        }),\r\n        tags,\r\n    );\r\n    const selected = result.map((x, i) => ({ index: players[i].playerIndex, player: x }));\r\n\r\n    return selected;\r\n}\r\n\r\nexport function getRandomSelectionAlgorithm(state?: RootState): SelectionAlgorithm {\r\n    if (state === undefined) {\r\n        state = store.getState();\r\n    }\r\n\r\n    const random = seedrandom();\r\n    return new MelinaAlgorithm(extractGameStatus(state), random);\r\n}\r\n\r\nfunction extractGameStatus(state: RootState): GameStatus {\r\n    const currentStatus: GameStatus = {\r\n        decks: state.settings.sources\r\n            .filter(x => x.cards !== undefined)\r\n            .map(item => {\r\n                const result: CardDeck = { ...item, cards: item.cards || [] };\r\n                return result;\r\n            }),\r\n        cardsHistory: state.game.cardsHistory,\r\n        language: state.localize.languages.find(x => x.active)!.code,\r\n        players: state.play.players,\r\n        slides: state.settings.slides,\r\n        tags: state.settings.tags,\r\n        arrangements: state.play.arrangements,\r\n        preferOppositeGenders: state.settings.preferOppositeGenders,\r\n        slidesHistory: state.game.slidesHistory,\r\n        startTime: state.game.startTime!,\r\n        willPower: state.game.currentWillPower,\r\n    };\r\n\r\n    return currentStatus;\r\n}\r\n","import { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    createStyles,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n    FormControl,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\nimport { toFixedEnd } from \"@utils/string-extensions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Cell,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { compose } from \"redux\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { parsers } from \"../../../impl/registrations\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n});\r\n\r\nconst styles = createStyles({\r\n    chart: {\r\n        width: 200,\r\n        height: 300,\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & LocalizeContextProps;\r\ntype State = { selectedCardType: string | null };\r\n\r\nclass InsightsCards extends Component<Props, State> {\r\n    readonly state = { selectedCardType: null };\r\n\r\n    setSelectedCardType = (type: string) => {\r\n        this.setState({ selectedCardType: type === \"\" ? null : type });\r\n    };\r\n\r\n    render() {\r\n        const { translate, currentWillPower } = this.props;\r\n        const { selectedCardType } = this.state;\r\n\r\n        const cardTypes = [\"\", ...Object.keys(parsers)];\r\n\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const insights = selection.getAllCardDeckStatistics(selectedCardType);\r\n\r\n        const decksStatistics = percentageFixedTotal(insights.decks, x => x.weight, 1000).map(\r\n            x => ({\r\n                value: x.part / 10,\r\n                name: x.value.value.url,\r\n            }),\r\n        );\r\n\r\n        const willPowerStatistics = percentageFixedTotal(\r\n            insights.willPower,\r\n            x => x.weight,\r\n            1000,\r\n        ).map(x => ({\r\n            value: x.part / 10,\r\n            name: x.value.value.willPower || translate(\"insights.universal\"),\r\n            info: x.value.value,\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.cardsDist\" />\r\n                </Typography>\r\n                <Grid container alignItems=\"flex-end\" spacing={16}>\r\n                    <Grid item>\r\n                        <FormControl>\r\n                            <Select\r\n                                style={{ width: 200, marginTop: 10 }}\r\n                                value={selectedCardType || \"\"}\r\n                                displayEmpty={true}\r\n                                renderValue={x => x || translate(\"insights.allCards\")}\r\n                                onChange={ev => this.setSelectedCardType(ev.target.value)}\r\n                                input={<Input />}\r\n                            >\r\n                                {cardTypes.map(x => (\r\n                                    <MenuItem key={x} value={x}>\r\n                                        {x || translate(\"insights.allCards\")}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography>{`${translate(\"insights.cards\")}: ${insights.totalCards}`}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={decksStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" tickFormatter={x => toFixedEnd(x, 18)} />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={x => x + \"%\"}\r\n                            labelFormatter={url =>\r\n                                translate(\"insights.cardDeckName\", {\r\n                                    url,\r\n                                    cards: insights.decks.find(x => x.value.url === url)!.value\r\n                                        .cards.length,\r\n                                })\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            name={translate(\"insights.part\") as string}\r\n                            dataKey=\"value\"\r\n                            fill=\"#8884d8\"\r\n                            maxBarSize={20}\r\n                        />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.willPowerDist\" />\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={willPowerStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={(x, _, e) =>\r\n                                `${x}% (${e.payload.info.count} ${translate(\"insights.cards\")})`\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            dataKey=\"value\"\r\n                            maxBarSize={20}\r\n                            name={translate(\"insights.part\") as string}\r\n                        >\r\n                            {willPowerStatistics.map((entry, index) => (\r\n                                <Cell\r\n                                    fill={\r\n                                        entry.info.willPower === currentWillPower\r\n                                            ? \"#e74c3c\"\r\n                                            : \"#8884d8\"\r\n                                    }\r\n                                    key={index}\r\n                                />\r\n                            ))}\r\n                        </Bar>\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(InsightsCards) as React.ComponentType;\r\n","export function toFixedEnd(s: string, length: number) {\r\n    if (length > s.length) {\r\n        return s;\r\n    }\r\n\r\n    return \"..\" + s.substring(s.length - length - 2, s.length);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InsightsCurrentSlide from \"./InsightsCurrentSlide\";\r\nimport InsightsWillPowerView from \"./InsightsWillPowerView\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport InsightsCards from \"./InsightsCards\";\r\n\r\nexport default class InsightsView extends Component {\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <InsightsWillPowerView />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 10}}>\r\n                    <InsightsCurrentSlide />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 20}}>\r\n                    <InsightsCards />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport {\r\n    AppBar,\r\n    Slide,\r\n    createStyles,\r\n    WithStyles,\r\n    withStyles,\r\n    Toolbar,\r\n    Button,\r\n    Typography,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport InsightsView from \"./InsightsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing.unit,\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction InsightsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.push(\"/play/game\")}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.insights\" />\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/play/game\")}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <InsightsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(InsightsDialog) as React.ComponentType;\r\n","import { AppBar, Tab, Tabs, Theme } from \"@material-ui/core\";\r\nimport { createStyles, withStyles, WithStyles, WithTheme } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../../play/components/PlayerArrangementsDialog\";\r\nimport ConfigurationRoute from \"../../../routes/ConfigurationRoute\";\r\nimport PlayRoute from \"../../../routes/PlayRoute\";\r\nimport SourcesRoute from \"../../../routes/SourcesRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n        },\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        firstChildMargins: {\r\n            marginTop: 24,\r\n            marginLeft: 24,\r\n            marginRight: 24,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme & LocalizeContextProps;\r\n\r\ninterface State {\r\n    value: number;\r\n}\r\n\r\nclass SettingsView extends React.Component<Props, State> {\r\n    readonly state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (_event: any, value: number) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleChangeIndex = (index: number) => {\r\n        this.setState({ value: index });\r\n    };\r\n\r\n    render() {\r\n        const { classes, translate } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab label={translate(\"settings.players\")} />\r\n                        <Tab label={translate(\"settings.sources\")} />\r\n                        <Tab label={translate(\"settings.configuration\")} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && <PlayRoute />}\r\n                {value === 1 && <SourcesRoute />}\r\n                {value === 2 && <ConfigurationRoute />}\r\n\r\n                <Route path=\"/play/game/settings/arrangements\" component={PlayerArrangementsDialog} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withStyles(styles, { withTheme: true }),\r\n)(SettingsView) as React.ComponentType;\r\n","import { AppBar, Button, createStyles, IconButton, Slide, Toolbar, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport SettingsView from \"./SettingsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n    },\r\n    dialogPaper: {\r\n        height: \"80vh\",\r\n    },\r\n    fullscreenPaper: {\r\n        height: \"100vh\",\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction SettingsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.push(\"/play/game\")}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                classes={{\r\n                    paperScrollPaper: classes.dialogPaper,\r\n                    paperFullScreen: classes.fullscreenPaper,\r\n                }}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.settings\" />\r\n                        </Typography>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={() => history.push(\"/play/game/settings/arrangements\")}\r\n                        >\r\n                            <PeopleIcon />\r\n                        </IconButton>\r\n                        <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <SettingsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(SettingsDialog) as React.ComponentType;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { slideComponents } from \"../component-registry\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & LocalizeContextProps;\r\n\r\nfunction SlideWrapper(props: Props) {\r\n    const { selectedSlide } = props;\r\n\r\n    if (selectedSlide === null) {\r\n        return <Typography variant=\"h3\">Loading game...</Typography>;\r\n    }\r\n\r\n    const factory = slideComponents[selectedSlide];\r\n    const slideInitalizer = new factory(toTranslator(props));\r\n    const springProps = useSpring({backgroundColor: slideInitalizer.backgroundColor, height: \"100%\"});\r\n\r\n    return <animated.div style={springProps}>{slideInitalizer.render()}</animated.div>;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(SlideWrapper) as React.ComponentType;\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect, DispatchProp } from \"react-redux\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { OpeningSlide } from \"../slides/OpeningSlide\";\r\nimport GameOptions from \"./GameOptions\";\r\nimport InsightsDialog from \"./InsightsDialog\";\r\nimport SettingsDialog from \"./SettingsDialog\";\r\nimport SlideWrapper from \"./SlideWrapper\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    current: state.game.currentSlideStatus,\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & DispatchProp;\r\n\r\nclass GameComponent extends Component<Props> {\r\n    public componentDidMount() {\r\n        if (this.props.selectedSlide !== null) {\r\n            return;\r\n        }\r\n        const openingSlide = new OpeningSlide();\r\n        const slideActions = openingSlide.initialize();\r\n\r\n        this.props.dispatch(\r\n            actions.requestSlideAsync.success({\r\n                slide: openingSlide.slideType,\r\n                insights: null,\r\n            }),\r\n        );\r\n\r\n        for (const action of slideActions) {\r\n            this.props.dispatch(action);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div\r\n                style={{ width: \"100%\", height: \"100%\", position: \"relative\", overflow: \"hidden\" }}\r\n            >\r\n                <SlideWrapper />\r\n                <div style={{ top: 10, right: 10, position: \"absolute\" }}>\r\n                    <GameOptions />\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/play/game/settings\" component={SettingsDialog} />\r\n                    <Route path=\"/play/game/insights\" component={InsightsDialog} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(GameComponent) as React.ComponentType;\r\n","import { CircularProgress, Fade } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { DrinkingGame } from \"./registrations\";\r\n\r\ninterface Props extends RouteComponentProps, LocalizeContextProps {\r\n    game: DrinkingGame;\r\n}\r\n\r\ninterface State {\r\n    isLoadingLang: string | null;\r\n    content: string | null;\r\n}\r\n\r\nclass DrinkingGameComponent extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        isLoadingLang: null,\r\n        content: null,\r\n    };\r\n\r\n    getLang(): string | null {\r\n        const { history, activeLanguage, game } = this.props;\r\n\r\n        const path = history.location.pathname;\r\n        if (path !== `/drinkingGames/${game.name}`) {\r\n            return null;\r\n        }\r\n\r\n        const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n\r\n        return translation.lang;\r\n    }\r\n\r\n    render() {\r\n        const { content, isLoadingLang } = this.state;\r\n        const { game } = this.props;\r\n\r\n        const lang = this.getLang();\r\n        if (lang === null) {\r\n            return null;\r\n        }\r\n\r\n        if (content !== null && isLoadingLang === lang) {\r\n            return (\r\n                <div style={{ paddingLeft: 20, paddingRight: 20 }}>\r\n                    <Markdown children={content} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isLoadingLang !== lang) {\r\n            Axios.get(`/explanations/${game.name}.${lang}.md`).then(response => {\r\n                const currentLang = this.getLang();\r\n\r\n                if (currentLang !== lang) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    content: response.data,\r\n                    isLoadingLang: currentLang\r\n                });\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Fade\r\n                in={true}\r\n                style={{\r\n                    transitionDelay: \"800ms\",\r\n                    margin: 20,\r\n                }}\r\n                unmountOnExit\r\n            >\r\n                <CircularProgress />\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withLocalize(DrinkingGameComponent));\r\n","import React from \"react\";\r\nimport DrinkingGame from \"../features/drinking-games/DrinkingGame\";\r\nimport game from \"../features/drinking-games/registrations\";\r\n\r\nexport default function DrinkingGameRoute() {\r\n    return (\r\n        <div>\r\n            {game.map(x => (\r\n                <DrinkingGame key={x.name} game={x} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    createStyles,\r\n    CssBaseline,\r\n    WithStyles,\r\n    withStyles,\r\n    WithTheme,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport AppDrawerContainer from \"./AppDrawerContainer\";\r\nimport PlayRoute from \"../routes/PlayRoute\";\r\nimport SourcesRoute from \"../routes/SourcesRoute\";\r\nimport ConfigurationRoute from \"../routes/ConfigurationRoute\";\r\nimport GameComponent from \"../features/game/components/GameComponent\";\r\nimport DrinkingGameRoute from \"../routes/DrinkingGameRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        root: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n        },\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            flex: \"0 1 auto\",\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isStarted: state.game.isStarted,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & WithTheme;\r\n\r\nfunction App(props: Props) {\r\n    const { classes, isStarted } = props;\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div className={classes.root}>\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/play/game\"\r\n                        render={() => (!isStarted ? <Redirect to=\"/play\" /> : <GameComponent />)}\r\n                    />\r\n                    <Route\r\n                        path=\"/\"\r\n                        render={() => (\r\n                            <React.Fragment>\r\n                                <CssBaseline />\r\n                                <AppDrawerContainer />\r\n                                <main className={classes.content}>\r\n                                    <div className={classes.toolbar} />\r\n                                    <div style={{ flex: \"1 1 auto\" }}>\r\n                                        <Switch>\r\n                                            <Route\r\n                                                exact\r\n                                                path=\"/\"\r\n                                                render={() => <Redirect to=\"/play\" />}\r\n                                            />\r\n                                            <Route path=\"/play\" component={PlayRoute} />\r\n                                            <Route path=\"/sources\" component={SourcesRoute} />\r\n                                            <Route\r\n                                                path=\"/configuration\"\r\n                                                component={ConfigurationRoute}\r\n                                            />\r\n                                            <Route\r\n                                                path=\"/drinkingGames\"\r\n                                                component={DrinkingGameRoute}\r\n                                            />\r\n                                        </Switch>\r\n                                    </div>\r\n                                </main>\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles, { withTheme: true }),\r\n)(App) as React.ComponentType;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"tslib\";\r\nimport \"typeface-roboto\";\r\nimport App from \"./app/App\";\r\nimport \"./env\";\r\nimport { addSource, loadSourceAsync } from \"./features/settings/actions\";\r\nimport { addPlayer } from \"./features/play/actions\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport { initialize, LocalizeProvider, NamedLanguage } from \"react-localize-redux\";\r\nimport drinctetTranslations from \"./loc/drinctet.json\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { defaultSources } from \"./preferences\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst state = store.getState();\r\n\r\nif (state.settings.sources.length === 0) {\r\n    for (const src of defaultSources) {\r\n        store.dispatch(addSource(src));\r\n    }\r\n}\r\n\r\nfor (const src of state.settings.sources) {\r\n    store.dispatch(loadSourceAsync.request(src.url));\r\n}\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n    store.dispatch(addPlayer({ name: \"Vincent\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Melina\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Bursod\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Larny\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Sven\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Hufeld\", gender: \"Male\" }));\r\n}\r\n\r\nvar userLang = (navigator.language || ((navigator as any).userLanguage as string) || \"en\").split(\r\n    \"-\",\r\n)[0];\r\n\r\nconst languages: NamedLanguage[] = [\r\n    { code: \"en\", name: \"English\" },\r\n    { code: \"de\", name: \"Deutsch\" },\r\n];\r\nstore.dispatch(\r\n    initialize({\r\n        languages,\r\n        translation: drinctetTranslations,\r\n        options: { renderToStaticMarkup, defaultLanguage: userLang },\r\n    }),\r\n);\r\n\r\nconst Root = () => (\r\n    <div style={{ height: \"100%\" }}>\r\n        <Provider store={store}>\r\n            <LocalizeProvider store={store}>\r\n                <App />\r\n            </LocalizeProvider>\r\n        </Provider>\r\n    </div>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}