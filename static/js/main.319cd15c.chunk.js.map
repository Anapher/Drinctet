{"version":3,"sources":["env.ts","features/drinking-games/registrations.ts","features/drinking-games/DrinkingGameItems.tsx","app/AppDrawer.tsx","utils/path.ts","features/game/actions.ts","app/MainAppBar.tsx","app/AppDrawerContainer.tsx","features/play/actions.ts","features/play/components/AddPlayerForm.tsx","core/player-info.ts","features/play/selectors.ts","features/play/components/PlayerListItem.tsx","features/play/components/PlayerList.tsx","features/play/components/PlayerArrangements.tsx","features/play/components/PlayerArrangementsDialog.tsx","routes/PlayRoute.tsx","features/settings/actions.ts","features/settings/selectors.ts","features/settings/components/AddSourceForm.tsx","features/settings/components/SourcesListItem.tsx","features/settings/components/SourcesList.tsx","routes/SourcesRoute.tsx","features/settings/components/configuration/ChangeLanguage.tsx","features/settings/components/configuration/PlayerPairing.tsx","preferences.ts","features/settings/components/configuration/SocialMediaPlatform.tsx","features/settings/components/configuration/ItemPreferences.tsx","utils/statistics.ts","features/settings/components/configuration/SlidePreferences.tsx","features/settings/components/configuration/TagsPerferences.tsx","features/settings/components/configuration/ResetSettings.tsx","features/settings/components/Configuration.tsx","routes/ConfigurationRoute.tsx","utils/material-markdown.tsx","features/game/utils.ts","features/game/slides/base/helper.tsx","features/game/slides/OpeningSlide.tsx","utils/fullscreen.ts","features/game/components/GameOptions.tsx","features/game/components/InsightsCurrentSlide.tsx","features/game/components/InsightsWillPowerView.tsx","core/selection/insights.ts","core/selection/utils.ts","core/selection/selection-algorithm-base.ts","core/selection/melina-algorithm.ts","core/cards-loader.ts","core/cards/player-setting.ts","core/parsing/parser-helper.ts","core/parsing/base-card-parser.ts","core/cards/text-element.ts","core/cards/text-translation.ts","core/parsing/text-content-parser.ts","core/parsing/text-card-parser.ts","core/cards/text-card.ts","core/cards/base-card.ts","impl/cards/fact-card.ts","impl/parsing/fact-card-parser.ts","impl/cards/virus-card.ts","impl/parsing/virus-card-parser.ts","impl/parsing/default-text-card-parser.ts","impl/cards/down-card.ts","impl/cards/never-ever-card.ts","impl/cards/joke-card.ts","impl/cards/question-card.ts","impl/cards/task-card.ts","impl/cards/would-you-rather-card.ts","impl/cards/drink-card.ts","impl/cards/group-game-card.ts","impl/cards/no-idea-loses-card.ts","impl/registrations.tsx","services/api/cards-loader.ts","impl/default-card-parser-factory.ts","services/index.ts","features/settings/epics.ts","store/storage.ts","core/text-fragment.ts","core/fragments/raw-text-fragment.ts","core/fragments/variable-fragment.ts","core/fragments/player-reference-fragment.ts","core/fragments/sips-fragment.ts","core/fragments/random-number-fragment.ts","core/fragments/random-text-fragment.ts","core/fragments/gender-based-selection-fragment.ts","core/fragments/social-media-platform-fragment.ts","core/parsing/text-decoder/default-text-decoder.ts","core/parsing/text-decoder/text-decoder-consts.ts","features/game/formatter/text-formatter.ts","features/game/slides/base/text-slide-presenter.ts","features/game/slides/base/card-presenter.ts","features/game/slides/colors.ts","features/game/slides/TruthOrDareSlide.tsx","features/game/slides/DownSlide.tsx","features/game/slides/FactSlide.tsx","features/game/slides/NeverEverSlide.tsx","features/game/slides/WouldYouRatherSlide.tsx","features/game/slides/DrinkSlide.tsx","features/game/slides/VirusSlide.tsx","features/game/slides/NoIdeaLosesSlide.tsx","features/game/slides/GroupGameSlide.tsx","features/game/slides/TaskSlide.tsx","features/game/slides/GameFinishedSlide.tsx","features/game/component-registry.ts","features/game/epics.ts","features/game/slides-processor.ts","store/root-epic.ts","store/utils.ts","features/game/reducer.ts","features/settings/reducer.ts","features/play/reducer.ts","store/root-reducer.ts","store/index.ts","features/game/game-engine.ts","features/game/components/InsightsCards.tsx","utils/string-extensions.ts","features/game/components/InsightsView.tsx","features/game/components/InsightsDialog.tsx","features/game/components/SettingsView.tsx","features/game/components/SettingsDialog.tsx","features/game/components/SlideWrapper.tsx","features/game/components/GameComponent.tsx","features/drinking-games/DrinkingGame.tsx","routes/DrinkingGameRoute.tsx","routes/AboutRoute.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["process","LOCAL_STORAGE_VERSION","games","name","translations","lang","compose","withLocalize","withRouter","_ref","activeLanguage","history","undefined","code","translatedGames","map","game","translation","find","x","_","sortBy","_ref2","path","concat","react_default","a","createElement","index_es","key","button","onClick","push","selected","location","pathname","primary","drinctetRoutes","icon","FlightTakeoff_default","Layers_default","Settings_default","secondaryRoutes","Person_default","renderRoutes","routes","translate","route","startsWith","substring","DrinkingGamesMenu","state","isOpen","handleClick","event","_this","setState","stopPropagation","this","props","_this$props","classes","Fragment","Receipt_default","ExpandLess_default","ExpandMore_default","in","timeout","unmountOnExit","disablePadding","className","nested","DrinkingGameItems","React","Component","withStyles","theme","createStyles","toolbar","Object","objectSpread","mixins","paddingLeft","display","alignItems","spacing","unit","variant","AppDrawer_DrinkingGamesMenu","getRootPath","match","exec","length","startGame","createStandardAction","cancelGame","requestSlideAsync","createAsyncAction","applyCard","setSlideState","enqueueFollowUp","activateFollowUp","setWillPowerLocked","setWillPower","addWillPowerMemory","dispatchProps","actions","menuButton","defineProperty","marginLeft","marginRight","breakpoints","up","grow","flexGrow","appbar","connect","sources","settings","players","play","handleToggleDrawer","arePlayersSelected","areSourcesAdded","filter","cards","areSourcesLoading","isLoading","canPlay","position","color","aria-label","Menu_default","noWrap","react_localize_redux_es","id","es_Route","render","disabled","People_default","AppDrawerContainer","mobileOpen","handleDrawerToggle","setDrawerOpen","_this2","app_MainAppBar","appBar","drawer","mdUp","implementation","anchor","direction","open","onClose","onOpen","paper","drawerPaper","tabIndex","role","onKeyDown","AppDrawer","smDown","width","flexShrink","withTheme","addPlayer","playerInfo","payload","gender","cuid","updatePlayer","removePlayer","addPlayerArrangment","removePlayerArrangment","AddPlayerForm","handlePlayerNameChange","ev","currentTarget","value","handleAddClick","endsWith","handleFormKeyDown","e","preventDefault","react","style","Input_default","type","placeholder","onChange","Button_default","PlayerInfo","classCallCheck","getPlayers","getIconButtonStyle","margin","height","onRemoveClick","onSwapGenderClick","onNameChanged","IconButton_default","react_fontawesome_index_es","faMars","faVenus","error","onBlur","Delete_default","fontSize","selectors","List_default","player","ListItem_default","components_PlayerListItem","arrangements","arrangmentItem","borderBottom","paddingBottom","arrangementSelect","down","container","findIndex","p2","arrangment","p1","arrangedPlayerId","item","xs","lg","htmlFor","target","input","y","Transition","assign","withMobileDialog","breakpoint","flex","content","padding","overflowX","dialogPaper","fullscreenPaper","fullScreen","Dialog_default","goBack","TransitionComponent","fullWidth","maxWidth","paperScrollPaper","paperFullScreen","components_PlayerArrangements","tabContainer","flexDirection","headerMargin","paddingTop","paddingRight","fillRemaining","overflowY","components_AddPlayerForm","components_PlayerList","Route","component","PlayerArrangementsDialog","addSource","url","errorMessage","weight","tags","removeSource","loadSourceAsync","setSourceWeight","setPreferOppositeGenders","setSocialMediaPlatform","setSlideWeight","setTagWeight","resetWeights","resetAll","getSources","loadSource","request","AddSourceForm","handleUrlChange","sourceExists","LoadingItem","LoadingFailedItem","onReloadClick","WeightSlider","onChangeWeight","lab_index_es","max","min","step","n","root","backgroundColor","palette","background","title","textOverflow","wordBreak","overflow","_ref3","cardsCount","badgeContent","showZero","avatar","checked","b","titleTypographyProps","action","subheader","source","components_SourcesListItem","components_AddSourceForm","components_SourcesList","languages","setActiveLanguage","sm","md","inputProps","preferOppositeGenders","control","c","label","socialMediaPlatforms","slideWeights","FactSlide","DownSlide","NeverEverSlide","TruthOrDareSlide","WouldYouRatherSlide","DrinkSlide","VirusSlide","NoIdeaLosesSlide","GroupGameSlide","TaskSlide","higherArrangementPropabilityTags","platform","socialMediaPlatform","gutterBottom","marginTop","ItemPreferences","items","opacity","v","percentageFixedTotal","values","getPercentage","percentageValues","percent","total","reduce","result","Array","sum","prevBaseline","i","_percentageValues$i","sumRounded","Math","round","part","slides","slidePercentages","configuration_ItemPreferences","data","count","fontWeight","decks","weights","uniq","flatMap","Configuration","marginBottom","configuration_ChangeLanguage","PlayerPairing","SocialMediaPlatform","configuration_SlidePreferences","TagsPerferences","configuration_ResetSettings","components_Configuration","Header","children","objectWithoutProperties","SizedHeader","markdownOptions","overrides","p","h1","h2","h3","h4","_ref4","fontFamily","cardMarkdownOptions","_ref5","marginBlockStart","marginBlockEnd","h5","h6","blockquote","_ref6","borderLeft","toTranslator","localize","languageCode","contentStyle","textAlign","headerStyle","smallHeaderStyle","progressColor","nextSlide","slideState","justifyContent","cursor","-webkit-tap-highlight-color","rootProgress","top","left","bottom","zIndex","baseStyles","header","continuationDate","remaining","abs","Date","now","Container","Keyframes","Spring","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","from","config","duration","stop","_x","apply","arguments","tapToContinueProps","useSpring","delay","native","renderprops","div","esm","options","web","OpeningSlide","slideType","requiredCards","createClass","date","setSeconds","getSeconds","Error","insights","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","webkit","moz","ms","document","window","vendor","keys","Fullscreen","element","handler","addEventListener","removeEventListener","bind","Boolean","toLowerCase","styles","GameOptions","anchorEl","isFullscreen","handleMenuOpenClick","handleClose","handleNavigate","toggleFullscreen","documentElement","handleExit","onfullscreenchange","_this3","_this$state","MoreVert_default","PaperProps","DonutLarge_default","FullscreenExit_default","Fullscreen_default","Close_default","selectedSlide","activeFollowUp","selectedCard","section","scrollableTable","tableCellNoBreak","whiteSpace","renderPlayerInsights","playerInsights","predefined","join","renderPredefinedPlayers","rounds","statistics","number","playerId","conditionalBold","chosen","isBold","InsightsCurrentSlide","cardRef","slideInsights","card","wp","willPower","deckUrl","slide","renderSlideWeights","toggleContainer","currentWillPower","isLocked","isWillPowerLocked","exclusive","row","Insights","playerSelection","defaultRandomGenerator","random","selectRandomWeighted","getWeight","totalWeight","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","randomWeight","_i","MelinaAlgorithm","_SelectionAlgorithmBa","_getPrototypeOf2","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","deckExhaustionLimit","inherits","cardType","weightedDecks","weightCards","status","deckWeights","willPowerWeights","willPowerCounter","allCards","_loop","deck","toConsumableArray","boostWillPower","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_loop2","willPowerWeightsArray","propName","Number","totalCards","playerSettings","definedPlayers","forArrangement","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop4","arrangement","_iterator3","resultCounter","_loop3","sourceList","includes","malesCount","femalesCount","selectionRoundInsights","some","dominant","changed","_this4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop5","_iterator4","_loop6","_i4","_this5","perfectCards","unplayedCards","cardsHistory","percentage","unplayedWeight","console","log","factor","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","perfectCard","availableSlides","_this6","uniqueCardTypes","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_loop7","_iterator8","requestedCards","cardTypeRatings","_i5","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","cardDeck","weightedSlides","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_loop8","slideSettings","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iterator7","slidesHistory","lastSlideType","lastSlide","floor","getRandom","_this7","filtered","weightedTag","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_loop9","cardsPlayed","exhaustionFactor","pow","weightedCards","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","rateWillPower","getHistoryFactor","getTagsFactor","_iterator11","memory","addedMemory","getHours","slidesCount","tagWeights","historyPosition","cardWillPower","specification","specificationMales","actualMales","specificationFemales","actualFemales","SelectionAlgorithmBase","selectRandomFromWeightedList","CardsLoader","requestFile","parserFactory","domParser","DOMParser","_loadFromUrl","loadFile","abrupt","_loadFile","_callee2","xml","xmlDoc","cardElements","xmlElement","parser","_context2","sent","parseFromString","getElementsByTagName","parentElement","nodeName","parseDeckReference","createParser","deserialize","indexOf","_x2","_x3","_x4","getAttribute","deckWhitelist","referenceRequests","cardRefs","idAttr","cardId","PlayerSetting","playerIndex","ParserHelper","s","index","isNaN","genderRequirementMap","split","m","male","f","female","o","opposite","same","BaseCardParser","createCard","getDefaultAttributes","parseAttributes","subElements","tagName","parseElement","parsePlayers","parsePlayer","parsePlayerTag","requiredGender","genderAttr","genderReq","parseGenderRequirement","TextElement","TextTranslation","TextContentParser","isConditionalElement","parseTextElement","parseTranslation","textElement","texts","textXmlNode","textContent","TextCardParser","_BaseCardParser","textContentParser","rootXml","followUpAttr","followUpProbability","followUpPropability","followUpDelay","seconds","parseTimeSpanStringToSeconds","addElement","subElement","followUp","TextCard","_BaseCard","condition","language","BaseCard","FactCard","_TextCard","isTrueFact","FactCardParser","_TextCardParser","get","prototype","attr","toBool","VirusCard","VirusCardParser","DefaultTextCardParser","factory","DownCard","NeverEverCard","JokeCard","QuestionCard","TaskCard","WouldYouRatherCard","DrinkCard","GroupGameCard","NoIdeaLosesCard","parsers","WyrCard","loader","DefaultCardParserFactory","response","axios","loadCards","_loadCards","loadFromUrl","services","api","cardsLoader","loadSourceEpic","action$","_state$","pipe","isActionOf","mergeMap","success","catchError","message","of","failure","resetAllEpic","_services","tap","localStorage","clear","reload","ignoreElements","TextFragment","RawTextFragment","_TextFragment","text","VariableFragment","PlayerReferenceFragment","_VariableFragment","SipsFragment","minSips","sipsIndex","RandomNumberFragment","numbers","NumberRange","StaticNumber","RandomTextFragment","GenderBasedSelectionFragment","femaleText","maleText","referencedPlayerIndex","SocialMediaPlatformFragment","DefaultTextDecoder","lastTokenIndex","token","readToken","parseVariableFragment","parseRandomSelectionFragment","parseGenderSelectionFragment","playerTag","playerRef","parameterBegin","genderString","parsePlayerIndex","sipsTag","sipsFragment","test","parseNumberArray","splitQuoted","currentNumber","numberStart","isRangeToken","num","delimiter","tokenStart","withinQuotes","replace","nextChar","fragment","splitterIndex","reference","endChar","char","TextFormatter","fragments","requiredPlayers","groupBy","hasOwnProperty","rootSetting","sips","selection","lastPlayerFragment","boldPlayerNames","boldSips","sip","referencedPlayer","playerKeys","getCount","TextSlidePresenter","_CardPresenter","translator","formatted","gameEngine","selectText","formatText","initializeState","due","createFollowUp","param","_this$selectFollowUpT","selectFollowUpText","initializeFollowUpState","followUps","CardPresenter","selectCard","initializeCard","initializeFollowUpCard","decode","getRequiredPlayers","requiredSips","getRequiredSips","indexedPlayers","sipInfo","getSips","store","getState","format","viableContents","toLocaleLowerCase","colors","drink","fact","groupGame","neverEver","noIdeaLoses","truthOrDare","virus","wouldYouRather","task","_questionPaper","clickableRoot","spaceHeader","visibility","questionPaper","questionButtonsContainer","refuseMessage","isDeciding","selectedPlayer","select","decision","springProps","transform","QuestionComponent","markdownContent","DareComponent","TruthComponent","selectedText","getRandomSelectionAlgorithm","TruthOrDareSlide_Component","hidden","wobbly","to","_TextSlidePresenter","DownSlide_Component","isFollowUp","isTrue","availableFactSlideModes","selectedMode","FactSlide_Component","cardText","instruction","_selection","mode","NeverEverSlide_Component","_card","_players","WouldYouRatherSlide_Component","DrinkSlide_Component","VirusSlide_Component","NoIdeaLosesSlide_Component","GroupGameSlide_Component","TaskSlide_Component","minWidth","slideComponents","GameFinishedSlide","GameFinishedSlide_Component","nextSlideEpic","dueFollowUps","slideInitalizer","slideActions","initializeFollowUp","components","getSlideRegistrations","_selection$recomputeW","recomputeWillPower","willPowerMemory","willPowerActions","selectNextSlide","initialize","redirectOnGameStartedEpic","combineEpics","settingsEpics","gameEpics","composeEnhancers","combineReducers","getType","isStarted","startTime","currentSlideStatus","flatten","GetSlideWeightedArray","weightsList","rootReducer","playReducer","gameReducer","settingsReducer","localizeReducer","epicMiddleware","createEpicMiddleware","dependencies","middlewares","enhancer","applyMiddleware","initialState","getItem","JSON","parse","loadState","createStore","subscribe","toStore","setItem","stringify","run","rootEpic","selectPlayers","seedrandom","active","extractGameStatus","chart","InsightsCards","selectedCardType","setSelectedCardType","cardTypes","getAllCardDeckStatistics","decksStatistics","willPowerStatistics","info","displayEmpty","renderValue","es6","dataKey","tickFormatter","formatter","labelFormatter","fill","maxBarSize","entry","InsightsView","components_InsightsWillPowerView","components_InsightsCurrentSlide","components_InsightsCards","InsightsView_InsightsView","SettingsView","handleChange","_event","handleChangeIndex","indicatorColor","textColor","PlayRoute","SourcesRoute","ConfigurationRoute","firstChildMargins","components_SettingsView","GameComponent","openingSlide","dispatch","components_SlideWrapper","right","components_GameOptions","Switch","SettingsDialog","InsightsDialog","current","DrinkingGameComponent","isLoadingLang","_this$props2","getLang","Axios","then","currentLang","transitionDelay","gutters","DrinkingGameRoute","DrinkingGame","flexFlow","BrowserRouter","basename","components_GameComponent","Redirect","app_AppDrawerContainer","exact","AboutRoute","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","src_iteratorNormalCompletion","src_didIteratorError","src_iteratorError","src_step","src_iterator","src","src_iteratorNormalCompletion2","src_didIteratorError2","src_iteratorError2","src_step2","src_iterator2","userLang","userLanguage","drinctetTranslations","renderToStaticMarkup","defaultLanguage","es","app_App","getElementById","URL","href","origin","fetch","contentType","headers","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.319cd15c.chunk.js","sourcesContent":["// @ts-ignore\r\nprocess.env.LOCAL_STORAGE_VERSION = 1;","export interface DrinkingGame {\r\n    name: string;\r\n    translations: DrinkingGameExplanation[];\r\n}\r\n\r\ninterface DrinkingGameExplanation {\r\n    name: string;\r\n    lang: string;\r\n}\r\n\r\nconst games: DrinkingGame[] = [\r\n    {\r\n        name: \"drinking-driving\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Drink & Drive\" },\r\n            { lang: \"en\", name: \"Drink & Drive\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"horse-racing\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pferderennen\" },\r\n            { lang: \"en\", name: \"Horse Racing\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"image-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Image Game\" },\r\n            { lang: \"en\", name: \"Image Game\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"pizza-box\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pizza Karton\" },\r\n            { lang: \"en\", name: \"Pizza Box\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"weird-talk\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Weird Talk\" },\r\n            { lang: \"en\", name: \"Weird Talk\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"whisper-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Flüsterspiel\" },\r\n            { lang: \"en\", name: \"Whisper Game\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"bus-driver\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Busfahrer\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"submarine\",\r\n        translations: [\r\n            { lang: \"de\", name: \"U-Boot\" },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default games;","import React from \"react\";\r\nimport games from \"./registrations\";\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport _ from \"lodash\";\r\n\r\ntype Props = LocalizeContextProps & RouteComponentProps;\r\n\r\nfunction MenuItems({ activeLanguage, history }: Props) {\r\n    const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n    let translatedGames = games.map(game => {\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n\r\n        return { game, translation };\r\n    });\r\n\r\n    translatedGames = _.sortBy(translatedGames, x => x.translation.name);\r\n\r\n    return translatedGames.map(({ game, translation }) => {\r\n        const path = `/drinkingGames/${game.name}`;\r\n\r\n        return (\r\n            <ListItem\r\n                key={game.name}\r\n                button\r\n                onClick={() => history.push(path)}\r\n                selected={history.location.pathname === path}\r\n            >\r\n                <ListItemText primary={translation.name} />\r\n            </ListItem>\r\n        );\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withRouter,\r\n)(MenuItems) as React.ComponentType;\r\n","import {\r\n    Collapse,\r\n    createStyles,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport DrinkingGameItems from \"../features/drinking-games/DrinkingGameItems\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            paddingLeft: 20,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing.unit * 4,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & RouteComponentProps & LocalizeContextProps;\r\n\r\ninterface Route {\r\n    path: string;\r\n    icon: JSX.Element;\r\n}\r\n\r\nconst drinctetRoutes: Route[] = [\r\n    {\r\n        path: \"/play\",\r\n        icon: <FlightTakeoffIcon />,\r\n    },\r\n    {\r\n        path: \"/sources\",\r\n        icon: <LayersIcon />,\r\n    },\r\n    {\r\n        path: \"/configuration\",\r\n        icon: <SettingsIcon />,\r\n    },\r\n];\r\n\r\nconst secondaryRoutes: Route[] = [\r\n    {\r\n        path: \"/about\",\r\n        icon: <PersonIcon />,\r\n    },\r\n];\r\n\r\nfunction renderRoutes({ translate, history }: Props, routes: Route[]) {\r\n    return routes.map(route => (\r\n        <ListItem\r\n            key={route.path}\r\n            button\r\n            selected={history.location.pathname.startsWith(route.path)}\r\n            onClick={() => history.push(route.path)}\r\n        >\r\n            <ListItemIcon>{route.icon}</ListItemIcon>\r\n            <ListItemText primary={translate(`menu.${route.path.substring(1)}`)} />\r\n        </ListItem>\r\n    ));\r\n}\r\n\r\ninterface ExpandableItemState {\r\n    isOpen: boolean;\r\n}\r\n\r\nclass DrinkingGamesMenu extends React.Component<Props, ExpandableItemState> {\r\n    readonly state = { isOpen: false };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.pathname.startsWith(\"/drinkingGames\")) {\r\n            this.setState({ isOpen: true });\r\n        }\r\n    }\r\n\r\n    handleClick = (event: React.SyntheticEvent) => {\r\n        this.setState(state => ({ isOpen: !state.isOpen }));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { translate, classes } = this.props;\r\n        const { isOpen } = this.state;\r\n        const name = \"drinkingGames\";\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={this.handleClick} selected={false}>\r\n                    <ListItemIcon>\r\n                        <ReceiptIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={translate(`menu.${name}`)} />\r\n                    {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                </ListItem>\r\n                <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                    <List disablePadding>\r\n                        <div className={classes.nested}>\r\n                            <DrinkingGameItems />\r\n                        </div>\r\n                    </List>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction MainDrawer(props: Props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n                <div>\r\n                    <Typography variant=\"h6\">Drinctet</Typography>\r\n                    <Typography>The goal is to drink that!</Typography>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>{renderRoutes(props, drinctetRoutes)}</List>\r\n            <Divider />\r\n            <List>\r\n                <DrinkingGamesMenu {...props} />\r\n                <List>{renderRoutes(props, secondaryRoutes)}</List>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n    withLocalize,\r\n)(MainDrawer) as React.ComponentType;\r\n","export function getRootPath(path: string): string | null {\r\n    const match = /[a-zA-Z]+/g.exec(path);\r\n    return match !== null && match.length > 0 ? match[0] : null;\r\n}\r\n","import { PlayerSelectionInsights } from './../../core/selection/insights';\r\nimport { createStandardAction, createAsyncAction } from \"typesafe-actions\";\r\nimport { FollowUpSlide, Translator } from 'GameModels';\r\nimport { History } from 'history';\r\nimport { SlideSelectionInsights } from '@core/selection/insights';\r\nimport { CardRef } from '@core/cards/card-ref';\r\n\r\nexport const startGame = createStandardAction(\"START_GAME\")<History>();\r\n\r\nexport const cancelGame = createStandardAction(\"CANCEL_GAME\")();\r\n\r\nexport const requestSlideAsync = createAsyncAction(\r\n    \"NEXT_SLIDE_REQUEST\",\r\n    \"NEXT_SLIDE_SUCCESS\",\r\n    \"NEXT_SLIDE_FAILURE\",\r\n)<Translator, {slide: string, insights: SlideSelectionInsights | null}, string>();\r\n\r\nexport const applyCard = createStandardAction(\"APPLY_CARD\")<CardRef>();\r\n\r\nexport const setSlideState = createStandardAction(\"SET_SLIDE_STATE\")<{state: any, insights: PlayerSelectionInsights | null}>();\r\n\r\nexport const enqueueFollowUp = createStandardAction(\"ADD_FOLLOW_UP\")<FollowUpSlide>();\r\nexport const activateFollowUp = createStandardAction(\"ACTIVATE_FOLLOW_UP\")<FollowUpSlide>();\r\n\r\nexport const setWillPowerLocked = createStandardAction(\"SET_WILL_POWER_LOCKED\")<boolean>();\r\nexport const setWillPower = createStandardAction(\"SET_WILL_POWER\")<number>();\r\nexport const addWillPowerMemory = createStandardAction(\"ADD_WILL_POWER_MEMORY\")<string[]>();\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Theme,\r\n    Toolbar,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { Route, RouteComponentProps, withRouter } from \"react-router\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { getRootPath } from \"@utils/path\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as actions from \"../features/game/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                display: \"none\",\r\n            },\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        appbar: {},\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: state.settings.sources,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    startGame: actions.startGame,\r\n};\r\n\r\ninterface HandlerProps {\r\n    handleToggleDrawer(): void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> &\r\n    HandlerProps &\r\n    LocalizeContextProps &\r\n    RouteComponentProps &\r\n    ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps;\r\n\r\nfunction MainAppBar({ classes, handleToggleDrawer, history, sources, players, startGame }: Props) {\r\n    const arePlayersSelected = players.length > 1;\r\n    const areSourcesAdded = sources.filter(x => x.cards !== undefined).length > 0;\r\n    const areSourcesLoading = sources.filter(x => x.isLoading).length > 0;\r\n\r\n    const canPlay = arePlayersSelected && areSourcesAdded && !areSourcesLoading;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                    onClick={handleToggleDrawer}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} noWrap>\r\n                    <Translate id={`menu.${getRootPath(history.location.pathname)}`} />\r\n                </Typography>\r\n                <Route\r\n                    path=\"/play\"\r\n                    render={() => (\r\n                        <React.Fragment>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                disabled={players.length < 3}\r\n                                onClick={() => history.push(\"/play/arrangements\")}\r\n                            >\r\n                                <PeopleIcon />\r\n                            </IconButton>\r\n                            <Button color=\"inherit\" disabled={!canPlay} onClick={() => startGame(history)}>\r\n                                <Translate id=\"play.start\" />\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    )}\r\n                />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(\r\n    withLocalize(\r\n        withRouter(\r\n            connect(\r\n                mapStateToProps,\r\n                dispatchProps,\r\n            )(MainAppBar),\r\n        ),\r\n    ),\r\n);\r\n","import React from \"react\";\r\nimport {\r\n    createStyles,\r\n    WithStyles,\r\n    WithTheme,\r\n    Theme,\r\n    Hidden,\r\n    Drawer,\r\n    withStyles,\r\n    SwipeableDrawer,\r\n} from \"@material-ui/core\";\r\nimport MainDrawer from \"./AppDrawer\";\r\nimport MainAppBar from \"./MainAppBar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        appBar: {\r\n            marginLeft: drawerWidth,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n            },\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme;\r\ninterface State {\r\n    mobileOpen: boolean;\r\n}\r\n\r\nclass AppDrawerContainer extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        mobileOpen: false,\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    setDrawerOpen = (isOpen: boolean) => {\r\n        this.setState({ mobileOpen: isOpen });\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n        const { mobileOpen } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <MainAppBar\r\n                    classes={{ appbar: classes.appBar }}\r\n                    handleToggleDrawer={this.handleDrawerToggle}\r\n                />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden mdUp implementation=\"css\">\r\n                        <SwipeableDrawer\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                            open={mobileOpen}\r\n                            onClose={() => this.setDrawerOpen(false)}\r\n                            onOpen={() => this.setDrawerOpen(true)}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                tabIndex={0}\r\n                                role=\"button\"\r\n                                onClick={() => this.setDrawerOpen(false)}\r\n                                onKeyDown={() => this.setDrawerOpen(false)}\r\n                            >\r\n                                <MainDrawer />\r\n                            </div>\r\n                        </SwipeableDrawer>\r\n                    </Hidden>\r\n                    <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open\r\n                        >\r\n                            <MainDrawer />\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(AppDrawerContainer);\r\n","import { Gender, PlayerInfo } from \"@core/player-info\";\r\nimport cuid from \"cuid\";\r\nimport { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { createStandardAction } from \"typesafe-actions\";\r\n\r\nexport const addPlayer = createStandardAction(\"ADD_PLAYER\").map(\r\n    (playerInfo: { name: string; gender: Gender }): { payload: PlayerInfo } => ({\r\n        payload: {\r\n            name: playerInfo.name,\r\n            gender: playerInfo.gender,\r\n            id: cuid(),\r\n        },\r\n    }),\r\n);\r\n\r\nexport const updatePlayer = createStandardAction(\"UPDATE_PLAYER\")<PlayerInfo>();\r\nexport const removePlayer = createStandardAction(\"REMOVE_PLAYER\")<string>();\r\n\r\nexport const addPlayerArrangment = createStandardAction(\"ADD_PLAYER_ARRANGEMENT\")<\r\n    PlayerArrangement\r\n>();\r\nexport const removePlayerArrangment = createStandardAction(\"REMOVE_PLAYER_ARRANGEMENT\")<string>();\r\n","import * as React from \"react\";\r\nimport { addPlayer } from \"../actions\";\r\nimport { Gender } from \"@core/player-info\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\n\r\nconst dispatchProps = {\r\n    addPlayer,\r\n};\r\n\r\ntype Props = typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    name: string;\r\n};\r\n\r\nclass AddPlayerForm extends React.Component<Props, State> {\r\n    readonly state = { name: \"\" };\r\n\r\n    handlePlayerNameChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ name: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        let gender: Gender = \"Male\";\r\n        if (this.state.name.endsWith(\"a\"))\r\n            //sorry Luca\r\n            gender = \"Female\";\r\n\r\n        this.props.addPlayer({ name: this.state.name, gender });\r\n        this.setState({ name: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.name) this.handleAddClick();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        const { translate } = this.props;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={name}\r\n                        placeholder={translate(\"settings.players.playerName\") as string}\r\n                        onChange={this.handlePlayerNameChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!name}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    dispatchProps,\r\n)(withLocalize(AddPlayerForm));\r\n","export class PlayerInfo {\r\n    constructor(public id: string, public name: string, public gender: Gender) {}\r\n}\r\n\r\nexport type Gender = \"Male\" | \"Female\";\r\n","import { PlayState } from './reducer';\r\n\r\nexport const getPlayers = (state: PlayState) => state.players;","import { Gender } from \"../../../core/player-info\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVenus, faMars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps } from \"react-localize-redux\";\r\n\r\ninterface Props extends LocalizeContextProps {\r\n    name: string;\r\n    gender: Gender;\r\n    onRemoveClick: () => void;\r\n    onSwapGenderClick: () => void;\r\n    onNameChanged: (name: string) => void;\r\n}\r\n\r\nconst getIconButtonStyle = (): React.CSSProperties => ({\r\n    margin: -10,\r\n    width: 48,\r\n    height: 48,\r\n});\r\n\r\nfunction PlayerListItem({ name, gender, onRemoveClick, onSwapGenderClick, onNameChanged, translate }: Props) {\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <IconButton\r\n                aria-label=\"Swap Gender\"\r\n                onClick={onSwapGenderClick}\r\n                style={{ ...getIconButtonStyle(), marginRight: 0 }}\r\n            >\r\n                <Icon>\r\n                    <FontAwesomeIcon icon={gender === \"Male\" ? faMars : faVenus} />\r\n                </Icon>\r\n            </IconButton>\r\n            <Input\r\n                error={!name}\r\n                onBlur={() => {\r\n                    if (!name) onRemoveClick();\r\n                }}\r\n                style={{ flexGrow: 1, marginLeft: 5, marginRight: 5 }}\r\n                placeholder={translate(\"settings.willBeRemoved\") as string}\r\n                value={name}\r\n                onChange={ev => onNameChanged(ev.currentTarget.value)}\r\n            />\r\n            <IconButton\r\n                aria-label=\"Delete\"\r\n                onClick={onRemoveClick}\r\n                style={{ ...getIconButtonStyle(), marginLeft: 0 }}\r\n                tabIndex={-1}\r\n            >\r\n                <DeleteIcon fontSize=\"default\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withLocalize(PlayerListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { removePlayer, updatePlayer } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport PlayerListItem from \"./PlayerListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  players: selectors.getPlayers(state.play),\r\n});\r\n\r\nconst dispatchProps = {\r\n  removePlayer,\r\n  updatePlayer,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction PlayerList({ players, removePlayer, updatePlayer }: Props) {\r\n  return (\r\n    <List>\r\n      {players.map(player => (\r\n        <ListItem key={player.id}>\r\n          <ListItemText>\r\n            <PlayerListItem\r\n              name={player.name}\r\n              gender={player.gender}\r\n              onRemoveClick={() => removePlayer(player.id)}\r\n              onNameChanged={name =>\r\n                updatePlayer(new PlayerInfo(player.id, name, player.gender))\r\n              }\r\n              onSwapGenderClick={() =>\r\n                updatePlayer(\r\n                  new PlayerInfo(\r\n                    player.id,\r\n                    player.name,\r\n                    player.gender === \"Female\" ? \"Male\" : \"Female\",\r\n                  ),\r\n                )\r\n              }\r\n            />\r\n          </ListItemText>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  dispatchProps,\r\n)(PlayerList);\r\n","import React from \"react\";\r\nimport {\r\n    Typography,\r\n    WithStyles,\r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { addPlayerArrangment, removePlayerArrangment } from \"../actions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        arrangmentItem: {\r\n            borderBottom: \"1px solid #d8d8d8\",\r\n            paddingBottom: 5,\r\n        },\r\n        arrangementSelect: {\r\n            width: 200,\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                width: \"100%\",\r\n            },\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    players: state.play.players,\r\n    arrangements: state.play.arrangements,\r\n});\r\n\r\nconst dispatchProps = {\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles>;\r\n\r\nfunction PlayerArrangements({\r\n    classes,\r\n    players,\r\n    arrangements,\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle2\">\r\n                <Translate id=\"settings.configuration.arrangements\" />\r\n            </Typography>\r\n            <Typography>\r\n                <Translate id=\"settings.configuration.arrangements.description\" />\r\n            </Typography>\r\n            <Grid container>\r\n                {players\r\n                    .filter(player => arrangements.findIndex(x => x.p2 === player.id) === -1)\r\n                    .map(player => {\r\n                        const arrangment = arrangements.find(x => x.p1 === player.id);\r\n                        const arrangedPlayerId = arrangment === undefined ? \"\" : arrangment.p2;\r\n                        return (\r\n                            <Grid\r\n                                item\r\n                                container\r\n                                alignItems=\"flex-end\"\r\n                                className={classes.arrangmentItem}\r\n                                key={player.id}\r\n                            >\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Typography variant=\"subtitle1\">{player.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl className={classes.arrangementSelect}>\r\n                                        <InputLabel htmlFor=\"player-selection\">\r\n                                            <Translate id=\"settings.configuration.arrangements.pairWith\" />\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            value={arrangedPlayerId}\r\n                                            onChange={ev => {\r\n                                                const value = ev.target.value;\r\n                                                if (value === \"\") {\r\n                                                    removePlayerArrangment(player.id);\r\n                                                } else {\r\n                                                    addPlayerArrangment({\r\n                                                        p1: player.id,\r\n                                                        p2: value,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            input={<Input id=\"player-selection\" />}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>\r\n                                                    <Translate id=\"settings.configuration.arrangements.none\" />\r\n                                                </em>\r\n                                            </MenuItem>\r\n                                            {players\r\n                                                .filter(\r\n                                                    x =>\r\n                                                        x.id !== player.id &&\r\n                                                        arrangements.findIndex(\r\n                                                            y =>\r\n                                                                (y.p1 === x.id || y.p2 === x.id) &&\r\n                                                                y.p1 !== player.id,\r\n                                                        ) === -1,\r\n                                                )\r\n                                                .map(x => (\r\n                                                    <MenuItem key={x.id} value={x.id}>\r\n                                                        {x.name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(PlayerArrangements) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangements from \"./PlayerArrangements\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: \"relative\",\r\n        },\r\n        flex: {\r\n            flex: 1,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing.unit * 2,\r\n            overflowX: \"auto\",\r\n        },\r\n        dialogPaper: {\r\n            height: \"80vh\",\r\n        },\r\n        fullscreenPaper: {\r\n            height: \"100vh\",\r\n        },\r\n    });\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction PlayerArrangementsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClose={() => history.goBack()}\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            classes={{\r\n                paperScrollPaper: classes.dialogPaper,\r\n                paperFullScreen: classes.fullscreenPaper,\r\n            }}\r\n        >\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                        <Translate id=\"play.playerArrangements\" />\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                        <Translate id=\"close\" />\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.content}>\r\n                <PlayerArrangements />\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(PlayerArrangementsDialog) as React.ComponentType;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddPlayerForm from \"../features/play/components/AddPlayerForm\";\r\nimport PlayerList from \"../features/play/components/PlayerList\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../features/play/components/PlayerArrangementsDialog\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            maxWidth: 800,\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction PlayComponent({ classes }: Props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className={classes.tabContainer}>\r\n                <div className={classes.headerMargin}>\r\n                    <AddPlayerForm />\r\n                </div>\r\n                <div className={classes.fillRemaining}>\r\n                    <PlayerList />\r\n                </div>\r\n            </Grid>\r\n\r\n            <Route path=\"/play/arrangements\" component={PlayerArrangementsDialog} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n)(PlayComponent) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { createAsyncAction, createStandardAction } from \"typesafe-actions\";\r\nimport { Card } from \"@core/cards/card\";\r\n\r\nexport const addSource = createStandardAction(\"ADD_SOURCE\").map(\r\n    (url: string): { payload: SourceInfo } => ({\r\n        payload: {\r\n            url,\r\n            isLoading: false,\r\n            errorMessage: null,\r\n            cards: null,\r\n            weight: 0.5,\r\n            tags: []\r\n        },\r\n    }),\r\n);\r\nexport const removeSource = createStandardAction(\"REMOVE_SOURCE\")<string>();\r\n\r\nexport const loadSourceAsync = createAsyncAction(\r\n    \"LOAD_SOURCE_REQUEST\",\r\n    \"LOAD_SOURCE_SUCCESS\",\r\n    \"LOAD_SOURCE_FAILURE\",\r\n)<string, { url: string; cards: Card[] }, { url: string; message: string }>();\r\n\r\nexport const setSourceWeight = createStandardAction(\"SET_SOURCE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setPreferOppositeGenders = createStandardAction(\"SET_PREFER_OPPOSITE_GENDERS\")<\r\n    boolean\r\n>();\r\n\r\nexport const setSocialMediaPlatform = createStandardAction(\"SET_SOCIAL_MEDIA_PLATFORM\")<string>();\r\n\r\nexport const setSlideWeight = createStandardAction(\"SET_SLIDE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setTagWeight = createStandardAction(\"SET_TAG_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const resetWeights = createStandardAction(\"RESET_WEIGHTS\")();\r\nexport const resetAll = createStandardAction(\"RESET_ALL\")();\r\n","import {SettingsState} from \"./reducer\";\r\n\r\nexport const getSources = (state: SettingsState) => state.sources;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSource, loadSourceAsync } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    addSource,\r\n    loadSource: loadSourceAsync.request,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    url: string;\r\n};\r\n\r\nclass AddSourceForm extends React.Component<Props, State> {\r\n    readonly state = { url: \"\" };\r\n\r\n    handleUrlChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ url: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        if (!this.state.url || this.props.sources.findIndex(x => x.url === this.state.url) > -1) {\r\n            return;\r\n        }\r\n\r\n        this.props.addSource(this.state.url);\r\n        this.props.loadSource(this.state.url);\r\n        this.setState({ url: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.url) {\r\n                this.handleAddClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { url } = this.state;\r\n        const { translate } = this.props;\r\n        const sourceExists = this.props.sources.findIndex(x => x.url === this.state.url) > -1;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={url}\r\n                        placeholder={translate(\"settings.sources.sourceUrl\") as string}\r\n                        error={sourceExists}\r\n                        onChange={this.handleUrlChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!url || sourceExists}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(AddSourceForm));\r\n","import {\r\n    Card,\r\n    CardHeader,\r\n    Typography,\r\n    Link,\r\n    Checkbox,\r\n    withStyles,\r\n    Theme,\r\n    createStyles,\r\n    LinearProgress,\r\n    Badge,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport React from \"react\";\r\nimport { Slider } from \"@material-ui/lab\";\r\n\r\ninterface LoadingFailedItemProps {\r\n    errorMessage: string | null;\r\n    onReloadClick: () => void;\r\n}\r\n\r\ninterface WeightProps {\r\n    weight: number;\r\n    onChangeWeight: (value: number) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n        },\r\n        title: {\r\n            textOverflow: \"elipsis\",\r\n            wordBreak: \"break-all\",\r\n            overflow: \"hidden\",\r\n        },\r\n        fullWidth: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ninterface Props extends LoadingFailedItemProps, WeightProps, WithStyles<typeof styles> {\r\n    url: string;\r\n    isLoading: boolean;\r\n    cardsCount: number;\r\n    weight: number;\r\n    onRemoveClick: () => void;\r\n}\r\n\r\nfunction LoadingItem() {\r\n    return <LinearProgress />;\r\n}\r\n\r\nfunction LoadingFailedItem({ errorMessage, onReloadClick }: LoadingFailedItemProps) {\r\n    return (\r\n        <Typography color=\"secondary\" variant=\"body1\" component=\"small\">\r\n            {`${errorMessage}`}\r\n            <Link\r\n                style={{ marginLeft: 15 }}\r\n                component=\"button\"\r\n                variant=\"body1\"\r\n                onClick={onReloadClick}\r\n            >\r\n                Reload\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction WeightSlider({ weight, onChangeWeight }: WeightProps) {\r\n    return (\r\n        <Slider\r\n            max={1}\r\n            min={0}\r\n            step={0.05}\r\n            style={{ margin: 10, padding: '4px 0px' }}\r\n            value={weight}\r\n            onChange={(_, n) => onChangeWeight(n)}\r\n        />\r\n    );\r\n}\r\n\r\nfunction SourcesListItem({\r\n    url,\r\n    classes,\r\n    isLoading,\r\n    errorMessage,\r\n    cardsCount,\r\n    weight,\r\n    onRemoveClick,\r\n    onReloadClick,\r\n    onChangeWeight,\r\n}: Props) {\r\n    return (\r\n        <Badge\r\n            badgeContent={cardsCount}\r\n            color=\"primary\"\r\n            max={9999}\r\n            className={classes.fullWidth}\r\n            showZero={false}\r\n        >\r\n            <Card className={classes.fullWidth}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Checkbox\r\n                            checked={weight !== 0}\r\n                            style={{ margin: -10 }}\r\n                            onChange={(_, b) => (b ? onChangeWeight(0.5) : onChangeWeight(0))}\r\n                        />\r\n                    }\r\n                    titleTypographyProps={{ className: classes.title }}\r\n                    title={url}\r\n                    action={\r\n                        <IconButton onClick={onRemoveClick}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    }\r\n                    subheader={\r\n                        isLoading ? (\r\n                            <LoadingItem />\r\n                        ) : errorMessage ? (\r\n                            <LoadingFailedItem\r\n                                errorMessage={errorMessage}\r\n                                onReloadClick={onReloadClick}\r\n                            />\r\n                        ) : (\r\n                            <WeightSlider weight={weight} onChangeWeight={onChangeWeight} />\r\n                        )\r\n                    }\r\n                />\r\n            </Card>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SourcesListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadSourceAsync, removeSource, setSourceWeight } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport SourcesListItem from \"./SourcesListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    loadSource: loadSourceAsync.request,\r\n    removeSource,\r\n    setSourceWeight,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SourcesList({ sources, removeSource, loadSource, setSourceWeight }: Props) {\r\n    return (\r\n        <List>\r\n            {sources.map(source => (\r\n                <ListItem key={source.url}>\r\n                    <ListItemText>\r\n                        <SourcesListItem\r\n                            url={source.url}\r\n                            isLoading={source.isLoading}\r\n                            errorMessage={source.errorMessage}\r\n                            cardsCount={(source.cards && source.cards.length) || 0}\r\n                            weight={source.weight}\r\n                            onChangeWeight={weight =>\r\n                                setSourceWeight({ value: source.url, weight })\r\n                            }\r\n                            onRemoveClick={() => removeSource(source.url)}\r\n                            onReloadClick={() => loadSource(source.url)}\r\n                        />\r\n                    </ListItemText>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(SourcesList);\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddSourceForm from \"../features/settings/components/AddSourceForm\";\r\nimport SourcesList from \"../features/settings/components/SourcesList\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction SourcesComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.headerMargin}>\r\n                <AddSourceForm />\r\n            </div>\r\n            <div className={classes.fillRemaining}>\r\n                <SourcesList />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(SourcesComponent);\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Grid,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nconst styles = () =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ntype Props = LocalizeContextProps & WithStyles<typeof styles>;\r\n\r\nfunction ChangeLanguage({ activeLanguage, languages, setActiveLanguage, classes }: Props) {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={10} md={8} lg={6}>\r\n                <FormControl className={classes.root}>\r\n                    <InputLabel htmlFor=\"language-input\">\r\n                        <Translate id=\"settings.configuration.language\" />\r\n                    </InputLabel>\r\n                    <Select\r\n                        inputProps={{\r\n                            id: \"language-input\",\r\n                        }}\r\n                        style={{ width: \"100%\" }}\r\n                        value={activeLanguage === undefined ? \"en\" : activeLanguage.code}\r\n                        onChange={ev => setActiveLanguage(ev.target.value)}\r\n                    >\r\n                        {languages.map(lang => (\r\n                            <MenuItem key={lang.code} value={lang.code}>{lang.name}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(withLocalize(ChangeLanguage));\r\n","import { FormControlLabel, Switch, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setPreferOppositeGenders } from \"../../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    preferOppositeGenders: state.settings.preferOppositeGenders,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setPreferOppositeGenders,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\nfunction PlayerSettings({ preferOppositeGenders, setPreferOppositeGenders }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.playerSettings\" />\r\n            </Typography>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={preferOppositeGenders}\r\n                        onChange={(_, c) => setPreferOppositeGenders(c)}\r\n                    />\r\n                }\r\n                label={<Translate id=\"settings.configuration.playerSettings.pairOppositeGenders\" />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n)(PlayerSettings) as React.ComponentType;\r\n","export const socialMediaPlatforms = [\"Snapchat\", \"Instagram\", \"Facebook\"];\r\n\r\nexport const defaultSources = [\r\n    \"cards/ichundderalkohol.xml\",\r\n    \"cards/bullshitfact.xml\",\r\n    \"cards/ConversationStartersWorld.NeverHaveIEver.xml\",\r\n    \"cards/Bevil.xml\",\r\n    \"cards/ConversationStartersWorld.TruthOrDareDare.xml\",\r\n    \"cards/ConversationStartersWorld.TruthOrDareTruth.xml\",\r\n    \"cards/ConversationStartersWorld.Wyr.xml\",\r\n    \"cards/common.xml\",\r\n    \"cards/picolo/Picolo.xml\",\r\n    \"cards/picolo/Picolo.Silly.xml\",\r\n    \"cards/realfacts.xml\",\r\n];\r\n\r\nexport const slideWeights: { [key: string]: number } = {\r\n    FactSlide: 0.4,\r\n    DownSlide: 0.2,\r\n    NeverEverSlide: 0.5,\r\n    TruthOrDareSlide: 0.35,\r\n    WouldYouRatherSlide: 0.5,\r\n    DrinkSlide: 0.5,\r\n    VirusSlide: 0.25,\r\n    NoIdeaLosesSlide: 0.5,\r\n    GroupGameSlide: 0.4,\r\n    TaskSlide: 0.2,\r\n};\r\n\r\n// if a card has one of these tags and an arranged player is selected\r\n// the propability that their counterpart is selected is increased further\r\nexport const higherArrangementPropabilityTags = [\"sexual\"];\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport * as React from \"react\";\r\nimport { Typography, FormControl, Select, Input, MenuItem } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { setSocialMediaPlatform } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { socialMediaPlatforms } from \"../../../../preferences\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    platform: state.settings.socialMediaPlatform,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSocialMediaPlatform,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction ChangeLanguage({ platform, setSocialMediaPlatform }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.socialMediaPlatform\" />\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n                <Translate id=\"settings.configuration.socialMediaPlatform.description\" />\r\n            </Typography>\r\n            <FormControl>\r\n                <Select style={{width: 200, marginTop: 10}}\r\n                    value={platform}\r\n                    onChange={ev => setSocialMediaPlatform(ev.target.value)}\r\n                    input={<Input />}\r\n                >\r\n                    {socialMediaPlatforms.map(x => (\r\n                        <MenuItem key={x} value={x}>\r\n                            {x}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(ChangeLanguage));\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Slider } from \"@material-ui/lab\";\r\nimport * as React from \"react\";\r\n\r\ninterface Props {\r\n    items: Weighted<string>[];\r\n    onChangeWeight: (item: Weighted<string>) => void;\r\n}\r\n\r\nclass ItemPreferences extends React.Component<Props> {\r\n    render() {\r\n        const { items, onChangeWeight } = this.props;\r\n\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {items.map(x => \r\n                        <tr key={x.value}>\r\n                            <td>\r\n                                <Typography\r\n                                    style={{\r\n                                        opacity: x.weight === 0 ? 0.5 : 1,\r\n                                    }}\r\n                                >\r\n                                    {x.value}\r\n                                </Typography>\r\n                            </td>\r\n                            <td style={{width: \"100%\"}}>\r\n                                <Slider\r\n                                    max={1}\r\n                                    min={0}\r\n                                    style={{ padding: \"20px 0 20px 5px\", width: \"100%\" }}\r\n                                    step={0.05}\r\n                                    value={x.weight}\r\n                                    onChange={(_, v) =>\r\n                                        onChangeWeight({ value: x.value, weight: v })\r\n                                    }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n\r\n        // return (\r\n        //     <Grid container>\r\n        //         {items.map(x => (\r\n        //             <Grid key={x.value} item container alignItems=\"center\">\r\n        //                 <Grid item>\r\n        //                     <Typography\r\n        //                         style={{\r\n        //                             opacity: x.weight === 0 ? 0.5 : 1,\r\n        //                         }}\r\n        //                     >\r\n        //                         {x.value}\r\n        //                     </Typography>\r\n        //                 </Grid>\r\n        //                 <Grid item xs={8} lg={9}>\r\n        //                     <Slider\r\n        //                         max={1}\r\n        //                         min={0}\r\n        //                         style={{ padding: \"20px 0\" }}\r\n        //                         step={0.05}\r\n        //                         value={x.weight}\r\n        //                         onChange={(_, v) => onChangeWeight({ value: x.value, weight: v })}\r\n        //                     />\r\n        //                 </Grid>\r\n        //             </Grid>\r\n        //         ))}\r\n        //     </Grid>\r\n        // );\r\n    }\r\n}\r\n\r\nexport default ItemPreferences;\r\n","export function percentageFixedTotal<T>(\r\n    values: T[],\r\n    getPercentage: (x: T) => number,\r\n    target: number,\r\n): Array<{ value: T; part: number }> {\r\n    // https://stackoverflow.com/a/13483486\r\n    const percentageValues = values.map(value => ({ value, percent: getPercentage(value) }));\r\n    const total = percentageValues.reduce((x, y) => x + y.percent, 0);\r\n\r\n    const result = new Array<{ value: T; part: number }>();\r\n    let sum = 0;\r\n    let prevBaseline = 0;\r\n\r\n    for (let i = 0; i < percentageValues.length; i++) {\r\n        const {value, percent} = percentageValues[i];\r\n\r\n        sum += percent / total * target;\r\n        const sumRounded = Math.round(sum);\r\n\r\n        result.push({ value, part: sumRounded - prevBaseline });\r\n        prevBaseline = sumRounded;\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setSlideWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slides: state.settings.slides,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSlideWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SlidePreferences({ slides, setSlideWeight }: Props) {\r\n    const totalCards = 50;\r\n    const slidePercentages = percentageFixedTotal(slides, x => x.weight, totalCards);\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.slides\" />\r\n            </Typography>\r\n            <ItemPreferences items={slides} onChangeWeight={x => setSlideWeight(x)} />\r\n            <Typography>\r\n                <Translate\r\n                    id=\"settings.configuration.slidesProjection\"\r\n                    data={{ count: totalCards }}\r\n                />\r\n                {slidePercentages.map((x, i) => (\r\n                    <React.Fragment key={x.value.value}>\r\n                        <b style={{fontWeight: \"bolder\"}}>{x.value.value}</b>: {x.part}\r\n                        {i < slidePercentages.length - 1 ? \", \" : null}\r\n                    </React.Fragment>\r\n                ))}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(SlidePreferences));\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setTagWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    tags: state.settings.tags,\r\n    decks: state.settings.sources,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setTagWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction TagPreferences({ tags, decks, setTagWeight }: Props) {\r\n    const allTags = _.uniq(decks.flatMap(x => x.tags));\r\n    const weights = allTags.map(x => tags.find(y => y.value === x) || { value: x, weight: 0.5 });\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.tags\" />\r\n            </Typography>\r\n            <ItemPreferences items={weights} onChangeWeight={x => setTagWeight(x)} />\r\n            {weights.length === 0 ? (\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    <Translate id=\"settings.configuration.tags.none\" />\r\n                </Typography>\r\n            ) : (\r\n                undefined\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(TagPreferences));\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions\";\r\n\r\nconst dispatchProps = {\r\n    resetWeights: actions.resetWeights,\r\n    resetAll: actions.resetAll,\r\n};\r\n\r\ntype Props = typeof dispatchProps\r\n\r\nfunction ResetSettings({resetWeights, resetAll}: Props) {\r\n    return (\r\n        <Grid container spacing={16}>\r\n            <Grid item>\r\n                <Button color=\"secondary\" variant=\"outlined\" onClick={resetWeights}>\r\n                    <Translate id=\"settings.configuration.resetWeights\" />\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={resetAll}>\r\n                    <Translate id=\"settings.configuration.reset\" />\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default connect(null, dispatchProps)(ResetSettings);\r\n","import * as React from \"react\";\r\nimport ChangeLanguage from \"./configuration/ChangeLanguage\";\r\nimport PlayerPairing from \"./configuration/PlayerPairing\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SocialMediaPlatform from \"./configuration/SocialMediaPlatform\";\r\nimport SlidePreferences from \"./configuration/SlidePreferences\";\r\nimport TagsPerferences from \"./configuration/TagsPerferences\";\r\nimport ResetSettings from \"./configuration/ResetSettings\";\r\n\r\nclass Configuration extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid style={{ maxWidth: 800 }}>\r\n                <Grid container spacing={32} direction=\"column\">\r\n                    <Grid item style={{ marginBottom: 20 }}>\r\n                        <ChangeLanguage />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <PlayerPairing />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SocialMediaPlatform />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SlidePreferences />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TagsPerferences />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ResetSettings />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Configuration;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Configuration from \"../features/settings/components/Configuration\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            padding: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction ConfigurationComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.fillRemaining} style={{ overflowX: \"hidden\" }}>\r\n                <Configuration />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ConfigurationComponent);\r\n","import { ParsingOptions } from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { ThemeStyle } from \"@material-ui/core/styles/createTypography\";\r\n\r\nconst Header = (style: ThemeStyle) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant={style}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst SizedHeader = (fontSize: string) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant=\"h6\" style={{ fontSize }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nfunction Paragraph({ children, ...props }: any) {\r\n    return (\r\n        <Typography {...props} color=\"inherit\" component=\"p\">\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Code({ children, ...props }: any) {\r\n    return (\r\n        <Typography {...props} color=\"inherit\" component=\"p\" style={{fontSize: \"0.8em\", fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New',monospace\"}}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst SizedBlock = (fontSize: string) => ({ children, ...props }: any) => (\r\n        <Typography\r\n            color=\"inherit\"\r\n            {...props}\r\n            style={{ marginBlockStart: 5, marginBlockEnd: 5, fontSize }}\r\n        >\r\n            {children}\r\n        </Typography>)\r\n;\r\n\r\nconst BlockQuote = ({children, ...props}: any) => <div {...props} style={{borderLeft: \"1px solid white\", paddingLeft: 16}}>{children}</div>\r\n\r\nexport const markdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: Paragraph,\r\n            props: {},\r\n        },\r\n        h1: {\r\n            component: Header(\"h5\"),\r\n            props: {},\r\n        },\r\n        h2: {\r\n            component: Header(\"h6\"),\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: SizedHeader(\"1.2em\"),\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: SizedHeader(\"1.1em\"),\r\n            props: {},\r\n        },\r\n        code: {\r\n            component: Code,\r\n            props: {}\r\n        }\r\n    },\r\n};\r\n\r\nexport const cardMarkdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: SizedBlock(\"1em\"),\r\n            props: {},\r\n        },\r\n        h1: {\r\n            component: Header(\"h5\"),\r\n            props: {},\r\n        },\r\n        h2: {\r\n            component: Header(\"h6\"),\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: SizedHeader(\"1.2em\"),\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: SizedHeader(\"1.1em\"),\r\n            props: {},\r\n        },\r\n        h5: {\r\n            component: SizedHeader(\"1.08em\"),\r\n            props: {},\r\n        },\r\n        h6: {\r\n            component: SizedHeader(\"1.05em\"),\r\n            props: {},\r\n        },\r\n        blockquote: {\r\n            component: BlockQuote,\r\n            props: {},\r\n        },\r\n    },\r\n};\r\n","import { LocalizeContextProps } from \"react-localize-redux\";\r\nimport { Translator } from \"GameModels\";\r\n\r\nexport function toTranslator(localize: LocalizeContextProps): Translator {\r\n    return {\r\n        languageCode: localize.activeLanguage.code,\r\n        translate: x => localize.translate(x) as string,\r\n    }\r\n}","import { Theme } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nexport function rootStyle(): CSSProperties {\r\n    return {\r\n        backgroundColor: \"transparent\",\r\n        height: \"100%\",\r\n        fontSize: 22,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        \"-webkit-tap-highlight-color\": \"rgba(255, 255, 255, 0)\",\r\n    };\r\n}\r\n\r\nexport function contentStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            width: \"100%\",\r\n            marginLeft: 30,\r\n            marginRight: 30,\r\n            fontSize: 18,\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"80%\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"60%\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function headerStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"2em\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function smallHeaderStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        color: \"white\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"1.5em\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function hidden(): CSSProperties {\r\n    return {\r\n        visibility: \"hidden\",\r\n    };\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated as animatedDom, useSpring } from \"react-spring\";\r\nimport { animated, Keyframes } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\n\r\nconst color = \"#2980b9\";\r\nconst progressColor = \"#3498db\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as OpeningSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...baseStyles.rootStyle(),\r\n            backgroundColor: color,\r\n            position: \"relative\",\r\n        },\r\n        rootProgress: {\r\n            height: \"100%\",\r\n            backgroundColor: progressColor,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            zIndex: 5,\r\n        },\r\n        content: {\r\n            ...baseStyles.contentStyle(theme),\r\n            zIndex: 10,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                width: \"100%\",\r\n                marginLeft: 30,\r\n                marginRight: 30,\r\n                fontSize: 16,\r\n            },\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction OpeningSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state, translate } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const { continuationDate } = state;\r\n    const remaining = Math.abs(+continuationDate - Date.now());\r\n\r\n    const Container = Keyframes.Spring(async (next: any) => {\r\n        await next({\r\n            from: { width: \"0%\" },\r\n            width: \"100%\",\r\n            config: {\r\n                duration: remaining,\r\n            },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: progressColor },\r\n            backgroundColor: color,\r\n            config: { duration: 200 },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: color },\r\n            backgroundColor: progressColor,\r\n            config: { duration: 200 },\r\n        });\r\n    }) as any;\r\n\r\n    const tapToContinueProps = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: remaining,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            onClick={() =>\r\n                (new Date() > continuationDate || process.env.NODE_ENV === \"development\") &&\r\n                nextSlide(toTranslator(props))\r\n            }\r\n        >\r\n            <Container native>\r\n                {(props: any) => <animated.div className={classes.rootProgress} style={props} />}\r\n            </Container>\r\n            <div className={classes.content}>\r\n                <Typography variant=\"h5\" color=\"inherit\" className={classes.header} gutterBottom>\r\n                    <Translate id=\"game.welcome\" />\r\n                </Typography>\r\n                <Markdown\r\n                    children={translate(\"game.openingInfo\") as string}\r\n                    options={cardMarkdownOptions}\r\n                />\r\n                <animatedDom.div style={tapToContinueProps}>\r\n                    <Typography style={{ color: \"white\", marginTop: 20 }} variant=\"h6\">\r\n                        <Translate id=\"game.tapToContinue\" />\r\n                    </Typography>\r\n                </animatedDom.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(OpeningSlideComponent) as React.ComponentType;\r\n\r\ninterface OpeningSlideState {\r\n    continuationDate: Date;\r\n}\r\n\r\nexport class OpeningSlide implements SlidePresenter {\r\n    slideType = \"OpeningSlide\";\r\n    requiredCards = [];\r\n    backgroundColor = color;\r\n\r\n    initialize(): RootAction[] {\r\n        const date = new Date();\r\n        date.setSeconds(date.getSeconds() + 5);\r\n\r\n        return [\r\n            this.setSlideState({\r\n                continuationDate: date,\r\n            }),\r\n        ];\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setSlideState(state: OpeningSlideState): RootAction {\r\n        return actions.setSlideState({ state, insights: null });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","// Source: https://github.com/vasilevich/react-fullscreen-crossbrowser (MIT)\r\n\r\nconst key: any = {\r\n    fullscreenEnabled: 0,\r\n    fullscreenElement: 1,\r\n    requestFullscreen: 2,\r\n    exitFullscreen: 3,\r\n    fullscreenchange: 4,\r\n    fullscreenerror: 5,\r\n};\r\n\r\nconst webkit = [\r\n    \"webkitFullscreenEnabled\",\r\n    \"webkitFullscreenElement\",\r\n    \"webkitRequestFullscreen\",\r\n    \"webkitExitFullscreen\",\r\n    \"webkitfullscreenchange\",\r\n    \"webkitfullscreenerror\",\r\n];\r\n\r\nconst moz = [\r\n    \"mozFullScreenEnabled\",\r\n    \"mozFullScreenElement\",\r\n    \"mozRequestFullScreen\",\r\n    \"mozCancelFullScreen\",\r\n    \"mozfullscreenchange\",\r\n    \"mozfullscreenerror\",\r\n];\r\n\r\nconst ms = [\r\n    \"msFullscreenEnabled\",\r\n    \"msFullscreenElement\",\r\n    \"msRequestFullscreen\",\r\n    \"msExitFullscreen\",\r\n    \"MSFullscreenChange\",\r\n    \"MSFullscreenError\",\r\n];\r\n\r\n// so it doesn't throw if no window or document\r\nconst document: any =\r\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\" ? window.document : {};\r\n\r\nconst vendor =\r\n    (\"fullscreenEnabled\" in document && Object.keys(key)) ||\r\n    (webkit[0] in document && webkit) ||\r\n    (moz[0] in document && moz) ||\r\n    (ms[0] in document && ms) ||\r\n    [];\r\n\r\nexport default class Fullscreen {\r\n    static requestFullscreen(element: any) {\r\n        return element[vendor[key.requestFullscreen]]();\r\n    }\r\n    static requestFullscreenFunction(element: any) {\r\n        return element[vendor[key.requestFullscreen]];\r\n    }\r\n    static get exitFullscreen() {\r\n        return document[vendor[key.exitFullscreen]].bind(document);\r\n    };\r\n    static addEventListener(type: any, handler: any, options: any) {\r\n        return document.addEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static removeEventListener(type: any, handler: any, options: any) {\r\n        return document.removeEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static get fullscreenEnabled() {\r\n        return Boolean(document[vendor[key.fullscreenEnabled]]);\r\n    }\r\n    static get fullscreenElement() {\r\n        return document[vendor[key.fullscreenElement]];\r\n    }\r\n    static get onfullscreenchange() {\r\n        return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenchange(handler) {\r\n        document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler;\r\n    }\r\n    static get onfullscreenerror() {\r\n        return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenerror(handler) {\r\n        document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler;\r\n    }\r\n}\r\n","import { createStyles, IconButton, ListItemIcon, Menu, MenuItem, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport Fullscreen from \"@utils/fullscreen\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component, ComponentType } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\n\r\nconst styles = createStyles({\r\n    button: {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles> &\r\n    RouteComponentProps;\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n    activeFollowUp: state.game.activeFollowUp,\r\n    selectedCard: state.game.selectedCard,\r\n});\r\n\r\nconst dispatchProps = {};\r\n\r\ninterface State {\r\n    anchorEl: HTMLElement | null;\r\n    isFullscreen: boolean;\r\n}\r\n\r\nclass GameOptions extends Component<Props, State> {\r\n    readonly state: State = {\r\n        anchorEl: null,\r\n        isFullscreen: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        Fullscreen.onfullscreenchange = () => {\r\n            this.setState(state => ({ ...state, isFullscreen: Fullscreen.fullscreenElement }));\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Fullscreen.onfullscreenchange = null;\r\n    }\r\n\r\n    handleMenuOpenClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleNavigate = (path: string) => {\r\n        this.handleClose();\r\n        this.props.history.push(`/play/game/${path}`);\r\n    };\r\n\r\n    toggleFullscreen = () => {\r\n        const { isFullscreen } = this.state;\r\n        if (isFullscreen) {\r\n            Fullscreen.exitFullscreen();\r\n        } else {\r\n            Fullscreen.requestFullscreen(window.document.documentElement);\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n    \r\n    handleExit = () => {\r\n        this.handleClose();\r\n        this.props.history.push(\"/play\");\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl, isFullscreen } = this.state;\r\n        const isOpen = anchorEl !== null;\r\n\r\n        return (\r\n            <div>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={this.handleMenuOpenClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={isOpen}\r\n                    onClose={this.handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => this.handleNavigate(\"settings\")}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.settings\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => this.handleNavigate(\"insights\")}>\r\n                        <ListItemIcon>\r\n                            <DonutLargeIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.insights\" />\r\n                    </MenuItem>\r\n                    {/* <MenuItem onClick={this.handleClose} disabled={selectedCard === null}>\r\n                        <ListItemIcon>\r\n                            <FeedbackIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.reportCard\" />\r\n                    </MenuItem> */}\r\n                    <MenuItem onClick={this.toggleFullscreen}>\r\n                        <ListItemIcon>\r\n                            {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\r\n                        </ListItemIcon>\r\n                        <Translate id={isFullscreen ? \"game.options.exitFullscreen\" : \"game.options.fullscreen\"} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleExit}>\r\n                        <ListItemIcon>\r\n                            <CloseIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.exit\" />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withLocalize,\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withRouter,\r\n)(GameOptions) as ComponentType;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, createStyles, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slide: state.game.selectedSlide,\r\n    slideInsights: state.game.slideInsights,\r\n    playerInsights: state.game.playerInsights,\r\n    players: state.play.players,\r\n    cardRef: state.game.selectedCard,\r\n});\r\n\r\nconst styles = createStyles({\r\n    section: {\r\n        marginTop: 10,\r\n    },\r\n    scrollableTable: {\r\n        overflow: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    tableCellNoBreak: {\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles>;\r\n\r\nfunction renderPredefinedPlayers({ playerInsights, players }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography>\r\n                <Translate id=\"insights.predefinedPlayers\" />\r\n                {\": \"}\r\n                {playerInsights!.predefined\r\n                    .map(x => players.find(y => y.id === x))\r\n                    .filter(x => x != null)\r\n                    .map(x => x!.name)\r\n                    .join(\", \")}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderPlayerInsights(props: Props) {\r\n    const { playerInsights, players, classes } = props;\r\n    return (\r\n        <div className={classes.scrollableTable}>\r\n            {playerInsights!.predefined.length > 0 ? renderPredefinedPlayers(props) : null}\r\n            {playerInsights!.rounds.map((x, i) => {\r\n                const statistics = percentageFixedTotal(x, x => x.weight, 1000);\r\n                return (\r\n                    <table key={i}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className={classes.tableCellNoBreak}>\r\n                                    <Typography>\r\n                                        <Translate id=\"insights.player\" data={{ number: i + 1 }} />:\r\n                                    </Typography>\r\n                                </td>\r\n                                {statistics.map(y => {\r\n                                    const player = players.find(p => p.id === y.value.playerId);\r\n                                    let element: JSX.Element;\r\n                                    if (player === undefined) {\r\n                                        element = (\r\n                                            <span>\r\n                                                <i>\r\n                                                    <Translate id=\"insights.playerRemoved\" />\r\n                                                </i>{\" \"}\r\n                                                ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    } else {\r\n                                        element = (\r\n                                            <span>\r\n                                                {player.name} ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    }\r\n\r\n                                    return (\r\n                                        <td key={y.value.playerId} style={{ paddingLeft: 10 }}>\r\n                                            <Typography>\r\n                                                {conditionalBold(element, y.value.chosen)}\r\n                                            </Typography>\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction conditionalBold(element: JSX.Element, isBold: boolean): JSX.Element {\r\n    if (isBold) {\r\n        return <b>{element}</b>;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nfunction renderSlideWeights({ slide, slideInsights }: Props) {\r\n    const slides = slideInsights!.weights;\r\n    const statistics = percentageFixedTotal(slides, x => x.weight, 1000);\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {statistics.map(x => (\r\n                    <tr key={x.value.value}>\r\n                        <td>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.value.value}</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                        <td style={{ paddingLeft: 10 }}>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.part / 10}%</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nclass InsightsCurrentSlide extends Component<Props> {\r\n    render() {\r\n        const { playerInsights, classes, cardRef, slideInsights } = this.props;\r\n        if (slideInsights === null) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.currentSlide\" />\r\n                </Typography>\r\n                <Typography>\r\n                    <Translate id=\"insights.currentCard\" />\r\n                    {\": \"}\r\n                    {cardRef === null ? (\r\n                        <i>\r\n                            <Translate id=\"insights.noCard\" />\r\n                        </i>\r\n                    ) : (\r\n                        <span>\r\n                            <Translate\r\n                                id=\"insights.cardInfo\"\r\n                                data={{\r\n                                    name: cardRef.card.type,\r\n                                    id: cardRef.card.id,\r\n                                    wp:\r\n                                        cardRef.card.willPower === undefined ? (\r\n                                            <Translate id=\"insights.universal\" />\r\n                                        ) : (\r\n                                            cardRef.card.willPower\r\n                                        ),\r\n                                    url: cardRef.deckUrl,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    )}\r\n                </Typography>\r\n                {renderSlideWeights(this.props)}\r\n\r\n                <Typography variant=\"h6\" className={classes.section}>\r\n                    <Translate id=\"insights.playerSelection\" />\r\n                </Typography>\r\n                {playerInsights === null ? (\r\n                    <Typography>\r\n                        <i>\r\n                            <Translate id=\"insights.noPlayers\" />\r\n                        </i>\r\n                    </Typography>\r\n                ) : (\r\n                    renderPlayerInsights(this.props)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsCurrentSlide) as React.ComponentType;\r\n","import { createStyles, FormControlLabel, FormGroup, Switch, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setWillPower, setWillPowerLocked } from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n    isLocked: state.game.isWillPowerLocked,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n};\r\n\r\nconst styles = \r\n    createStyles({\r\n        toggleContainer: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & WithStyles<typeof styles>;\r\n\r\nfunction InsightsWillPowerView({\r\n    currentWillPower,\r\n    isLocked,\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n    classes,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                <Translate id=\"insights.willPower\" />\r\n            </Typography>\r\n            <div className={classes.toggleContainer}>\r\n                <ToggleButtonGroup\r\n                    exclusive\r\n                    value={currentWillPower}\r\n                    onChange={(_, y) => setWillPower(y)}\r\n                    children={[1, 2, 3, 4, 5].map(x => (\r\n                        <ToggleButton key={x} value={x}>\r\n                            {x}\r\n                        </ToggleButton>\r\n                    ))}\r\n                />\r\n            </div>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch checked={isLocked} onChange={(_, x) => setWillPowerLocked(x)} />\r\n                    }\r\n                    label={<Translate id=\"insights.lockWillPower\" />}\r\n                />\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsWillPowerView) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { CardDeck } from \"@core/card-deck\";\r\n\r\nexport class Insights {\r\n    public playerSelection: PlayerSelectionInsights | null = null;\r\n    public slideWeights: SlideSelectionInsights | null  = null;\r\n}\r\n\r\nexport interface PlayerSelectionInsights {\r\n    predefined: string[];\r\n    rounds: Array<PlayerSelection[]>;\r\n}\r\n\r\nexport interface SlideSelectionInsights {\r\n    weights: Weighted<string>[];\r\n}\r\n\r\nexport interface PlayerSelection {\r\n    chosen: boolean;\r\n    weight: number;\r\n    playerId: string;\r\n}\r\n\r\nexport interface CardsInsight {\r\n    decks: Weighted<CardDeck>[];\r\n    willPower: Weighted<{willPower: number | null, count: number}>[];\r\n    totalCards: number;\r\n}\r\n","import { Weighted } from \"./../weighted\";\r\n\r\nexport type RNG = () => number;\r\nconst defaultRandomGenerator: RNG = () => Math.random();\r\n\r\nexport function selectRandomWeighted<T>(\r\n    items: T[],\r\n    getWeight: (item: T) => number,\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    if (items.length === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    const weights: Array<{ item: T; weight: number }> = [];\r\n    let totalWeight: number = 0;\r\n    for (const item of items) {\r\n        const weight = getWeight(item);\r\n        weights.push({ item, weight });\r\n\r\n        totalWeight += weight;\r\n    }\r\n\r\n    let randomWeight = totalWeight * random();\r\n    for (const { item, weight } of weights) {\r\n        if (weight === 0) {\r\n            continue;\r\n        }\r\n        randomWeight -= weight;\r\n\r\n        if (randomWeight <= 0) {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function selectRandomFromWeightedList<T>(\r\n    items: Weighted<T>[],\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    const result = selectRandomWeighted(items, item => item.weight, random);\r\n    if (result === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    return result.value;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { Weighted } from \"@core/weighted\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { SelectionAlgorithm } from \"./selection-algorithm\";\r\nimport { RNG, selectRandomFromWeightedList, selectRandomWeighted } from \"./utils\";\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport abstract class SelectionAlgorithmBase implements SelectionAlgorithm {\r\n    protected readonly random: RNG;\r\n\r\n    constructor(protected readonly status: GameStatus, random: RNG) {\r\n        this.random = random;\r\n    }\r\n\r\n    public abstract selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[];\r\n    public abstract selectNextSlide(availableSlides: SlideRegistration[]): string | undefined;\r\n    public abstract selectCard(cardType: string): CardRef;\r\n    public abstract getSips(min: number): number;\r\n    public abstract recomputeWillPower(memory: string[]): { willPower: number; memory: string[] };\r\n\r\n    public getRandom(): number {\r\n        return this.random();\r\n    }\r\n\r\n    public selectRandomWeighted<T>(items: T[], getWeight: (item: T) => number): T | undefined {\r\n        return selectRandomWeighted(items, getWeight, () => this.random());\r\n    }\r\n\r\n    protected selectRandomFromWeightedList<T>(items: Weighted<T>[]): T | undefined {\r\n        return selectRandomFromWeightedList(items, () => this.random());\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport _ from \"lodash\";\r\nimport { higherArrangementPropabilityTags } from \"../../preferences\";\r\nimport { CardDeck } from \"../card-deck\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { Gender, PlayerInfo } from \"../player-info\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { Weighted } from \"../weighted\";\r\nimport { CardsInsight, Insights, PlayerSelection, PlayerSelectionInsights } from \"./insights\";\r\nimport { SelectionAlgorithmBase } from \"./selection-algorithm-base\";\r\n\r\nexport class MelinaAlgorithm extends SelectionAlgorithmBase {\r\n    /** the percentage of cards that were played from one deck once the cards get weighted much lower */\r\n    private readonly deckExhaustionLimit = 0.1;\r\n\r\n    public readonly insights: Insights = new Insights();\r\n\r\n    public getAllCardDeckStatistics(cardType: string | null = null): CardsInsight {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n        const deckWeights: { [deckUrl: string]: number } = {};\r\n        const willPowerWeights: { [willPower: number]: number } = {};\r\n        const willPowerCounter: { [willPower: number]: number } = {};\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const deck of this.status.decks) {\r\n            deckWeights[deck.url] = 0;\r\n        }\r\n\r\n        for (const card of allCards) {\r\n            const { value, weight } = card;\r\n\r\n            const deck = this.status.decks.find(x => x.url === value.deckUrl)!;\r\n\r\n            deckWeights[value.deckUrl] += weight * deck.weight;\r\n\r\n            const willPower = value.card.willPower || 0;\r\n            if (willPowerCounter[willPower] === undefined) {\r\n                willPowerWeights[willPower] = 0;\r\n                willPowerCounter[willPower] = 0;\r\n            }\r\n\r\n            willPowerWeights[willPower] += weight * deck.weight;\r\n            willPowerCounter[willPower] += 1;\r\n        }\r\n\r\n        const willPowerWeightsArray: Weighted<{\r\n            willPower: number | null;\r\n            count: number;\r\n        }>[] = Object.keys(willPowerWeights).map(propName => {\r\n            const willPower = Number(propName);\r\n            return {\r\n                value: {\r\n                    willPower: willPower === 0 ? null : willPower,\r\n                    count: willPowerCounter[willPower],\r\n                },\r\n                weight: willPowerWeights[willPower],\r\n            };\r\n        });\r\n\r\n        const decksArray = Object.keys(deckWeights).map(url => {\r\n            const deck = this.status.decks.find(x => x.url === url)!;\r\n            return { value: deck, weight: deckWeights[url] * deck.weight };\r\n        });\r\n\r\n        return { decks: decksArray, willPower: willPowerWeightsArray, totalCards: allCards.length };\r\n    }\r\n\r\n    public selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[] {\r\n        if (playerSettings.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (playerSettings.length > this.status.players.length) {\r\n            throw new Error(\"More players were requested than available.\");\r\n        }\r\n\r\n        const forArrangement = new Array<string>();\r\n        const result: (PlayerInfo | null)[] = playerSettings.map((_, i) =>\r\n            definedPlayers.length > i ? definedPlayers[i] : null,\r\n        );\r\n\r\n        for (const player of definedPlayers.filter(x => x !== null).map(x => x!)) {\r\n            const arrangement = this.status.arrangements.find(\r\n                x => x.p1 === player.id || x.p2 === player.id,\r\n            );\r\n\r\n            if (arrangement !== undefined) {\r\n                if (arrangement.p1 === player.id) {\r\n                    forArrangement.push(arrangement.p2);\r\n                } else {\r\n                    forArrangement.push(arrangement.p1);\r\n                }\r\n            }\r\n        }\r\n\r\n        let resultCounter = 0;\r\n        const insights: PlayerSelectionInsights = {\r\n            predefined: definedPlayers.filter(x => x != null).map(x => x!.id),\r\n            rounds: [],\r\n        };\r\n\r\n        while (result.findIndex(x => x === null) !== -1) {\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                if (result[i] !== null) {\r\n                    continue;\r\n                }\r\n\r\n                const gender = playerSettings[i];\r\n                let sourceList: PlayerInfo[];\r\n\r\n                switch (gender) {\r\n                    case \"None\":\r\n                        sourceList = this.status.players;\r\n                        break;\r\n                    case \"Male\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Male\");\r\n                        break;\r\n                    case \"Female\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Female\");\r\n                        break;\r\n                    default:\r\n                        continue;\r\n                }\r\n\r\n                const source = sourceList.filter(x => !_.includes(result, x));\r\n                const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n                const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n\r\n                const selectionRoundInsights = new Array<PlayerSelection>();\r\n                const player = this.selectRandomWeighted(source, p => {\r\n                    let weight = 1;\r\n\r\n                    if (_.some(forArrangement, x => x === p.id)) {\r\n                        if (\r\n                            _.some(higherArrangementPropabilityTags, x =>\r\n                                _.some(tags, y => x === y.toLowerCase()),\r\n                            )\r\n                        ) {\r\n                            weight += source.length;\r\n                        } else {\r\n                            // everyone has ~ the weight 1\r\n                            weight += source.length * 0.5;\r\n                        }\r\n                    }\r\n\r\n                    if (gender === \"None\" && this.status.preferOppositeGenders) {\r\n                        if (malesCount > femalesCount) {\r\n                            if (p.gender === \"Female\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        } else if (femalesCount > malesCount) {\r\n                            if (p.gender === \"Male\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    selectionRoundInsights.push({ playerId: p.id, weight, chosen: false });\r\n                    return weight;\r\n                })!;\r\n\r\n                selectionRoundInsights.find(x => x.playerId === player.id)!.chosen = true;\r\n                insights.rounds.push(selectionRoundInsights);\r\n\r\n                result[i] = player;\r\n                resultCounter++;\r\n\r\n                const arrangement = this.status.arrangements.find(\r\n                    x => x.p1 === player.id || x.p2 === player.id,\r\n                );\r\n                if (arrangement !== undefined) {\r\n                    if (arrangement.p1 === player.id) {\r\n                        forArrangement.push(arrangement.p2);\r\n                    } else {\r\n                        forArrangement.push(arrangement.p1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultCounter === result.length) {\r\n                break;\r\n            }\r\n\r\n            // here we have to handle Same/Opposite genders\r\n\r\n            const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n            const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n            let dominant: Gender | null = null;\r\n\r\n            if (malesCount > femalesCount) dominant = \"Male\";\r\n            else if (femalesCount > malesCount) dominant = \"Female\";\r\n\r\n            if (dominant === null) {\r\n                // we try to change a 'Same' gender, so Same and opposite stay on different sites\r\n                // because the player gender will become dominant and opposite is always against dominant\r\n\r\n                let changed = false;\r\n                for (let i = 0; i < playerSettings.length; i++) {\r\n                    if (playerSettings[i] === \"Same\") {\r\n                        playerSettings[i] = \"None\";\r\n                        changed = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!changed) {\r\n                    // we have the problem here that we only have opposite genders left but we have no dominant gender.\r\n                    // We change the first opposite to none (so it gets filled) and all other to Same, so they will get\r\n                    // the same gender like the first item that was changed to Same\r\n\r\n                    for (let i = 0; i < playerSettings.length; i++) {\r\n                        if (playerSettings[i] === \"Opposite\") {\r\n                            if (!changed) {\r\n                                playerSettings[i] = \"None\";\r\n                                changed = true;\r\n                            } else {\r\n                                playerSettings[i] = \"Same\";\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                const gender = playerSettings[i];\r\n\r\n                switch (gender) {\r\n                    case \"Opposite\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Male\";\r\n                        } else {\r\n                            playerSettings[i] = \"Female\";\r\n                        }\r\n                        break;\r\n                    case \"Same\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Female\";\r\n                        } else {\r\n                            playerSettings[i] = \"Male\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.insights.playerSelection = insights;\r\n        return result.map(x => x!);\r\n    }\r\n\r\n    public selectCard(cardType: string): CardRef {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const card of allCards) {\r\n            const deck = this.status.decks.find(x => x.url === card.value.deckUrl)!;\r\n            card.weight *= deck.weight;\r\n        }\r\n\r\n        const selected = this.selectRandomWeighted(allCards, x => x.weight);\r\n        if (selected === undefined) {\r\n            throw new Error(\"That should not actually happen\");\r\n        }\r\n\r\n        return selected.value;\r\n    }\r\n\r\n    private boostWillPower(cards: Weighted<CardRef>[]): void {\r\n        const willPower = this.status.willPower;\r\n\r\n        const perfectCards = cards.filter(\r\n            x => x.value.card.willPower === willPower || x.value.card.willPower === willPower - 1,\r\n        );\r\n        const unplayedCards = perfectCards.filter(\r\n            x =>\r\n                this.status.cardsHistory.findIndex(\r\n                    y => y.deckUrl === x.value.deckUrl && y.card.id === x.value.card.id,\r\n                ) === -1,\r\n        );\r\n\r\n        // played cards / all cards\r\n        const percentage = (perfectCards.length - unplayedCards.length) / perfectCards.length;\r\n\r\n        // console.log(\r\n        //     `wp: ${willPower}, perfect: ${perfectCards.length}, unplayed: ${\r\n        //         unplayedCards.length\r\n        //     }, percentage: ${percentage}`,\r\n        // );\r\n\r\n        // we don't boost if we already played 10% (deckExhaustionLimit) of the cards\r\n        if (this.deckExhaustionLimit > percentage && unplayedCards.length > 50) {\r\n            const totalWeight = cards.reduce((x, y) => x + y.weight, 0);\r\n            const unplayedWeight = unplayedCards.reduce((x, y) => x + y.weight, 0);\r\n\r\n            console.log(`total: ${totalWeight}, unplayed: ${unplayedWeight}`);\r\n\r\n            const targetPercentage = 0.7;\r\n            if (totalWeight * targetPercentage > unplayedWeight) {\r\n                const factor =\r\n                    totalWeight * targetPercentage -\r\n                    unplayedWeight +\r\n                    unplayedWeight / unplayedWeight;\r\n\r\n                // const diff = (totalWeight * targetPercentage - unplayedWeight);\r\n                // const add = diff / unplayedCards.length;\r\n                console.log(\"factor: \" + factor);\r\n\r\n                // const add = (totalWeight - unplayedWeight) / perfectCards.length;\r\n                for (const perfectCard of unplayedCards) {\r\n                    perfectCard.weight = perfectCard.weight * factor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public selectNextSlide(availableSlides: SlideRegistration[]): string | undefined {\r\n        const uniqueCardTypes: string[] = [];\r\n        for (const slide of availableSlides) {\r\n            for (const cardType of slide.requestedCards) {\r\n                if (uniqueCardTypes.findIndex(x => x === cardType) === -1) {\r\n                    uniqueCardTypes.push(cardType);\r\n                }\r\n            }\r\n        }\r\n\r\n        const cardTypeRatings: { [type: string]: number } = {};\r\n        for (const cardType of uniqueCardTypes) {\r\n            const weightedDecks = this.weightCards(\r\n                this.status.decks.filter(x => x.weight !== 0),\r\n                cardType,\r\n            );\r\n\r\n            const allCards: Array<Weighted<Card>> = [];\r\n            for (const cardDeck of weightedDecks) {\r\n                allCards.push(...cardDeck.cards);\r\n            }\r\n\r\n            if (allCards.length === 0) {\r\n                cardTypeRatings[cardType] = 0;\r\n            } else {\r\n                cardTypeRatings[cardType] =\r\n                    0.75 + (0.25 * allCards.reduce((x, y) => x + y.weight, 0)) / allCards.length;\r\n            }\r\n        }\r\n\r\n        const weightedSlides: Array<Weighted<SlideRegistration>> = [];\r\n        for (const slide of availableSlides) {\r\n            const slideSettings = this.status.slides.find(x => x.value === slide.slideType);\r\n\r\n            if (slideSettings === undefined || slideSettings.weight === 0) {\r\n                continue;\r\n            }\r\n\r\n            let factor = 1;\r\n            for (const cardType of slide.requestedCards) {\r\n                factor = Math.min(cardTypeRatings[cardType], factor);\r\n            }\r\n\r\n            if (factor === 0) {\r\n                continue;\r\n            }\r\n\r\n            weightedSlides.push({ weight: factor * slideSettings.weight, value: slide });\r\n        }\r\n\r\n        if (weightedSlides.length > 2 && availableSlides.length > 2 && this.status.slidesHistory.length > 0) {\r\n            const lastSlideType = this.status.slidesHistory[0];\r\n            const lastSlide = weightedSlides.find(x => x.value.slideType === lastSlideType);\r\n            if (lastSlide !== undefined) {\r\n                lastSlide.weight = 0;\r\n            }\r\n        }\r\n\r\n        this.insights.slideWeights = {\r\n            weights: weightedSlides.map(x => ({ weight: x.weight, value: x.value.slideType })),\r\n        };\r\n\r\n        const selected = this.selectRandomWeighted(weightedSlides, slide => slide.weight);\r\n        if (selected === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return selected.value.slideType;\r\n    }\r\n\r\n    public getSips(min: number): number {\r\n        min = Math.max(min, 1);\r\n\r\n        return Math.max(min, Math.floor(this.getRandom() * 4) + 1);\r\n    }\r\n\r\n    protected weightCards(\r\n        decks: CardDeck[],\r\n        type: string | null,\r\n    ): Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> {\r\n        const filtered: CardDeck[] = decks.map(x => ({\r\n            cards: x.cards.filter(card => {\r\n                if (type !== null && card.type !== type) {\r\n                    return false;\r\n                }\r\n\r\n                return (\r\n                    card.tags.length === 0 ||\r\n                    card.tags.findIndex(x => {\r\n                        const weightedTag = this.status.tags.find(y => y.value === x);\r\n                        return weightedTag !== undefined && weightedTag.weight === 0;\r\n                    }) === -1\r\n                );\r\n            }),\r\n            url: x.url,\r\n            weight: x.weight,\r\n        }));\r\n\r\n        // cards are now of the correct type and playable\r\n        const totalCards = filtered.reduce((x, y) => x + y.cards.length, 0);\r\n\r\n        // every card should be rated by x when 0 < x <= 1\r\n        const result: Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> = [];\r\n\r\n        const willPower = this.status.willPower;\r\n\r\n        for (const deck of filtered) {\r\n            // cards from this deck that were already played\r\n            const cardsPlayed = this.status.cardsHistory.filter(x => x.deckUrl === deck.url);\r\n\r\n            // compute the deck exhaustion factor\r\n            let exhaustionFactor: number;\r\n\r\n            const percentage = cardsPlayed.length / deck.cards.length;\r\n            if (percentage > this.deckExhaustionLimit) {\r\n                // cubic reduction\r\n                exhaustionFactor = Math.pow(Math.max(1.1 - percentage, 0.1), 2) * 0.5;\r\n            } else {\r\n                exhaustionFactor = 1;\r\n            }\r\n\r\n            const weightedCards: Array<Weighted<Card>> = [];\r\n            for (const card of deck.cards) {\r\n                const willPowerRating = this.rateWillPower(card.willPower, willPower);\r\n                const historyFactor = this.getHistoryFactor(card.id, cardsPlayed, totalCards);\r\n                const tagsFactor = this.getTagsFactor(card.tags, this.status.tags);\r\n                const weight = exhaustionFactor * willPowerRating * historyFactor * tagsFactor;\r\n                if (weight === 0) {\r\n                    continue;\r\n                }\r\n\r\n                weightedCards.push({\r\n                    value: card,\r\n                    weight: weight,\r\n                });\r\n            }\r\n\r\n            result.push({ deck, cards: weightedCards });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public recomputeWillPower(memory: string[]): { willPower: number; memory: string[] } {\r\n        const addedMemory = new Array<string>();\r\n        const now = new Date();\r\n        let result = this.status.willPower;\r\n\r\n        if (!_.includes(memory, \"AFTER_10\") && (now.getHours() > 22 || now.getHours() < 8)) {\r\n            result++;\r\n            addedMemory.push(\"AFTER_10\");\r\n        }\r\n\r\n        const slidesCount = this.status.slidesHistory.length;\r\n        if (slidesCount % 12 === 0 && slidesCount !== 0) {\r\n            const id = slidesCount / 12;\r\n            if (!_.includes(memory, `SLIDES_${id}`)) {\r\n                result++;\r\n                addedMemory.push(`SLIDES_${id}`);\r\n            }\r\n        }\r\n\r\n        if (result > 5) {\r\n            result = 5;\r\n        }\r\n\r\n        return { willPower: result, memory: addedMemory };\r\n    }\r\n\r\n    protected getTagsFactor(tags: string[], tagWeights: Array<Weighted<string>>) {\r\n        const weights = tags\r\n            .map(x => tagWeights.find(y => y.value === x))\r\n            .filter(x => x !== undefined)\r\n            .map(x => x!.weight);\r\n        if (weights.length > 0) {\r\n            return Math.min(...weights);\r\n        }\r\n        return 0.5;\r\n    }\r\n\r\n    /** return a value between 0 and 1 that returns 1 if the card was never played and a smaller number if the card was played recently */\r\n    protected getHistoryFactor(id: string, history: CardRef[], totalCards: number) {\r\n        const historyPosition = history.findIndex(x => x.card.id === id);\r\n        if (historyPosition === -1) {\r\n            return 1;\r\n        }\r\n\r\n        if (historyPosition > totalCards) {\r\n            return 0;\r\n        }\r\n\r\n        return historyPosition / totalCards;\r\n    }\r\n\r\n    /** return a value between 0 and 1 for the given will power */\r\n    protected rateWillPower(cardWillPower: number | undefined, willPower: number) {\r\n        if (cardWillPower === undefined) {\r\n            return 0.75;\r\n        }\r\n\r\n        // --- --- --- ||| --- --- --- ---\r\n        // 0.5 .75 .75  1  .15  0   0   0\r\n\r\n        if (cardWillPower === willPower) {\r\n            return 1;\r\n        }\r\n\r\n        if (cardWillPower > willPower) {\r\n            const result = 0.15 - (cardWillPower - willPower) * 0.1;\r\n            return result < 0 ? 0 : result;\r\n        }\r\n\r\n        return 0.5;\r\n    }\r\n\r\n    protected verifyPlayerSpecification(\r\n        players: PlayerInfo[],\r\n        specification: PlayerSetting[],\r\n    ): boolean {\r\n        if (specification.length > players.length) {\r\n            return false;\r\n        }\r\n\r\n        const specificationMales = specification.filter(x => x.gender === \"Male\").length;\r\n        const actualMales = players.filter(x => x.gender === \"Male\").length;\r\n\r\n        if (specificationMales > actualMales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationFemales = specification.filter(x => x.gender === \"Female\").length;\r\n        const actualFemales = players.filter(x => x.gender === \"Female\").length;\r\n        if (specificationFemales > actualFemales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationOpposite = specification.filter(x => x.gender === \"Opposite\").length;\r\n        if (specificationOpposite > Math.min(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        const specificationSame = specification.filter(x => x.gender === \"Same\").length;\r\n        if (specificationSame + 1 > Math.max(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Card } from \"./cards/card\";\r\nimport { CardParserFactory } from \"./parsing/card-parser-factory\";\r\n\r\nexport class CardsLoader {\r\n    private readonly domParser = new DOMParser();\r\n\r\n    constructor(\r\n        private requestFile: (url: string) => Promise<string>,\r\n        private parserFactory: CardParserFactory,\r\n    ) {}\r\n\r\n    public async loadFromUrl(url: string): Promise<Card[]> {\r\n        const result: Card[] = [];\r\n\r\n        await this.loadFile(url, result, undefined);\r\n        return result;\r\n    }\r\n\r\n    private async loadFile(url: string, result: Card[], requestedCards?: string[]): Promise<void> {\r\n        const xml = await this.requestFile(url);\r\n        \r\n        // the DOMParser doesn't like XML docs without a Root element\r\n        const xmlDoc = this.domParser.parseFromString(\"<Root>\" + xml + \"</Root>\", \"text/xml\");\r\n\r\n        const cardElements = xmlDoc.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < cardElements.length; i++) {\r\n            const xmlElement = cardElements[i];\r\n\r\n            if (xmlElement.parentElement !== xmlDoc.documentElement) {\r\n                continue;\r\n            }\r\n\r\n            if (xmlElement.nodeName === \"DeckReference\") {\r\n                await this.parseDeckReference(xmlElement, result, requestedCards);\r\n                continue;\r\n            }\r\n\r\n            const parser = this.parserFactory.createParser(xmlElement.nodeName);\r\n            if (parser === undefined) {\r\n                console.error(\r\n                    `The card ${xmlElement.nodeName} could not be parsed. No parser found.`,\r\n                );\r\n                continue;\r\n            }\r\n\r\n            const card = parser.deserialize(xmlElement);\r\n            if (requestedCards !== undefined && requestedCards.indexOf(card.id) === -1) {\r\n                continue;\r\n            }\r\n\r\n            result.push(card);\r\n        }\r\n    }\r\n\r\n    private parseDeckReference(\r\n        xmlElement: Element,\r\n        result: Card[],\r\n        requestedCards?: string[],\r\n    ): Promise<void> {\r\n        const url = xmlElement.getAttribute(\"url\");\r\n        if (url === null) {\r\n            throw new Error(\"The url on a deck reference must not be null.\");\r\n        }\r\n\r\n        const referenceRequests: string[] = [];\r\n\r\n        const cardRefs = xmlElement.getElementsByTagName(\"CardRef\");\r\n        for (let i = 0; i < cardRefs.length; i++) {\r\n            const cardRef = cardRefs[i];\r\n\r\n            const idAttr = cardRef.getAttribute(\"id\");\r\n            if (idAttr === null) {\r\n                continue;\r\n            }\r\n\r\n            referenceRequests.push(idAttr);\r\n        }\r\n\r\n        let deckWhitelist: string[] | undefined;\r\n        if (referenceRequests.length === 0) {\r\n            deckWhitelist = requestedCards;\r\n        } else {\r\n            if (requestedCards !== undefined) {\r\n                deckWhitelist = [];\r\n\r\n                // only request cards that are in the superior list aswell as in the reference list\r\n                for (const cardId of requestedCards) {\r\n                    if (referenceRequests.indexOf(cardId) > -1) {\r\n                        deckWhitelist.push(cardId);\r\n                    }\r\n                }\r\n            } else {\r\n                deckWhitelist = referenceRequests;\r\n            }\r\n        }\r\n\r\n        return this.loadFile(url, result, deckWhitelist);\r\n    }\r\n}\r\n","export class PlayerSetting {\r\n    constructor(public playerIndex: number, public gender: GenderRequirement = \"None\") {}\r\n}\r\n\r\nexport type GenderRequirement = 'None' | 'Male' | 'Female' | 'Opposite' | 'Same';\r\n","import { GenderRequirement } from \"../cards/player-setting\";\r\n\r\nexport class ParserHelper {\r\n    /** parse a player tag, e. g. \"Player\" or \"Player2\" or \"Player5000\" and return the index (1 if none is specified) or undefined */\r\n    public static parsePlayerTag(s: string): number | undefined {\r\n        const tagName = \"Player\";\r\n\r\n        if (!s.startsWith(tagName)) {\r\n            return undefined;\r\n        }\r\n\r\n        if (s.length > tagName.length) {\r\n            const index = Number(s.substring(tagName.length));\r\n            return isNaN(index) ? undefined : index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    /** parse a gender requirement string, e. g. \"m\", \"male\", \"Male\", etc. */\r\n    public static parseGenderRequirement(s: string): GenderRequirement |undefined {\r\n        s = s.toLowerCase();\r\n\r\n        if (s in this.genderRequirementMap) {\r\n            return this.genderRequirementMap[s];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** parse a timespan in the format hh:mm:ss or mm:ss */\r\n    public static parseTimeSpanStringToSeconds(s: string): number | undefined {\r\n        const a = s.split(\":\");\r\n\r\n        if (a.length > 3) {\r\n            return undefined;\r\n        }\r\n\r\n        let result = 0;\r\n\r\n        for (let i = 0; i < a.length; i++) {\r\n            const p = Number(a[i]);\r\n            if (isNaN(p)) {\r\n                return undefined;\r\n            }\r\n\r\n            result += p * Math.pow(60, (a.length - i - 1));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static genderRequirementMap: { [id: string]: GenderRequirement } = {\r\n        m: \"Male\",\r\n        male: \"Male\",\r\n        f: \"Female\",\r\n        female: \"Female\",\r\n        o: \"Opposite\",\r\n        opposite: \"Opposite\",\r\n        s: \"Same\",\r\n        same: \"Same\",\r\n    };\r\n}\r\n","import { BaseCard } from \"../cards/base-card\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { CardParser } from \"./card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\n\r\nexport abstract class BaseCardParser<TCard extends BaseCard> implements CardParser {\r\n    public deserialize(xml: Element): Card {\r\n        const card = this.createCard();\r\n\r\n        const idAttr = xml.getAttribute(\"id\");\r\n        if (idAttr === null) {\r\n            throw new Error(\"The id of a card must not be null\");\r\n        }\r\n        card.id = idAttr;\r\n\r\n        card.willPower = Number(xml.getAttribute(\"willPower\"));\r\n        if (card.willPower < 1 || card.willPower > 10) {\r\n            card.willPower = undefined;\r\n        }\r\n\r\n        const tags = xml.getAttribute(\"tags\");\r\n\r\n        card.tags = tags\r\n            ? [...this.getDefaultAttributes(), ...tags.split(\",\")]\r\n            : this.getDefaultAttributes();\r\n\r\n        this.parseAttributes(xml, card);\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            if (element.tagName === `${xml.tagName}.players`) {\r\n                card.players = this.parsePlayers(element);\r\n                continue;\r\n            }\r\n\r\n            this.parseElement(element, card);\r\n        }\r\n\r\n        if (card.players === undefined) {\r\n            card.players = [];\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    protected getDefaultAttributes(): string[] {\r\n        return [];\r\n    }\r\n\r\n    protected abstract parseAttributes(rootXml: Element, card: TCard): void;\r\n    protected abstract parseElement(element: Element, card: TCard): boolean;\r\n\r\n    protected abstract createCard(): TCard;\r\n\r\n    private parsePlayers(xml: Element): PlayerSetting[] {\r\n        const players: PlayerSetting[] = [];\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            const player = this.parsePlayer(element);\r\n            if (player !== undefined) {\r\n                players.push(player);\r\n            }\r\n        }\r\n\r\n        return players;\r\n    }\r\n\r\n    private parsePlayer(xml: Element): PlayerSetting | undefined {\r\n        const index = ParserHelper.parsePlayerTag(xml.tagName);\r\n        if (index === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        let requiredGender: GenderRequirement = \"None\";\r\n\r\n        const genderAttr = xml.getAttribute(\"gender\");\r\n        if (genderAttr) {\r\n            const genderReq = ParserHelper.parseGenderRequirement(genderAttr);\r\n\r\n            if (genderReq !== undefined) {\r\n                requiredGender = genderReq;\r\n            }\r\n        }\r\n\r\n        return new PlayerSetting(index, requiredGender);\r\n    }\r\n}\r\n","import { TextTranslation } from \"./text-translation\";\r\n\r\nexport class TextElement {\r\n    public weight: number = 1;\r\n    public translations!: TextTranslation[];\r\n}","export class TextTranslation {\r\n    constructor(public lang: string, public content: string) {}\r\n}\r\n","import { TextElement } from \"../cards/text-element\";\r\nimport { TextTranslation } from \"../cards/text-translation\";\r\n\r\n/** parses the text content of an element */\r\nexport class TextContentParser {\r\n    public result: TextElement[];\r\n\r\n    private isConditionalElement: boolean | undefined = undefined;\r\n\r\n    constructor() {\r\n        this.result = [];\r\n    }\r\n\r\n    public addElement(xml: Element): boolean {\r\n        switch (xml.tagName) {\r\n            case \"Case\":\r\n                if (this.isConditionalElement === false) {\r\n                    return false;\r\n                }\r\n                this.isConditionalElement = true;\r\n\r\n                this.result.push(this.parseTextElement(xml));\r\n                return true;\r\n            case \"Text\":\r\n                if (this.isConditionalElement === true) {\r\n                    return false;\r\n                } else if (this.isConditionalElement === undefined) {\r\n                    this.result.push({ translations: [], weight: 1 });\r\n                }\r\n\r\n                this.isConditionalElement = false;\r\n                this.result[0].translations.push(this.parseTranslation(xml));\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private parseTextElement(element: Element): TextElement {\r\n        const translations: TextTranslation[] = [];\r\n        const textElement = new TextElement();\r\n\r\n        const weight = element.getAttribute(\"weight\");\r\n        if (weight !== null && !isNaN(Number(weight))) {\r\n            textElement.weight = Number(weight);\r\n        } else {\r\n            textElement.weight = 1;\r\n        }\r\n\r\n        const texts = element.getElementsByTagName(\"Text\");\r\n        for (let i = 0; i < texts.length; i++) {\r\n            const textXmlNode = texts[i];\r\n            translations.push(this.parseTranslation(textXmlNode));\r\n        }\r\n\r\n        textElement.translations = translations;\r\n        return textElement;\r\n    }\r\n\r\n    private parseTranslation(element: Element) {\r\n        const lang = element.getAttribute(\"lang\");\r\n        if (lang === null) {\r\n            throw new Error(\"lang attribute not found on element\");\r\n        }\r\n\r\n        if (element.textContent === null) {\r\n            throw new Error(\"The text content of the element is empty.\");\r\n        }\r\n\r\n        return new TextTranslation(lang, element.textContent);\r\n    }\r\n}\r\n","import { TextCard } from \"../cards/text-card\";\r\nimport { BaseCardParser } from \"./base-card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\nimport { TextContentParser } from \"./text-content-parser\";\r\n\r\nexport abstract class TextCardParser<TCard extends TextCard> extends BaseCardParser<TCard> {\r\n    private textContentParser = new TextContentParser();\r\n\r\n    protected parseAttributes(rootXml: Element, card: TCard): void {\r\n        const followUpAttr = rootXml.getAttribute(\"followUpProbability\");\r\n        if (followUpAttr !== null) {\r\n            const followUpProbability = Number(followUpAttr);\r\n            if (isNaN(followUpProbability)) {\r\n                throw new Error(\r\n                    `The follow up propability ${followUpAttr} could not be parsed as a number (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpPropability = followUpProbability;\r\n        }\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay !== null) {\r\n            const seconds = ParserHelper.parseTimeSpanStringToSeconds(followUpDelay);\r\n            if (seconds === undefined) {\r\n                throw new Error(\r\n                    `Could not parse followUpDelay ${followUpDelay} as a timespan (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpDelay = seconds;\r\n        } else {\r\n            card.followUpDelay = 0;\r\n        }\r\n    }\r\n\r\n    protected parseElement(element: Element, card: TCard): boolean {\r\n        switch (element.tagName) {\r\n            case \"Text\":\r\n            case \"Case\":\r\n                card.content = this.textContentParser.result;\r\n                return this.textContentParser.addElement(element);\r\n        }\r\n\r\n        if (element.tagName === `${card.type}.followUp`) {\r\n            const parser = new TextContentParser();\r\n\r\n            const subElements = element.getElementsByTagName(\"*\");\r\n            for (let i = 0; i < subElements.length; i++) {\r\n                const subElement = subElements[i];\r\n                if (subElement.parentElement !== element) {\r\n                    continue;\r\n                }\r\n\r\n                parser.addElement(subElement);\r\n            }\r\n\r\n            card.followUp = parser.result;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { BaseCard } from \"./base-card\";\r\nimport { TextElement } from \"./text-element\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport _ from \"lodash\";\r\n\r\nexport abstract class TextCard extends BaseCard {\r\n    /** the propability (0-1) that this card follows up */\r\n    public followUpPropability: number = 1;\r\n\r\n    /** the delay of the follow up in seconds */\r\n    public followUpDelay!: number;\r\n\r\n    public content!: TextElement[];\r\n    public followUp!: TextElement[];\r\n\r\n    public condition: (status: GameStatus) => boolean = status => {\r\n        return _.some(this.content, x => _.some(x.translations, y => y.lang === status.language));\r\n    };\r\n}\r\n","import { GameStatus } from \"../game-status\";\r\nimport { Card } from \"./card\";\r\nimport { PlayerSetting } from \"./player-setting\";\r\n\r\n/** A very basic implementation of Card  */\r\nexport abstract class BaseCard implements Card {\r\n  public id!: string;\r\n  public willPower!: number | undefined;\r\n  public players!: PlayerSetting[];\r\n  public tags!: string[];\r\n  public condition!: (status: GameStatus) => boolean;\r\n\r\n  public readonly abstract type: string;\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class FactCard extends TextCard {\r\n    public readonly type: string = \"FactCard\";\r\n    public isTrueFact: boolean = false;\r\n}\r\n","import { TextCardParser } from \"../../core/parsing/text-card-parser\";\r\nimport { FactCard } from \"../cards/fact-card\";\r\n\r\nexport class FactCardParser extends TextCardParser<FactCard> {\r\n    protected createCard(): FactCard {\r\n        return new FactCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: FactCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const attr = rootXml.getAttribute(\"is\");\r\n        card.isTrueFact = attr === null ? true : this.toBool(attr);\r\n    }\r\n\r\n    protected toBool(value?: string): boolean {\r\n        if (value === \"true\") {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined) {\r\n            return false;\r\n        }\r\n\r\n        return !!+value;\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class VirusCard extends TextCard {\r\n    public readonly type: string = \"VirusCard\";\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { VirusCard } from '../cards/virus-card';\r\n\r\nexport class VirusCardParser extends TextCardParser<VirusCard> {\r\n    protected createCard(): VirusCard {\r\n        return new VirusCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: VirusCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay === null) {\r\n            card.followUpDelay = 60 * 5; // 5 minutes default\r\n        }\r\n    }\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DefaultTextCardParser<T extends TextCard> extends TextCardParser<T> {\r\n    constructor(private factory: new () => T) {\r\n        super();\r\n    }\r\n\r\n    protected createCard(): T {\r\n        return new this.factory();\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DownCard extends TextCard {\r\n    public readonly type: string = \"DownCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NeverEverCard extends TextCard {\r\n    public readonly type: string = \"NeverEverCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class JokeCard extends TextCard {\r\n    public readonly type: string = \"JokeCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class QuestionCard extends TextCard {\r\n    public readonly type: string = \"QuestionCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class TaskCard extends TextCard {\r\n    public readonly type: string = \"TaskCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class WouldYouRatherCard extends TextCard {\r\n    public readonly type: string = \"WyrCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DrinkCard extends TextCard {\r\n    public readonly type: string = \"DrinkCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class GroupGameCard extends TextCard {\r\n    public readonly type: string = \"GroupGameCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NoIdeaLosesCard extends TextCard {\r\n    public readonly type: string = \"NoIdeaLosesCard\";\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { FactCardParser } from \"./parsing/fact-card-parser\";\r\nimport { VirusCardParser } from \"./parsing/virus-card-parser\";\r\nimport { DefaultTextCardParser } from \"./parsing/default-text-card-parser\";\r\nimport { DownCard } from \"./cards/down-card\";\r\nimport { NeverEverCard } from \"./cards/never-ever-card\";\r\nimport { JokeCard } from \"./cards/joke-card\";\r\nimport { QuestionCard } from \"./cards/question-card\";\r\nimport { TaskCard } from \"./cards/task-card\";\r\nimport { WouldYouRatherCard } from \"./cards/would-you-rather-card\";\r\nimport { DrinkCard } from \"./cards/drink-card\";\r\nimport { GroupGameCard } from \"./cards/group-game-card\";\r\nimport { NoIdeaLosesCard } from \"./cards/no-idea-loses-card\";\r\n\r\ntype ParserRegistration = { [type: string]: () => CardParser };\r\n\r\nexport const parsers: ParserRegistration = {\r\n    FactCard: () => new FactCardParser(),\r\n    VirusCard: () => new VirusCardParser(),\r\n    DownCard: () => new DefaultTextCardParser<DownCard>(DownCard),\r\n    NeverEverCard: () => new DefaultTextCardParser<NeverEverCard>(NeverEverCard),\r\n    JokeCard: () => new DefaultTextCardParser<JokeCard>(JokeCard),\r\n    QuestionCard: () => new DefaultTextCardParser<QuestionCard>(QuestionCard),\r\n    TaskCard: () => new DefaultTextCardParser<TaskCard>(TaskCard),\r\n    WyrCard: () => new DefaultTextCardParser<WouldYouRatherCard>(WouldYouRatherCard),\r\n    DrinkCard: () => new DefaultTextCardParser<DrinkCard>(DrinkCard),\r\n    GroupGameCard: () => new DefaultTextCardParser<GroupGameCard>(GroupGameCard),\r\n    NoIdeaLosesCard: () => new DefaultTextCardParser<NoIdeaLosesCard>(NoIdeaLosesCard),\r\n};\r\n","import axios from \"axios\";\r\nimport { CardsLoader } from \"../../core/cards-loader\";\r\nimport { Card } from \"../../core/cards/card\";\r\nimport { DefaultCardParserFactory } from \"../../impl/default-card-parser-factory\";\r\n\r\nconst parserFactory = new DefaultCardParserFactory();\r\nconst loader = new CardsLoader(requestFile, parserFactory);\r\n\r\nasync function requestFile(url: string) : Promise<string> {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n}\r\n\r\nexport async function loadCards(url: string): Promise<Card[]> {\r\n    return loader.loadFromUrl(url);\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { CardParserFactory } from \"../core/parsing/card-parser-factory\";\r\nimport { parsers } from \"./registrations\";\r\n\r\nexport class DefaultCardParserFactory implements CardParserFactory {\r\n    private parsers: { [type: string]: () => CardParser };\r\n\r\n    constructor() {\r\n        this.parsers = parsers;\r\n    }\r\n\r\n    public createParser(cardType: string): CardParser | undefined {\r\n        if (cardType in this.parsers) {\r\n            return this.parsers[cardType]();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","import * as cardsLoader from \"./api/cards-loader\";\r\n\r\nexport default {\r\n    api: {\r\n        cardsLoader,\r\n    },\r\n};\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { from, of } from \"rxjs\";\r\nimport { catchError, filter, map, mergeMap, ignoreElements, tap } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport { loadSourceAsync, resetAll } from \"./actions\";\r\nimport { deleteSettings } from \"../../store/storage\";\r\n\r\nexport const loadSourceEpic: Epic<RootAction, RootAction, RootState, Services> = (\r\n    action$,\r\n    _state$,\r\n    { api },\r\n) =>\r\n    action$.pipe(\r\n        filter(isActionOf(loadSourceAsync.request)),\r\n        mergeMap(action =>\r\n            from(api.cardsLoader.loadCards(action.payload)).pipe(\r\n                map(cards => loadSourceAsync.success({ url: action.payload, cards })),\r\n                catchError((message: string) =>\r\n                    of(loadSourceAsync.failure({ url: action.payload, message })),\r\n                ),\r\n            ),\r\n        ),\r\n    );\r\n\r\nexport const resetAllEpic: Epic<RootAction, RootAction, RootState, Services> = (\r\n    action$, _state$, _services\r\n) => action$.pipe(\r\n    filter(isActionOf(resetAll)),\r\n    tap(() => deleteSettings()),\r\n    tap(() => window.location.reload()),\r\n    ignoreElements()\r\n)","import { RootState } from \"DrinctetTypes\";\r\nimport { SettingsState } from \"../features/settings/reducer\";\r\n\r\nexport function persistState(store: any) {\r\n    store.subscribe(() => {\r\n        const state: RootState = store.getState();\r\n        const toStore: SettingsState = {\r\n            ...state.settings,\r\n            sources: state.settings.sources.map(x => ({\r\n                url: x.url,\r\n                weight: x.weight,\r\n                isLoading: false,\r\n                cards: null,\r\n                errorMessage: null,\r\n                tags: []\r\n            })),\r\n        };\r\n        localStorage.setItem(\"settingsState\", JSON.stringify(toStore));\r\n    });\r\n}\r\n\r\nexport function loadState(): Partial<RootState> {\r\n    const settings = localStorage.getItem(\"settingsState\");\r\n    const state = settings !== null ? JSON.parse(settings) : {};\r\n    return { settings: state };\r\n}\r\n\r\nexport function deleteSettings(): void {\r\n    localStorage.clear();\r\n}\r\n","export abstract class TextFragment {}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RawTextFragment extends TextFragment {\r\n    constructor(public text: string) {\r\n        super();\r\n    }\r\n}","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport abstract class VariableFragment extends TextFragment {\r\n}","import { VariableFragment } from \"./variable-fragment\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\n\r\nexport class PlayerReferenceFragment extends VariableFragment {\r\n    constructor(public playerIndex: number = 1, public gender: GenderRequirement = \"None\") {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SipsFragment extends VariableFragment {\r\n    constructor(public minSips: number = 1, public sipsIndex: number = 1) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomNumberFragment extends TextFragment {\r\n    constructor(public numbers: RandomNumber[]) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport interface RandomNumber {\r\n    getCount(): number;\r\n}\r\n\r\nexport class NumberRange implements RandomNumber {\r\n    constructor(public min: number, public max: number) {}\r\n\r\n    getCount(): number {\r\n        return this.max - this.min;\r\n    }\r\n}\r\n\r\nexport class StaticNumber implements RandomNumber {\r\n    constructor(public i: number) {}\r\n\r\n    getCount(): number {\r\n        return 1;\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomTextFragment extends TextFragment {\r\n    constructor(public texts: string[]) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class GenderBasedSelectionFragment extends TextFragment {\r\n    constructor(\r\n        public femaleText: string,\r\n        public maleText?: string,\r\n        public referencedPlayerIndex?: number,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SocialMediaPlatformFragment extends VariableFragment {\r\n}","import { ParserHelper } from \"./../parser-helper\";\r\nimport { CardTextDecoder } from \"./card-text-decoder\";\r\nimport { TextFragment } from \"../../text-fragment\";\r\nimport * as Consts from \"./text-decoder-consts\";\r\nimport { RawTextFragment } from \"../../fragments/raw-text-fragment\";\r\nimport { PlayerReferenceFragment } from \"../../fragments/player-reference-fragment\";\r\nimport { SipsFragment } from \"../../fragments/sips-fragment\";\r\nimport {\r\n    RandomNumberFragment,\r\n    RandomNumber,\r\n    NumberRange,\r\n    StaticNumber,\r\n} from \"../../fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"../../fragments/random-text-fragment\";\r\nimport { GenderBasedSelectionFragment } from \"../../fragments/gender-based-selection-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\n\r\nexport class DefaultTextDecoder implements CardTextDecoder {\r\n    decode(s: string): TextFragment[] {\r\n        const result: TextFragment[] = [];\r\n\r\n        let index = 0;\r\n        let lastTokenIndex = 0;\r\n\r\n        do {\r\n            if (s[index] == Consts.VarStartChar) {\r\n                if (lastTokenIndex !== index) {\r\n                    result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                }\r\n\r\n                const token = this.readToken(s, index, Consts.VarEndChar);\r\n                index = token.index;\r\n\r\n                result.push(this.parseVariableFragment(token.value));\r\n            } else if (s[index] === Consts.SelectionStartChar) {\r\n                if (index > 1 && s[index - 1] === Consts.SelectionModifierStartChar) {\r\n                    // handle !{...}\r\n                    index--;\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    index++;\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseRandomSelectionFragment(content.value));\r\n                } else {\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseGenderSelectionFragment(content.value));\r\n                }\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            lastTokenIndex = index;\r\n        } while (++index < s.length);\r\n\r\n        if (lastTokenIndex !== s.length) {\r\n            result.push(new RawTextFragment(s.substring(lastTokenIndex)));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseVariableFragment(content: string): TextFragment {\r\n        content = content.toLowerCase();\r\n\r\n        if (content.startsWith(Consts.PlayerVariable)) {\r\n            // Samples:\r\n            // [Player1:f]\r\n            // [Player1]\r\n            // [Player]\r\n\r\n            const playerRef = new PlayerReferenceFragment();\r\n\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let playerTag: string;\r\n            if (parameterBegin === -1) {\r\n                playerTag = content;\r\n            } else {\r\n                playerTag = content.substring(0, parameterBegin);\r\n\r\n                const genderString = content.substring(parameterBegin + 1);\r\n                const gender = ParserHelper.parseGenderRequirement(genderString);\r\n                if (gender === undefined) {\r\n                    throw new Error(\r\n                        `Gender parameter of player tag could not be parsed: ${content}`,\r\n                    );\r\n                }\r\n\r\n                playerRef.gender = gender;\r\n            }\r\n\r\n            playerRef.playerIndex = this.parsePlayerIndex(playerTag);\r\n            return playerRef;\r\n        }\r\n\r\n        if (content.startsWith(Consts.SipsVariable)) {\r\n            const sipsFragment = new SipsFragment();\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let sipsTag: string;\r\n            if (parameterBegin === -1) {\r\n                sipsTag = content;\r\n            } else {\r\n                sipsTag = content.substring(0, parameterBegin);\r\n                sipsFragment.minSips = Number(content.substring(parameterBegin + 1));\r\n                if (isNaN(sipsFragment.minSips)) {\r\n                    throw new Error(`The sips amount of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            if (sipsTag.length > Consts.SipsVariable.length) {\r\n                sipsFragment.sipsIndex = Number(sipsTag.substring(Consts.SipsVariable.length));\r\n                if (isNaN(sipsFragment.sipsIndex)) {\r\n                    throw new Error(`The sips index of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            return sipsFragment;\r\n        }\r\n\r\n        if (content === Consts.SocialMediaVariable) {\r\n            return new SocialMediaPlatformFragment();\r\n        }\r\n\r\n        return new RawTextFragment(content);\r\n    }\r\n\r\n    public parseRandomSelectionFragment(content: string): TextFragment {\r\n        // Samples:\r\n        // 12,54,56-90\r\n        // 12,hello,not,19\r\n\r\n        const isNumericSelection = /^[0-9,-]+$/.test(content);\r\n        if (isNumericSelection) {\r\n            const numbers = this.parseNumberArray(content);\r\n            return new RandomNumberFragment(numbers);\r\n        }\r\n\r\n        const texts = this.splitQuoted(content, \",\");\r\n        return new RandomTextFragment(texts);\r\n    }\r\n\r\n    public parseNumberArray(content: string): RandomNumber[] {\r\n        const result: RandomNumber[] = [];\r\n        let currentNumber: RandomNumber | null = null;\r\n\r\n        let numberStart = 0;\r\n        let isRangeToken = false;\r\n\r\n        let i = 0;\r\n        while (true) {\r\n            for (; i < content.length; i++) {\r\n                const c = content[i];\r\n\r\n                if (!isNaN(Number(c))) {\r\n                    continue;\r\n                }\r\n\r\n                if (c === \"-\") {\r\n                    if (isRangeToken) {\r\n                        throw new Error(\"Can only have one range identifier per field\");\r\n                    }\r\n                    isRangeToken = true;\r\n\r\n                    currentNumber = new NumberRange(Number(content.substring(numberStart, i)), 0);\r\n                    numberStart = i + 1;\r\n                    continue;\r\n                }\r\n\r\n                if (c === \",\") {\r\n                    break;\r\n                }\r\n\r\n                throw new Error(\"Invalid character found: \" + c);\r\n            }\r\n\r\n            if (i === numberStart) {\r\n                throw new Error(`A number was expected at position ${i} in string \"${content}\"`);\r\n            }\r\n\r\n            const num = Number(content.substring(numberStart, i));\r\n            if (isRangeToken) {\r\n                (currentNumber as NumberRange).max = num;\r\n            } else {\r\n                currentNumber = new StaticNumber(num);\r\n            }\r\n\r\n            result.push(currentNumber!);\r\n\r\n            if (i === content.length) {\r\n                break;\r\n            }\r\n\r\n            currentNumber = null;\r\n            isRangeToken = false;\r\n            numberStart = ++i;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public splitQuoted(value: string, delimiter: string): string[] {\r\n        let tokenStart = 0;\r\n        let result: string[] = [];\r\n\r\n        while (value.length > tokenStart - 1) {\r\n            let withinQuotes = false;\r\n\r\n            if (value[tokenStart] === '\"') {\r\n                withinQuotes = true;\r\n                tokenStart++;\r\n            }\r\n\r\n            let i = tokenStart;\r\n            do {\r\n                if (value[i] === delimiter) {\r\n                    if (withinQuotes) continue;\r\n\r\n                    result.push(value.substring(tokenStart, i));\r\n                    tokenStart = i + 1;\r\n                    break;\r\n                }\r\n\r\n                if (value[i] == '\"') {\r\n                    if (!withinQuotes) {\r\n                        continue; //allow quotes in the middle\r\n                    }\r\n\r\n                    if (i == value.length - 1) {\r\n                        //if its the last char\r\n                        result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                        return result;\r\n                    }\r\n\r\n                    const nextChar = value[i + 1];\r\n                    if (nextChar == '\"') {\r\n                        i++;\r\n                        continue; //escaped quotes\r\n                    }\r\n\r\n                    if (nextChar != delimiter)\r\n                        throw new Error(\"The delimiter must come after the closing quotes.\");\r\n\r\n                    result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                    tokenStart = i + 2;\r\n                    break;\r\n                }\r\n\r\n                if (i == value.length - 1) {\r\n                    if (withinQuotes) {\r\n                        throw new Error(\"The text must end with a quote\");\r\n                    }\r\n\r\n                    result.push(value.substring(tokenStart, i + 1));\r\n                    return result;\r\n                }\r\n            } while (++i < value.length);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseGenderSelectionFragment(content: string): GenderBasedSelectionFragment {\r\n        const fragment = new GenderBasedSelectionFragment(\"\");\r\n\r\n        const splitterIndex = content.indexOf(Consts.SelectionSplitterChar);\r\n        const reference = content.indexOf(Consts.SelectionReferenceChar);\r\n\r\n        if (reference !== -1) {\r\n            fragment.referencedPlayerIndex = this.parsePlayerIndex(\r\n                content.substring(reference + 1),\r\n            );\r\n            content = content.substring(0, reference);\r\n        }\r\n\r\n        if (splitterIndex === -1) {\r\n            fragment.femaleText = content;\r\n        } else {\r\n            fragment.maleText = content.substring(0, splitterIndex);\r\n            fragment.femaleText = content.substring(splitterIndex + 1, content.length);\r\n        }\r\n\r\n        return fragment;\r\n    }\r\n\r\n    public parsePlayerIndex(value: string): number {\r\n        if (value.length > Consts.PlayerVariable.length) {\r\n            const index = Number(value.substring(Consts.PlayerVariable.length));\r\n            if (isNaN(index)) {\r\n                throw new Error(`The player index of \"${value}\" could not be parsed.`);\r\n            }\r\n\r\n            return index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    public readToken(\r\n        value: string,\r\n        index: number,\r\n        endChar: string,\r\n    ): { value: string; index: number } {\r\n        const length = value.length;\r\n        const tokenStart = index;\r\n\r\n        while (++index < length) {\r\n            const char = value[index];\r\n\r\n            if (char === Consts.EscapeChar) {\r\n                index++;\r\n                continue;\r\n            }\r\n\r\n            if (char === endChar) {\r\n                index++;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { index, value: value.substring(tokenStart + 1, index - 1) };\r\n    }\r\n}\r\n","export const VarStartChar: string = \"[\";\r\nexport const VarEndChar: string = \"]\";\r\nexport const EscapeChar: string = \"\\\\\";\r\nexport const SelectionStartChar: string = \"{\";\r\nexport const SelectionModifierStartChar: string = \"!\";\r\nexport const SelectionEndChar: string = \"}\";\r\n\r\nexport const PlayerVariable: string = \"player\";\r\nexport const SipsVariable: string = \"sips\";\r\nexport const VariableParametersStart: string = \":\";\r\nexport const SocialMediaVariable: string = \"socialmediaplatform\";\r\n\r\nexport const SelectionSplitterChar: string = \"/\";\r\nexport const SelectionReferenceChar: string = \"|\";\r\nexport const ArrayDelimiter: string = \",\";\r\n","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GenderBasedSelectionFragment } from \"@core/fragments/gender-based-selection-fragment\";\r\nimport { PlayerReferenceFragment } from \"@core/fragments/player-reference-fragment\";\r\nimport { NumberRange, RandomNumberFragment, StaticNumber } from \"@core/fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"@core/fragments/random-text-fragment\";\r\nimport { RawTextFragment } from \"@core/fragments/raw-text-fragment\";\r\nimport { SipsFragment } from \"@core/fragments/sips-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { RandomUtils } from \"@core/selection/selection-algorithm\";\r\nimport { TextFragment } from \"@core/text-fragment\";\r\nimport _ from \"lodash\";\r\n\r\nexport class TextFormatter {\r\n    public static getRequiredPlayers(fragments: TextFragment[], playerSettings: PlayerSetting[]) {\r\n        const requiredPlayers = new Array<PlayerSetting>();\r\n\r\n        const players = _.groupBy(\r\n            fragments\r\n                .filter(x => x instanceof PlayerReferenceFragment)\r\n                .map(x => x as PlayerReferenceFragment),\r\n            \"playerIndex\",\r\n        );\r\n\r\n        for (const key in players) {\r\n            if (players.hasOwnProperty(key)) {\r\n                const player = players[key][0];\r\n\r\n                let requiredGender = player.gender;\r\n\r\n                if (requiredGender === \"None\") {\r\n                    const rootSetting = playerSettings.find(\r\n                        x => x.playerIndex === player.playerIndex,\r\n                    );\r\n                    if (rootSetting !== undefined) {\r\n                        requiredGender = rootSetting.gender;\r\n                    }\r\n                }\r\n\r\n                requiredPlayers.push({ playerIndex: player.playerIndex, gender: requiredGender });\r\n            }\r\n        }\r\n\r\n        return requiredPlayers;\r\n    }\r\n\r\n    public static getRequiredSips(fragments: TextFragment[]): SipsFragment[] {\r\n        const sips = _.groupBy(\r\n            fragments.filter(x => x instanceof SipsFragment).map(x => x as SipsFragment),\r\n            \"sipsIndex\",\r\n        );\r\n        return Object.values(sips).map(x => x[0]);\r\n    }\r\n\r\n    public static format(\r\n        fragments: TextFragment[],\r\n        players: { [index: number]: PlayerInfo },\r\n        sips: { [index: number]: number },\r\n        socialMediaPlatform: string,\r\n        translate: (key: string) => string,\r\n        selection: RandomUtils,\r\n        options: Partial<FormatOptions>,\r\n    ): string {\r\n        let result = \"\";\r\n        let lastPlayerFragment: PlayerReferenceFragment | null = null;\r\n\r\n        for (const fragment of fragments) {\r\n            if (fragment instanceof RawTextFragment) {\r\n                result += fragment.text;\r\n            } else if (fragment instanceof PlayerReferenceFragment) {\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n                result += players[fragment.playerIndex].name;\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                lastPlayerFragment = fragment;\r\n            } else if (fragment instanceof SipsFragment) {\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                const sip = sips[fragment.sipsIndex];\r\n                if (sip === 1) {\r\n                    result += translate(\"oneSip\");\r\n                } else {\r\n                    result += `${sip} ${translate(\"sips\")}`;\r\n                }\r\n\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n            } else if (fragment instanceof GenderBasedSelectionFragment) {\r\n                let referencedPlayer: number;\r\n                if (fragment.referencedPlayerIndex !== undefined) {\r\n                    referencedPlayer = fragment.referencedPlayerIndex;\r\n                } else if (lastPlayerFragment !== null) {\r\n                    referencedPlayer = lastPlayerFragment.playerIndex;\r\n                } else {\r\n                    const playerKeys = Object.keys(players);\r\n                    if (playerKeys.length === 0) {\r\n                        continue;\r\n                    }\r\n\r\n                    referencedPlayer = Number(playerKeys[0]);\r\n                }\r\n\r\n                const player = players[referencedPlayer];\r\n                const text = player.gender === \"Female\" ? fragment.femaleText : fragment.maleText;\r\n                if (text !== undefined) {\r\n                    result += text;\r\n                }\r\n            } else if (fragment instanceof RandomTextFragment) {\r\n                const text = selection.selectRandomWeighted(fragment.texts, () => 1);\r\n                result += text;\r\n            } else if (fragment instanceof RandomNumberFragment) {\r\n                const number = selection.selectRandomWeighted(fragment.numbers, x => x.getCount());\r\n                if (number === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                if (number instanceof NumberRange) {\r\n                    const random =\r\n                        number.min + Math.round((number.max - number.min) * selection.getRandom());\r\n                    result += random;\r\n                } else if (number instanceof StaticNumber) {\r\n                    result += number.i;\r\n                }\r\n            } else if (fragment instanceof SocialMediaPlatformFragment) {\r\n                result += socialMediaPlatform;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport interface FormatOptions {\r\n    boldPlayerNames: boolean;\r\n    boldSips: boolean;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { DefaultTextDecoder } from \"@core/parsing/text-decoder/default-text-decoder\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { FollowUpSlide, SelectedPlayer, Translator } from \"GameModels\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../../../store\";\r\nimport * as actions from \"../../actions\";\r\nimport { TextFormatter } from \"../../formatter/text-formatter\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { CardPresenter } from \"./card-presenter\";\r\n\r\nexport interface TextSlideState {\r\n    markdownContent: string;\r\n}\r\n\r\nexport abstract class TextSlidePresenter<\r\n    TState extends TextSlideState,\r\n    TCard extends TextCard\r\n> extends CardPresenter<TCard> {\r\n    constructor(protected translator: Translator, cardType: string, slideType: string) {\r\n        super(cardType, slideType);\r\n    }\r\n\r\n    protected initializeCard(card: TCard, cardRef: CardRef): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const result = new Array<RootAction>();\r\n\r\n        const text = this.selectText(selection, card);\r\n        let formatted: string;\r\n        let players: SelectedPlayer[];\r\n\r\n        try {\r\n            const result = this.formatText(text, card, null, selection);\r\n            formatted = result.formatted;\r\n            players = result.players;\r\n        } catch (error) {\r\n            // likely not enough players\r\n            return [actions.requestSlideAsync.request(this.translator)];\r\n        }\r\n\r\n        const state = this.initializeState(formatted, card, players, selection);\r\n        result.push(\r\n            actions.setSlideState({\r\n                state,\r\n                insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n            }),\r\n        );\r\n\r\n        if (_.some(card.followUp)) {\r\n            // dont check for correct translation as the language may change\r\n            if (Math.random() <= card.followUpPropability) {\r\n                const due = new Date();\r\n                due.setSeconds(due.getSeconds() + card.followUpDelay);\r\n\r\n                result.push(actions.enqueueFollowUp(this.createFollowUp(cardRef, players, due)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected initializeFollowUpCard(card: TCard, param: any): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n\r\n        try {\r\n            const { text, players } = this.selectFollowUpText(selection, card, param);\r\n            const { formatted } = this.formatText(text, card, players || [], selection);\r\n\r\n            const state = this.initializeFollowUpState(formatted, card, selection, param);\r\n            return [\r\n                actions.setSlideState({\r\n                    state,\r\n                    insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n                }),\r\n            ];\r\n        } catch (error) {\r\n            //no follow up found\r\n            return [actions.requestSlideAsync.request(this.translator)];\r\n        }\r\n    }\r\n\r\n    protected abstract initializeState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): TState;\r\n\r\n    protected abstract initializeFollowUpState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        selection: SelectionAlgorithm,\r\n        param: any,\r\n    ): TState;\r\n\r\n    protected createFollowUp(\r\n        cardRef: CardRef,\r\n        players: SelectedPlayer[],\r\n        due: Date,\r\n    ): FollowUpSlide {\r\n        return {\r\n            due: due,\r\n            slideType: this.slideType,\r\n            selectedCard: cardRef,\r\n            param: { definedPlayers: players },\r\n        };\r\n    }\r\n\r\n    protected selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return selectText(selection, selectedCard, this.translator);\r\n    }\r\n\r\n    protected formatText(\r\n        text: string,\r\n        card: TCard,\r\n        definedPlayers: SelectedPlayer[] | null,\r\n        selection: SelectionAlgorithm,\r\n    ): { formatted: string; players: SelectedPlayer[] } {\r\n        return formatText(text, card, definedPlayers, selection, this.translator);\r\n    }\r\n\r\n    selectFollowUpText(\r\n        selection: SelectionAlgorithm,\r\n        selectedCard: TextCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const lang = this.translator.languageCode;\r\n\r\n        const followUps = selectedCard.followUp.filter(x =>\r\n            _.some(x.translations, y => y.lang.toLowerCase() === lang),\r\n        );\r\n        if (followUps.length === 0) {\r\n            throw new Error(\"No follow ups found\");\r\n        }\r\n\r\n        let players: SelectedPlayer[] | undefined;\r\n        if (\"definedPlayers\" in param) {\r\n            players = param.definedPlayers;\r\n        } else {\r\n            players = undefined;\r\n        }\r\n\r\n        const content = selection.selectRandomWeighted(followUps, x => x.weight)!;\r\n        const text = content.translations.find(x => x.lang === lang)!.content;\r\n        return { text, players };\r\n    }\r\n}\r\n\r\nexport function formatText<TCard extends TextCard>(\r\n    text: string,\r\n    card: TCard,\r\n    definedPlayers: SelectedPlayer[] | null,\r\n    selection: SelectionAlgorithm,\r\n    translator: Translator,\r\n): { formatted: string; players: SelectedPlayer[] } {\r\n    const fragments = new DefaultTextDecoder().decode(text);\r\n    const playerRequirements = TextFormatter.getRequiredPlayers(fragments, card.players);\r\n\r\n    const players = gameEngine.selectPlayers(\r\n        selection,\r\n        playerRequirements,\r\n        definedPlayers || [],\r\n        card.tags,\r\n    );\r\n\r\n    const requiredSips = TextFormatter.getRequiredSips(fragments);\r\n\r\n    const indexedPlayers: { [index: number]: PlayerInfo } = {};\r\n    for (const player of players) {\r\n        indexedPlayers[player.index] = player.player;\r\n    }\r\n\r\n    const sips: { [index: number]: number } = {};\r\n    for (const sipInfo of requiredSips) {\r\n        sips[sipInfo.sipsIndex] = selection.getSips(sipInfo.minSips);\r\n    }\r\n\r\n    const socialMediaPlatform = store.getState().settings.socialMediaPlatform;\r\n\r\n    const formatted = TextFormatter.format(\r\n        fragments,\r\n        indexedPlayers,\r\n        sips,\r\n        socialMediaPlatform,\r\n        x => translator.translate(`game.textFormatter.${x}`),\r\n        selection,\r\n        { boldPlayerNames: true, boldSips: true },\r\n    );\r\n\r\n    return { formatted: formatted, players };\r\n}\r\n\r\nexport function selectText(\r\n    selection: SelectionAlgorithm,\r\n    selectedCard: TextCard,\r\n    translator: Translator,\r\n): string {\r\n    const lang = translator.languageCode;\r\n\r\n    const viableContents = selectedCard.content.filter(x =>\r\n        _.some(x.translations, y => y.lang.toLocaleLowerCase() === lang),\r\n    );\r\n    const content = selection.selectRandomWeighted(viableContents, x => x.weight)!;\r\n    return content.translations.find(x => x.lang === lang)!.content;\r\n}\r\n","import { SlidePresenter } from \"./slide-presenter\";\r\nimport { Card } from \"@core/cards/card\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { ReactNode } from \"react\";\r\nimport * as actions from \"../../actions\";\r\nimport { ActionType } from \"typesafe-actions\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport abstract class CardPresenter<TCard extends Card> implements SlidePresenter {\r\n    abstract backgroundColor: string;\r\n    requiredCards: string[];\r\n\r\n    constructor(protected cardType: string, public slideType: string) {\r\n        this.requiredCards = [cardType];\r\n    }\r\n\r\n    initialize(): ActionType<any>[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const cardRef = selection.selectCard(this.cardType);\r\n\r\n        return [actions.applyCard(cardRef), ...this.initializeCard(cardRef.card as TCard, cardRef)];\r\n    }\r\n\r\n    initializeFollowUp(card: CardRef | null, param: any): ActionType<any>[] {\r\n        return this.initializeFollowUpCard(card!.card as TCard, param, card!);\r\n    }\r\n\r\n    abstract render(): ReactNode;\r\n    protected abstract initializeCard(card: TCard, cardRef: CardRef): ActionType<any>[];\r\n    protected abstract initializeFollowUpCard(card: TCard, param: any, cardRef: CardRef): ActionType<any>[];\r\n}\r\n","export default {\r\n    down: \"#c23616\", //pomegrenate (red)\r\n    drink: \"#2470A3\", //belize hole (blue)\r\n    fact: \"#D5880B\", //orange\r\n    groupGame: \"#664EDF\", //green sea\r\n    neverEver: \"#C75000\", //pumpkin\r\n    noIdeaLoses: \"#192a56\", //pico void (dark blue)\r\n    truthOrDare: \"#2c3e50\", //Midnight blue\r\n    virus: \"##219150\",\r\n    wouldYouRather: \"#273c75\",\r\n    task: \"##667293\",\r\n};","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { PlayerSelectionInsights } from \"@core/selection/insights\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    Button,\r\n    createStyles,\r\n    Paper,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport * as gameEngine from \"../game-engine\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { formatText, selectText } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TruthOrDareSlideState,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n    setState: actions.setSlideState,\r\n    applyCard: actions.applyCard,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...baseStyles.rootStyle(),\r\n            cursor: \"default\",\r\n        },\r\n        clickableRoot: {\r\n            ...baseStyles.rootStyle(),\r\n        },\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            marginBottom: 15,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                fontSize: \"1.5em\",\r\n            },\r\n        },\r\n        spaceHeader: {\r\n            visibility: \"hidden\",\r\n            marginTop: 15,\r\n        },\r\n        questionPaper: {\r\n            padding: theme.spacing.unit * 2,\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                width: theme.spacing.unit * 50,\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                width: \"80vw\",\r\n                margin: theme.spacing.unit,\r\n            },\r\n        },\r\n        questionButtonsContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: theme.spacing.unit,\r\n        },\r\n        refuseMessage: {\r\n            opacity: 0.8,\r\n            marginTop: 10,\r\n        },\r\n    });\r\n\r\ntype MappedActions = typeof dispatchProps;\r\n\r\ntype Props = MappedActions &\r\n    ReturnType<typeof mapStateToProps> &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction QuestionComponent(props: Props) {\r\n    const { state, players, nextSlide, classes } = props;\r\n    const player = players.find(x => x.id === state.selectedPlayer);\r\n    if (player === undefined) {\r\n        nextSlide(toTranslator(props));\r\n        return <div />;\r\n    }\r\n\r\n    const select = (decision: TruthOrDare) =>\r\n        new TruthOrDareSlide(toTranslator(props)).select(decision, props, player);\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"scale(1, 1)\",\r\n        from: { opacity: 0, transform: \"scale(2.5, 2.5)\" },\r\n    });\r\n\r\n    return (\r\n        <animated.div style={springProps}>\r\n            <Paper className={classes.questionPaper}>\r\n                <Typography style={{ fontSize: 17, fontWeight: 500 }}>\r\n                    <Translate\r\n                        id=\"slides.truthordare.playerTruthordare\"\r\n                        data={{ name: player.name }}\r\n                    />\r\n                </Typography>\r\n                <div className={classes.questionButtonsContainer}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: 15 }}\r\n                        onClick={() => select(\"Truth\")}\r\n                    >\r\n                        <Translate id=\"slides.truthordare.truth\" />\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => select(\"Dare\")}>\r\n                        <Translate id=\"slides.truthordare.dare\" />\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        </animated.div>\r\n    );\r\n}\r\n\r\nfunction DareComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h5\" color=\"inherit\">\r\n            <Translate id=\"slides.truthordare.truth\" /> <Translate id=\"slides.truthordare.or\" />{\" \"}\r\n            <b>\r\n                <Translate id=\"slides.truthordare.dare\" />\r\n            </b>\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={cardMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseDare\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\" color=\"inherit\">\r\n            <b>\r\n                <Translate id=\"slides.truthordare.truth\" />\r\n            </b>{\" \"}\r\n            <Translate id=\"slides.truthordare.or\" /> <Translate id=\"slides.truthordare.dare\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={cardMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseTruth\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthOrDareComponent(props: Props) {\r\n    const { classes, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    if (state.isDeciding) {\r\n        return <div className={classes.root}>{QuestionComponent(props)}</div>;\r\n    }\r\n\r\n    if (state.decision === \"Dare\") {\r\n        return DareComponent(props);\r\n    } else {\r\n        return TruthComponent(props);\r\n    }\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TruthOrDareComponent) as React.ComponentType;\r\n\r\ntype TruthOrDare = \"Truth\" | \"Dare\";\r\n\r\ninterface TruthOrDareSlideState {\r\n    selectedPlayer: string;\r\n    isDeciding: boolean;\r\n    decision?: TruthOrDare;\r\n    markdownContent?: string;\r\n}\r\n\r\nexport class TruthOrDareSlide implements SlidePresenter {\r\n    backgroundColor = colors.truthOrDare;\r\n\r\n    constructor(private translator: Translator) {}\r\n\r\n    public slideType = \"TruthOrDareSlide\";\r\n    public requiredCards = [\"TaskCard\", \"QuestionCard\"];\r\n\r\n    public select(decision: TruthOrDare, actions: MappedActions, player: PlayerInfo) {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const cardType = decision === \"Dare\" ? \"TaskCard\" : \"QuestionCard\";\r\n\r\n        let formatted: string | null = null;\r\n        let cardRef: CardRef;\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            cardRef = selection.selectCard(cardType);\r\n            const card = cardRef.card as TextCard;\r\n\r\n            const selectedText = selectText(selection, card, this.translator);\r\n            const text = `#### ${this.translator.translate(\r\n                \"slides.truthordare.instruction\",\r\n            )}\\n${selectedText}`;\r\n\r\n            try {\r\n                const result = formatText(\r\n                    text,\r\n                    card,\r\n                    [{ index: 99, player }],\r\n                    selection,\r\n                    this.translator,\r\n                );\r\n\r\n                formatted = result.formatted;\r\n            } catch (error) {\r\n                // likely not enough players\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (formatted === null) {\r\n            actions.nextSlide(this.translator);\r\n            return;\r\n        }\r\n\r\n        actions.applyCard(cardRef!);\r\n\r\n        const state: TruthOrDareSlideState = {\r\n            isDeciding: false,\r\n            selectedPlayer: player.id,\r\n            markdownContent: formatted,\r\n            decision,\r\n        };\r\n        actions.setState({ state, insights: selection.insights.playerSelection });\r\n    }\r\n\r\n    initialize(): RootAction[] {\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const player = gameEngine.selectPlayers(\r\n            selection,\r\n            [new PlayerSetting(1, \"None\")],\r\n            [],\r\n            [],\r\n        )[0].player;\r\n\r\n        return [\r\n            this.setState(\r\n                { isDeciding: true, selectedPlayer: player.id },\r\n                selection.insights.playerSelection,\r\n            ),\r\n        ];\r\n    }\r\n\r\n    private setState(\r\n        state: TruthOrDareSlideState,\r\n        insights: PlayerSelectionInsights | null = null,\r\n    ): RootAction {\r\n        return actions.setSlideState({ state, insights });\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not supported.\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spring, config } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport { DownCard } from \"src/impl/cards/down-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DownSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 15,\r\n        },\r\n        hidden: baseStyles.hidden()\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DownSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.down.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Spring\r\n                    config={config.wobbly}\r\n                    from={{ transform: \"translate(-100px, 0px)\" }}\r\n                    to={{ transform: \"translate(0px, 0px)\" }}\r\n                >\r\n                    {props => (\r\n                        <div style={props as any}>\r\n                            {header}\r\n                            <Markdown\r\n                                children={state.markdownContent}\r\n                                options={cardMarkdownOptions}\r\n                            />\r\n                            <div className={classes.hidden}>{header}</div>\r\n                        </div>\r\n                    )}\r\n                </Spring>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DownSlideComponent) as React.ComponentType;\r\n\r\ninterface DownSlideState extends TextSlideState {}\r\nexport class DownSlide extends TextSlidePresenter<DownSlideState, DownCard> {\r\n    backgroundColor = colors.down;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DownCard\", \"DownSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { FactCard } from \"src/impl/cards/fact-card\";\r\nimport * as actions from \"../actions\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as FactSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction FactSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\" color=\"inherit\">\r\n            <Translate id={`slides.fact.title${state.isFollowUp ? (state.isTrue ? \".true\" : \".false\") : \"\"}`} />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface FactSlideFollowUpParam {\r\n    mode: FactSlideMode;\r\n    players: SelectedPlayer[];\r\n    isTrue: boolean;\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize\r\n)(FactSlideComponent) as React.ComponentType;\r\n\r\ntype FactSlideMode = \"singleplayer\" | \"multiplayer\";\r\nconst availableFactSlideModes: FactSlideMode[] = [\"singleplayer\", \"multiplayer\"];\r\n\r\ninterface FactSlideState extends TextSlideState {\r\n    isFollowUp: boolean;\r\n    mode: FactSlideMode;\r\n    isTrue: boolean;\r\n}\r\n\r\nexport class FactSlide extends TextSlidePresenter<FactSlideState, FactCard> {\r\n    private selectedMode: FactSlideMode;\r\n    private players?: SelectedPlayer[];\r\n    backgroundColor = colors.fact;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"FactCard\", \"FactSlide\");\r\n\r\n        this.selectedMode =\r\n            availableFactSlideModes[Math.floor(availableFactSlideModes.length * Math.random())];\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        const cardText = super.selectText(selection, selectedCard);\r\n        const instruction = this.translator.translate(`slides.fact.${this.selectedMode}`);\r\n\r\n        return `#### ${instruction}\\n${cardText}`;\r\n    }\r\n\r\n    selectFollowUpText(\r\n        _selection: SelectionAlgorithm,\r\n        selectedCard: FactCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const { mode, players } = param as FactSlideFollowUpParam;\r\n        const { isTrueFact } = selectedCard;\r\n\r\n        const text = this.translator.translate(`slides.fact.${mode}.${isTrueFact}`);\r\n        return { text, players };\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        card: FactCard,\r\n        players: SelectedPlayer[],\r\n    ): FactSlideState {\r\n        this.players = players;\r\n\r\n        return {\r\n            isFollowUp: false,\r\n            markdownContent: markdownContent,\r\n            mode: this.selectedMode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string, card: FactCard,  param: any): FactSlideState {\r\n        const { mode } = param as FactSlideFollowUpParam;\r\n        return {\r\n            isFollowUp: true,\r\n            markdownContent: markdownContent,\r\n            mode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeCard(card: FactCard, cardRef: CardRef): RootAction[] {\r\n        return [...super.initializeCard(card, cardRef), actions.enqueueFollowUp({\r\n            due: new Date(),\r\n            selectedCard: cardRef,\r\n            slideType: \"FactSlide\",\r\n            param: {\r\n                mode: this.selectedMode,\r\n                players: this.players,\r\n            } as FactSlideFollowUpParam,\r\n        })];\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { compose } from \"redux\";\r\nimport { NeverEverCard } from \"src/impl/cards/never-ever-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as State,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: baseStyles.smallHeaderStyle(theme),\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NeverEverComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h6\" color=\"inherit\">\r\n            <Translate id=\"slides.neverever.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"rotate(0deg)\",\r\n        from: { opacity: 0, transform: \"rotate(20deg)\" },\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <animated.div style={springProps} className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography style={{ marginTop: 20 }} color=\"inherit\" variant=\"subtitle1\">\r\n                        <Translate id=\"slides.neverever.instruction\" data={{ sips: state.sips }} />\r\n                    </Typography>\r\n                </div>\r\n            </animated.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NeverEverComponent) as React.ComponentType;\r\n\r\ninterface State extends TextSlideState {\r\n    sips: number;\r\n}\r\n\r\nexport class NeverEverSlide extends TextSlidePresenter<State, NeverEverCard> {\r\n    backgroundColor = colors.neverEver;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NeverEverCard\", \"NeverEverSlide\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: NeverEverCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n        };\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WouldYouRatherCard } from \"src/impl/cards/would-you-rather-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as WouldYouRatherSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: baseStyles.smallHeaderStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction WouldYouRatherSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h6\" color=\"inherit\">\r\n            <Translate id=\"slides.wouldyourather.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography style={{ marginTop: 20 }} color=\"inherit\" variant=\"subtitle1\">\r\n                        <Translate\r\n                            id=\"slides.wouldyourather.instruction\"\r\n                            data={{ sips: state.sips }}\r\n                        />\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(WouldYouRatherSlideComponent) as React.ComponentType;\r\n\r\ninterface WouldYouRatherSlideState extends TextSlideState {\r\n    sips: number;\r\n}\r\n\r\nexport class WouldYouRatherSlide extends TextSlidePresenter<\r\n    WouldYouRatherSlideState,\r\n    WouldYouRatherCard\r\n> {\r\n    backgroundColor = colors.wouldYouRather;\r\n    constructor(translator: Translator) {\r\n        super(translator, \"WyrCard\", \"WouldYouRatherSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: WouldYouRatherCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { DrinkCard } from \"src/impl/cards/drink-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DrinkSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DrinkSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DrinkSlideComponent) as React.ComponentType;\r\n\r\ninterface DrinkSlideState extends TextSlideState {}\r\nexport class DrinkSlide extends TextSlidePresenter<DrinkSlideState, DrinkCard> {\r\n    backgroundColor = colors.drink;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DrinkCard\", \"DrinkSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { VirusCard } from \"src/impl/cards/virus-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as VirusSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction VirusSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.virus.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(VirusSlideComponent) as React.ComponentType;\r\n\r\ninterface VirusSlideState extends TextSlideState {}\r\nexport class VirusSlide extends TextSlidePresenter<VirusSlideState, VirusCard> {\r\n    backgroundColor = colors.virus;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"VirusCard\", \"VirusSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { NoIdeaLosesCard } from \"src/impl/cards/no-idea-loses-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as NoIdeaLosesSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NoIdeaLosesSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NoIdeaLosesSlideComponent) as React.ComponentType;\r\n\r\ninterface NoIdeaLosesSlideState extends TextSlideState {}\r\nexport class NoIdeaLosesSlide extends TextSlidePresenter<NoIdeaLosesSlideState, NoIdeaLosesCard> {\r\n    backgroundColor = colors.noIdeaLoses;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NoIdeaLosesCard\", \"NoIdeaLosesSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { GroupGameCard } from \"src/impl/cards/group-game-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as GroupGameSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction GroupGameSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.groupgame.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(GroupGameSlideComponent) as React.ComponentType;\r\n\r\ninterface GroupGameSlideState extends TextSlideState {}\r\nexport class GroupGameSlide extends TextSlidePresenter<GroupGameSlideState, GroupGameCard> {\r\n    backgroundColor = colors.groupGame;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"GroupGameCard\", \"GroupGameSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { TaskCard } from \"src/impl/cards/task-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TaskSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction TaskSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.task.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <Typography style={{ opacity: 0.8, marginTop: 10 }} color=\"inherit\">\r\n                    <Translate id=\"slides.task.instruction\" />\r\n                </Typography>\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TaskSlideComponent) as React.ComponentType;\r\n\r\ninterface TaskSlideState extends TextSlideState {}\r\nexport class TaskSlide extends TextSlidePresenter<TaskSlideState, TaskCard> {\r\n    backgroundColor = colors.task;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"TaskCard\", \"TaskSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        let task = super.selectText(selection, selectedCard);\r\n        if (/[A-Z-a-z]$/g.test(task)) {\r\n            task = task + \".\";\r\n        }\r\n\r\n        return \"[Player99]: \" + task;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport * as actions from \"../actions\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Typography, Fab, createStyles, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport * as baseStyles from \"./base/helper\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        button: {\r\n            minWidth: 200,\r\n        }\r\n    });\r\n\r\ntype Props = RouteComponentProps & WithStyles<typeof styles>;\r\n\r\nfunction GameFinishedComponent({ history, classes }: Props) {\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <Typography color=\"inherit\" variant=\"h2\" gutterBottom>\r\n                    <Translate id=\"slides.gamefinished.title\" />\r\n                </Typography>\r\n                <Fab className={classes.button} variant=\"extended\" color=\"primary\" onClick={() => history.push(\"/\")}>\r\n                    <Translate id=\"slides.gamefinished.goBack\" />\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = withRouter(withStyles(styles)(GameFinishedComponent));\r\n\r\nexport class GameFinishedSlide implements SlidePresenter {\r\n    slideType = \"GameFinishedSlide\";\r\n    requiredCards = [];\r\n    backgroundColor = \"#000000\";\r\n\r\n    initialize(): RootAction[] {\r\n        return [actions.setSlideState({ state: {}, insights: null })];\r\n    }\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    render(): React.ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","import { TruthOrDareSlide } from './slides/TruthOrDareSlide';\r\nimport { DownSlide } from \"./slides/DownSlide\";\r\nimport { SlidePresenter } from \"./slides/base/slide-presenter\";\r\nimport { FactSlide } from \"./slides/FactSlide\";\r\nimport { NeverEverSlide } from \"./slides/NeverEverSlide\";\r\nimport { Translator } from \"GameModels\";\r\nimport { WouldYouRatherSlide } from './slides/WouldYouRatherSlide';\r\nimport { DrinkSlide } from './slides/DrinkSlide';\r\nimport { VirusSlide } from './slides/VirusSlide';\r\nimport { NoIdeaLosesSlide } from './slides/NoIdeaLosesSlide';\r\nimport { GroupGameSlide } from './slides/GroupGameSlide';\r\nimport { TaskSlide } from './slides/TaskSlide';\r\nimport { OpeningSlide } from './slides/OpeningSlide';\r\nimport { GameFinishedSlide } from './slides/GameFinishedSlide';\r\n\r\nexport type SlideComponents = { [type: string]: new(translator: Translator) => SlidePresenter };\r\n\r\nexport const slideComponents: SlideComponents = {\r\n    DownSlide,\r\n    FactSlide,\r\n    NeverEverSlide,\r\n    TruthOrDareSlide,\r\n    WouldYouRatherSlide,\r\n    DrinkSlide,\r\n    VirusSlide,\r\n    NoIdeaLosesSlide,\r\n    GroupGameSlide,\r\n    TaskSlide,\r\n    OpeningSlide,\r\n    GameFinishedSlide\r\n};\r\n","import { MelinaAlgorithm } from \"./../../core/selection/melina-algorithm\";\r\nimport { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { filter, mergeMap, tap, ignoreElements } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../store/index\";\r\nimport * as actions from \"./actions\";\r\nimport { getRandomSelectionAlgorithm } from \"./game-engine\";\r\nimport { slideComponents } from \"./component-registry\";\r\nimport { of } from \"rxjs\";\r\nimport { Translator } from \"GameModels\";\r\nimport { getSlideRegistrations } from \"./slides-processor\";\r\n\r\nexport const nextSlideEpic: Epic<RootAction, RootAction, RootState, Services> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.requestSlideAsync.request)),\r\n        mergeMap(x => of(...nextSlide(x.payload))),\r\n    );\r\n\r\nexport const redirectOnGameStartedEpic: Epic<\r\n    RootAction,\r\n    RootAction,\r\n    RootState,\r\n    Services\r\n> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.startGame)),\r\n        tap(action => action.payload.push(\"/play/game\")),\r\n        ignoreElements(),\r\n    );\r\n\r\nfunction nextSlide(translator: Translator): RootAction[] {\r\n    const now = new Date();\r\n    let state = store.getState();\r\n\r\n    const dueFollowUps = state.game.followUp.filter(x => x.due < now);\r\n    if (dueFollowUps.length > 0) {\r\n        const followUp = _.sortBy(dueFollowUps, x => x.due.getSeconds())[0];\r\n\r\n        const factory = slideComponents[followUp.slideType];\r\n        const slideInitalizer = new factory(translator);\r\n        const slideActions = slideInitalizer.initializeFollowUp(\r\n            followUp.selectedCard,\r\n            followUp.param,\r\n        );\r\n\r\n        return [actions.activateFollowUp(followUp), ...slideActions];\r\n    }\r\n\r\n    let selection = getRandomSelectionAlgorithm(state);\r\n    const slides = getSlideRegistrations(slideComponents);\r\n\r\n    const { willPower, memory } = selection.recomputeWillPower(state.game.willPowerMemory);\r\n    const willPowerActions = new Array<RootAction>();\r\n\r\n    if (willPower !== state.game.currentWillPower) {\r\n        if (!state.game.isWillPowerLocked) {\r\n            willPowerActions.push(actions.setWillPower(willPower));\r\n            state = { ...state, game: { ...state.game, currentWillPower: willPower } };\r\n            selection = getRandomSelectionAlgorithm(state);\r\n        }\r\n    }\r\n\r\n    if (memory.length > 0) {\r\n        willPowerActions.push(actions.addWillPowerMemory(memory));\r\n    }\r\n\r\n    let slideType = selection.selectNextSlide(slides);\r\n    if (slideType === undefined) {\r\n        // TODO: end game\r\n        slideType = \"GameFinishedSlide\";\r\n    }\r\n\r\n    const factory = slideComponents[slideType];\r\n    const slideInitalizer = new factory(translator);\r\n    const slideActions = slideInitalizer.initialize();\r\n\r\n    return [\r\n        actions.requestSlideAsync.success({\r\n            slide: slideType,\r\n            insights: (selection as MelinaAlgorithm).insights.slideWeights!,\r\n        }),\r\n        ...slideActions,\r\n        ...willPowerActions\r\n    ];\r\n}\r\n","import { SlideComponents } from \"./component-registry\";\r\nimport { SlideRegistration } from \"@core/slide-registration\";\r\n\r\nexport function getSlideRegistrations(components: SlideComponents): SlideRegistration[] {\r\n    const result = new Array<SlideRegistration>();\r\n\r\n    for (const component in components) {\r\n        if (components.hasOwnProperty(component)) {\r\n            const element = components[component];\r\n            const slide = new element({ languageCode: \"en\", translate: () => \"\" });\r\n            result.push({ slideType: slide.slideType, requestedCards: slide.requiredCards });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { combineEpics } from \"redux-observable\";\r\nimport * as settingsEpics from \"../features/settings/epics\";\r\nimport * as gameEpics from \"../features/game/epics\";\r\n\r\nexport default combineEpics(...Object.values(settingsEpics), ...Object.values(gameEpics));\r\n","import { compose } from \"redux\";\r\n\r\n// @ts-ignore\r\nexport const composeEnhancers =\r\n    (process.env.NODE_ENV === \"development\" &&\r\n        window &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n","import { PlayerSelectionInsights, SlideSelectionInsights } from \"./../../core/selection/insights\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { FollowUpSlide } from \"GameModels\";\r\nimport cuid from \"cuid\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport type GameState = Readonly<{\r\n    isStarted: boolean;\r\n\r\n    selectedSlide: string | null;\r\n    selectedCard: CardRef | null;\r\n\r\n    slideState: any | null;\r\n\r\n    currentWillPower: number;\r\n    isWillPowerLocked: boolean;\r\n    willPowerMemory: string[];\r\n\r\n    playerInsights: PlayerSelectionInsights | null;\r\n    slideInsights: SlideSelectionInsights | null;\r\n\r\n    startTime: Date | null;\r\n\r\n    cardsHistory: CardRef[];\r\n    slidesHistory: string[];\r\n    followUp: FollowUpSlide[];\r\n    activeFollowUp: FollowUpSlide | null;\r\n    currentSlideStatus: string;\r\n}>;\r\n\r\nexport default combineReducers<GameState, RootAction>({\r\n    cardsHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return [action.payload, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slidesHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return [action.payload.slide, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    isStarted: (state = false, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.startGame):\r\n                return true;\r\n            case getType(actions.cancelGame):\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedCard: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return action.payload;\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.selectedCard;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedSlide: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.slide;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.slideType;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideState: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n            case getType(actions.activateFollowUp):\r\n            case getType(actions.startGame):\r\n                return null;\r\n            case getType(actions.setSlideState):\r\n                return action.payload.state;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    followUp: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.enqueueFollowUp):\r\n                return [...state, action.payload];\r\n            case getType(actions.activateFollowUp):\r\n                return state.filter(x => x.due !== action.payload.due);\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    activeFollowUp: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    startTime: (state = null, action) => {\r\n        if (action.type === getType(actions.startGame)) {\r\n            return new Date();\r\n        }\r\n        return state;\r\n    },\r\n    isWillPowerLocked: (state = false, action) => {\r\n        if (action.type === getType(actions.setWillPowerLocked)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    currentWillPower: (state = 1, action) => {\r\n        if (action.type === getType(actions.setWillPower)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    willPowerMemory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addWillPowerMemory):\r\n                return [...state, ...action.payload];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    playerInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideState):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    currentSlideStatus: (state = \"\", action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return cuid();\r\n            case getType(actions.startGame):\r\n                return \"\";\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { slideWeights } from \"../../preferences\";\r\nimport _ from \"lodash\";\r\n\r\nexport type SettingsState = Readonly<{\r\n    preferOppositeGenders: boolean;\r\n    slides: Array<Weighted<string>>;\r\n    socialMediaPlatform: string;\r\n    sources: SourceInfo[];\r\n    tags: Array<Weighted<string>>;\r\n}>;\r\n\r\nexport default combineReducers<SettingsState, RootAction>({\r\n    sources: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addSource):\r\n                return [...state, action.payload];\r\n            case getType(actions.removeSource):\r\n                return state.filter(x => x.url !== action.payload);\r\n            case getType(actions.loadSourceAsync.request):\r\n                return state.map(item =>\r\n                    item.url === action.payload ? { ...item, isLoading: true } : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.success):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? {\r\n                              ...item,\r\n                              cards: action.payload.cards,\r\n                              errorMessage: null,\r\n                              isLoading: false,\r\n                              tags: _.uniq(\r\n                                  _.flatten(action.payload.cards.map(x => x.tags)).map(x =>\r\n                                      (x as string).toLowerCase(),\r\n                                  ),\r\n                              ),\r\n                          }\r\n                        : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.failure):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? { ...item, isLoading: false, errorMessage: action.payload.message }\r\n                        : item,\r\n                );\r\n            case getType(actions.setSourceWeight):\r\n                return state.map(item =>\r\n                    item.url === action.payload.value\r\n                        ? { ...item, weight: action.payload.weight }\r\n                        : item,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    preferOppositeGenders: (state = true, action) => {\r\n        if (action.type === getType(actions.setPreferOppositeGenders)) {\r\n            return action.payload;\r\n        }\r\n        return state;\r\n    },\r\n    slides: (state = GetSlideWeightedArray(), action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideWeight):\r\n                return state.map(x => (x.value === action.payload.value ? action.payload : x));\r\n            case getType(actions.resetWeights):\r\n                return GetSlideWeightedArray();\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    socialMediaPlatform: (state = \"Snapchat\", action) => {\r\n        if (action.type === getType(actions.setSocialMediaPlatform)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    tags: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setTagWeight):\r\n                const value = action.payload.value.toLowerCase();\r\n                const existingTag = state.find(x => x.value === value);\r\n                if (existingTag !== undefined) {\r\n                    return state.map(x =>\r\n                        x.value === value ? { value, weight: action.payload.weight } : x,\r\n                    );\r\n                } else {\r\n                    return [...state, action.payload];\r\n                }\r\n            case getType(actions.resetWeights):\r\n                return state.map(x => ({ ...x, weight: 0.5 }));\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n\r\nfunction GetSlideWeightedArray() {\r\n    const weightsList: Weighted<string>[] = [];\r\n    for (const key in slideWeights) {\r\n        if (slideWeights.hasOwnProperty(key)) {\r\n            const element = slideWeights[key];\r\n            weightsList.push({ value: key, weight: element });\r\n        }\r\n    }\r\n\r\n    return weightsList;\r\n}\r\n","import { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { combineReducers } from \"redux\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport * as actions from \"./actions\";\r\nimport { getType } from \"typesafe-actions\";\r\n\r\nexport type PlayState = Readonly<{\r\n    players: PlayerInfo[];\r\n    arrangements: PlayerArrangement[];\r\n}>;\r\n\r\nexport default combineReducers<PlayState, RootAction>({\r\n    players: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayer):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayer):\r\n                return state.filter(x => x.id !== action.payload);\r\n            case getType(actions.updatePlayer):\r\n                return state.map(player =>\r\n                    player.id === action.payload.id ? action.payload : player,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    arrangements: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayerArrangment):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayerArrangment):\r\n                return state.filter(x => x.p1 !== action.payload);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport gameReducer from \"../features/game/reducer\";\r\nimport settingsReducer from \"../features/settings/reducer\";\r\nimport playReducer from \"../features/play/reducer\";\r\nimport { localizeReducer } from \"react-localize-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    play: playReducer,\r\n    game: gameReducer,\r\n    settings: settingsReducer,\r\n    localize: localizeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport services from \"../services\";\r\nimport rootEpic from \"./root-epic\";\r\nimport { composeEnhancers } from \"./utils\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport { loadState, persistState } from \"./storage\";\r\n\r\nexport const epicMiddleware = createEpicMiddleware<RootAction, RootAction, RootState, Services>({\r\n    dependencies: services,\r\n});\r\n\r\n// configure middlewares\r\nconst middlewares = [epicMiddleware];\r\n\r\n// compose enchancers\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n// rehydrate state on app start\r\nconst initialState = loadState();\r\n\r\n// create store\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\npersistState(store);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\n// export store singleton instance\r\nexport default store;\r\n","import { CardDeck } from \"@core/card-deck\";\r\nimport { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GameStatus } from \"@core/game-status\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer } from \"GameModels\";\r\nimport seedrandom from \"seedrandom\";\r\nimport store from \"../../store\";\r\n\r\nexport function selectPlayers(\r\n    selection: SelectionAlgorithm,\r\n    players: PlayerSetting[],\r\n    predefined: SelectedPlayer[],\r\n    tags: string[],\r\n): SelectedPlayer[] {\r\n    const result = selection.selectPlayers(\r\n        players.map(x => x.gender),\r\n        players.map(x => {\r\n            const p = predefined.find(y => y.index === x.playerIndex);\r\n            if (p === undefined) {\r\n                return null;\r\n            }\r\n\r\n            return p.player;\r\n        }),\r\n        tags,\r\n    );\r\n    const selected = result.map((x, i) => ({ index: players[i].playerIndex, player: x }));\r\n\r\n    return selected;\r\n}\r\n\r\nexport function getRandomSelectionAlgorithm(state?: RootState): SelectionAlgorithm {\r\n    if (state === undefined) {\r\n        state = store.getState();\r\n    }\r\n\r\n    const random = seedrandom();\r\n    return new MelinaAlgorithm(extractGameStatus(state), random);\r\n}\r\n\r\nfunction extractGameStatus(state: RootState): GameStatus {\r\n    const currentStatus: GameStatus = {\r\n        decks: state.settings.sources\r\n            .filter(x => x.cards !== undefined)\r\n            .map(item => {\r\n                const result: CardDeck = { ...item, cards: item.cards || [] };\r\n                return result;\r\n            }),\r\n        cardsHistory: state.game.cardsHistory,\r\n        language: state.localize.languages.find(x => x.active)!.code,\r\n        players: state.play.players,\r\n        slides: state.settings.slides,\r\n        tags: state.settings.tags,\r\n        arrangements: state.play.arrangements,\r\n        preferOppositeGenders: state.settings.preferOppositeGenders,\r\n        slidesHistory: state.game.slidesHistory,\r\n        startTime: state.game.startTime!,\r\n        willPower: state.game.currentWillPower,\r\n    };\r\n\r\n    return currentStatus;\r\n}\r\n","import { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    createStyles,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n    FormControl,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\nimport { toFixedEnd } from \"@utils/string-extensions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Cell,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { compose } from \"redux\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { parsers } from \"../../../impl/registrations\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n});\r\n\r\nconst styles = createStyles({\r\n    chart: {\r\n        width: 200,\r\n        height: 300,\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & LocalizeContextProps;\r\ntype State = { selectedCardType: string | null };\r\n\r\nclass InsightsCards extends Component<Props, State> {\r\n    readonly state = { selectedCardType: null };\r\n\r\n    setSelectedCardType = (type: string) => {\r\n        this.setState({ selectedCardType: type === \"\" ? null : type });\r\n    };\r\n\r\n    render() {\r\n        const { translate, currentWillPower } = this.props;\r\n        const { selectedCardType } = this.state;\r\n\r\n        const cardTypes = [\"\", ...Object.keys(parsers)];\r\n\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const insights = selection.getAllCardDeckStatistics(selectedCardType);\r\n\r\n        const decksStatistics = percentageFixedTotal(insights.decks, x => x.weight, 1000).map(\r\n            x => ({\r\n                value: x.part / 10,\r\n                name: x.value.value.url,\r\n            }),\r\n        );\r\n\r\n        const willPowerStatistics = percentageFixedTotal(\r\n            insights.willPower,\r\n            x => x.weight,\r\n            1000,\r\n        ).map(x => ({\r\n            value: x.part / 10,\r\n            name: x.value.value.willPower || translate(\"insights.universal\"),\r\n            info: x.value.value,\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.cardsDist\" />\r\n                </Typography>\r\n                <Grid container alignItems=\"flex-end\" spacing={16}>\r\n                    <Grid item>\r\n                        <FormControl>\r\n                            <Select\r\n                                style={{ width: 200, marginTop: 10 }}\r\n                                value={selectedCardType || \"\"}\r\n                                displayEmpty={true}\r\n                                renderValue={x => x || translate(\"insights.allCards\")}\r\n                                onChange={ev => this.setSelectedCardType(ev.target.value)}\r\n                                input={<Input />}\r\n                            >\r\n                                {cardTypes.map(x => (\r\n                                    <MenuItem key={x} value={x}>\r\n                                        {x || translate(\"insights.allCards\")}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography>{`${translate(\"insights.cards\")}: ${insights.totalCards}`}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={decksStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" tickFormatter={x => toFixedEnd(x, 18)} />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={x => x + \"%\"}\r\n                            labelFormatter={url =>\r\n                                translate(\"insights.cardDeckName\", {\r\n                                    url,\r\n                                    cards: insights.decks.find(x => x.value.url === url)!.value\r\n                                        .cards.length,\r\n                                })\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            name={translate(\"insights.part\") as string}\r\n                            dataKey=\"value\"\r\n                            fill=\"#8884d8\"\r\n                            maxBarSize={20}\r\n                        />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.willPowerDist\" />\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={willPowerStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={(x, _, e) =>\r\n                                `${x}% (${e.payload.info.count} ${translate(\"insights.cards\")})`\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            dataKey=\"value\"\r\n                            maxBarSize={20}\r\n                            name={translate(\"insights.part\") as string}\r\n                        >\r\n                            {willPowerStatistics.map((entry, index) => (\r\n                                <Cell\r\n                                    fill={\r\n                                        entry.info.willPower === currentWillPower\r\n                                            ? \"#e74c3c\"\r\n                                            : \"#8884d8\"\r\n                                    }\r\n                                    key={index}\r\n                                />\r\n                            ))}\r\n                        </Bar>\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(InsightsCards) as React.ComponentType;\r\n","export function toFixedEnd(s: string, length: number) {\r\n    if (length > s.length) {\r\n        return s;\r\n    }\r\n\r\n    return \"..\" + s.substring(s.length - length - 2, s.length);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InsightsCurrentSlide from \"./InsightsCurrentSlide\";\r\nimport InsightsWillPowerView from \"./InsightsWillPowerView\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport InsightsCards from \"./InsightsCards\";\r\n\r\nexport default class InsightsView extends Component {\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <InsightsWillPowerView />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 10}}>\r\n                    <InsightsCurrentSlide />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 20}}>\r\n                    <InsightsCards />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport {\r\n    AppBar,\r\n    Slide,\r\n    createStyles,\r\n    WithStyles,\r\n    withStyles,\r\n    Toolbar,\r\n    Button,\r\n    Typography,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport InsightsView from \"./InsightsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing.unit,\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction InsightsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.push(\"/play/game\")}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.insights\" />\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/play/game\")}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <InsightsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(InsightsDialog) as React.ComponentType;\r\n","import { AppBar, Tab, Tabs, Theme } from \"@material-ui/core\";\r\nimport { createStyles, withStyles, WithStyles, WithTheme } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../../play/components/PlayerArrangementsDialog\";\r\nimport ConfigurationRoute from \"../../../routes/ConfigurationRoute\";\r\nimport PlayRoute from \"../../../routes/PlayRoute\";\r\nimport SourcesRoute from \"../../../routes/SourcesRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n        },\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        firstChildMargins: {\r\n            marginTop: 24,\r\n            marginLeft: 24,\r\n            marginRight: 24,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme & LocalizeContextProps;\r\n\r\ninterface State {\r\n    value: number;\r\n}\r\n\r\nclass SettingsView extends React.Component<Props, State> {\r\n    readonly state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (_event: any, value: number) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleChangeIndex = (index: number) => {\r\n        this.setState({ value: index });\r\n    };\r\n\r\n    render() {\r\n        const { classes, translate } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab label={translate(\"settings.players\")} />\r\n                        <Tab label={translate(\"settings.sources\")} />\r\n                        <Tab label={translate(\"settings.configuration\")} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && <PlayRoute />}\r\n                {value === 1 && <SourcesRoute />}\r\n                {value === 2 && <ConfigurationRoute />}\r\n\r\n                <Route path=\"/play/game/settings/arrangements\" component={PlayerArrangementsDialog} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withStyles(styles, { withTheme: true }),\r\n)(SettingsView) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport SettingsView from \"./SettingsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n    },\r\n    dialogPaper: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            height: \"80vh\",\r\n        }\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction SettingsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.push(\"/play/game\")}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                classes={{\r\n                    paperScrollPaper: classes.dialogPaper,\r\n                }}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.settings\" />\r\n                        </Typography>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={() => history.push(\"/play/game/settings/arrangements\")}\r\n                        >\r\n                            <PeopleIcon />\r\n                        </IconButton>\r\n                        <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <SettingsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(SettingsDialog) as React.ComponentType;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { slideComponents } from \"../component-registry\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & LocalizeContextProps;\r\n\r\nfunction SlideWrapper(props: Props) {\r\n    const { selectedSlide } = props;\r\n\r\n    if (selectedSlide === null) {\r\n        return <Typography variant=\"h3\">Loading game...</Typography>;\r\n    }\r\n\r\n    const factory = slideComponents[selectedSlide];\r\n    const slideInitalizer = new factory(toTranslator(props));\r\n    const springProps = useSpring({backgroundColor: slideInitalizer.backgroundColor, height: \"100%\"});\r\n\r\n    return <animated.div style={springProps}>{slideInitalizer.render()}</animated.div>;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(SlideWrapper) as React.ComponentType;\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect, DispatchProp } from \"react-redux\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { OpeningSlide } from \"../slides/OpeningSlide\";\r\nimport GameOptions from \"./GameOptions\";\r\nimport InsightsDialog from \"./InsightsDialog\";\r\nimport SettingsDialog from \"./SettingsDialog\";\r\nimport SlideWrapper from \"./SlideWrapper\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    current: state.game.currentSlideStatus,\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & DispatchProp;\r\n\r\nclass GameComponent extends Component<Props> {\r\n    public componentDidMount() {\r\n        if (this.props.selectedSlide !== null) {\r\n            return;\r\n        }\r\n        const openingSlide = new OpeningSlide();\r\n        const slideActions = openingSlide.initialize();\r\n\r\n        this.props.dispatch(\r\n            actions.requestSlideAsync.success({\r\n                slide: openingSlide.slideType,\r\n                insights: null,\r\n            }),\r\n        );\r\n\r\n        for (const action of slideActions) {\r\n            this.props.dispatch(action);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div\r\n                style={{ width: \"100%\", height: \"100%\", position: \"relative\", overflow: \"hidden\" }}\r\n            >\r\n                <SlideWrapper />\r\n                <div style={{ top: 10, right: 10, position: \"absolute\", zIndex: 100 }}>\r\n                    <GameOptions />\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/play/game/settings\" component={SettingsDialog} />\r\n                    <Route path=\"/play/game/insights\" component={InsightsDialog} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(GameComponent) as React.ComponentType;\r\n","import { CircularProgress, createStyles, Fade, Paper, Theme, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { markdownOptions } from \"@utils/material-markdown\";\r\nimport Axios from \"axios\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { DrinkingGame } from \"./registrations\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    paper: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n        margin: theme.spacing.unit * 2,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\ninterface Props extends RouteComponentProps, LocalizeContextProps, WithStyles<typeof styles> {\r\n    game: DrinkingGame;\r\n}\r\n\r\ninterface State {\r\n    isLoadingLang: string | null;\r\n    content: string | null;\r\n}\r\n\r\nclass DrinkingGameComponent extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        isLoadingLang: null,\r\n        content: null,\r\n    };\r\n\r\n    getLang(): string | null {\r\n        const { history, activeLanguage, game } = this.props;\r\n\r\n        const path = history.location.pathname;\r\n        if (path !== `/drinkingGames/${game.name}`) {\r\n            return null;\r\n        }\r\n\r\n        const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n\r\n        return translation.lang;\r\n    }\r\n\r\n    render() {\r\n        const { content, isLoadingLang } = this.state;\r\n        const { game, classes } = this.props;\r\n\r\n        const lang = this.getLang();\r\n        if (lang === null) {\r\n            return null;\r\n        }\r\n\r\n        if (content !== null && isLoadingLang === lang) {\r\n            return (\r\n                <Paper className={classes.paper}>\r\n                    <Markdown children={content} options={markdownOptions} />\r\n                </Paper>\r\n            );\r\n        }\r\n\r\n        if (isLoadingLang !== lang) {\r\n            Axios.get(`${process.env.PUBLIC_URL}/explanations/${game.name}.${lang}.md`).then(response => {\r\n                const currentLang = this.getLang();\r\n\r\n                if (currentLang !== lang) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    content: response.data,\r\n                    isLoadingLang: currentLang\r\n                });\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Fade\r\n                in={true}\r\n                style={{\r\n                    transitionDelay: \"800ms\",\r\n                    margin: 20,\r\n                }}\r\n                unmountOnExit\r\n            >\r\n                <CircularProgress />\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withLocalize(withStyles(styles)(DrinkingGameComponent)));\r\n","import React from \"react\";\r\nimport DrinkingGame from \"../features/drinking-games/DrinkingGame\";\r\nimport game from \"../features/drinking-games/registrations\";\r\n\r\nexport default function DrinkingGameRoute() {\r\n    return (\r\n        <div>\r\n            {game.map(x => (\r\n                <DrinkingGame key={x.name} game={x} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    createStyles,\r\n    Theme,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Translate } from \"react-localize-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: theme.spacing.unit * 2,\r\n            maxWidth: theme.spacing.unit * 100,\r\n        },\r\n        header: {\r\n            marginTop: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction AboutRoute({ classes }: Props) {\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                                <Translate id=\"about.title\" />\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                Drinctet - Drink That!\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                <Translate id=\"about.aboutText\" />\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" className={classes.header}>\r\n                                <Translate id=\"about.installation\" />\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                <Translate id=\"about.installationText\" />\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" className={classes.header}>\r\n                                <Translate id=\"about.version\" />\r\n                            </Typography>\r\n                            <Typography>{process.env.REACT_APP_GIT_INFO}</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AboutRoute);\r\n","import {\r\n    createStyles,\r\n    CssBaseline,\r\n    WithStyles,\r\n    withStyles,\r\n    WithTheme,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport AppDrawerContainer from \"./AppDrawerContainer\";\r\nimport PlayRoute from \"../routes/PlayRoute\";\r\nimport SourcesRoute from \"../routes/SourcesRoute\";\r\nimport ConfigurationRoute from \"../routes/ConfigurationRoute\";\r\nimport GameComponent from \"../features/game/components/GameComponent\";\r\nimport DrinkingGameRoute from \"../routes/DrinkingGameRoute\";\r\nimport AboutRoute from \"../routes/AboutRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        root: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n        },\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            flex: \"0 1 auto\",\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isStarted: state.game.isStarted,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & WithTheme;\r\n\r\nfunction App(props: Props) {\r\n    const { classes, isStarted } = props;\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div className={classes.root}>\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/play/game\"\r\n                        render={() => (!isStarted ? <Redirect to=\"/play\" /> : <GameComponent />)}\r\n                    />\r\n                    <Route\r\n                        path=\"/\"\r\n                        render={() => (\r\n                            <React.Fragment>\r\n                                <CssBaseline />\r\n                                <AppDrawerContainer />\r\n                                <main className={classes.content}>\r\n                                    <div className={classes.toolbar} />\r\n                                    <div style={{ flex: \"1 1 auto\" }}>\r\n                                        <Switch>\r\n                                            <Route\r\n                                                exact\r\n                                                path=\"/\"\r\n                                                render={() => <Redirect to=\"/play\" />}\r\n                                            />\r\n                                            <Route path=\"/play\" component={PlayRoute} />\r\n                                            <Route path=\"/sources\" component={SourcesRoute} />\r\n                                            <Route\r\n                                                path=\"/configuration\"\r\n                                                component={ConfigurationRoute}\r\n                                            />\r\n                                            <Route\r\n                                                path=\"/drinkingGames\"\r\n                                                component={DrinkingGameRoute}\r\n                                            />\r\n                                            <Route path=\"/about\" component={AboutRoute} />\r\n                                        </Switch>\r\n                                    </div>\r\n                                </main>\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles, { withTheme: true }),\r\n)(App) as React.ComponentType;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"tslib\";\r\nimport \"typeface-roboto\";\r\nimport App from \"./app/App\";\r\nimport \"./env\";\r\nimport { addSource, loadSourceAsync } from \"./features/settings/actions\";\r\nimport { addPlayer } from \"./features/play/actions\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport { initialize, LocalizeProvider, NamedLanguage } from \"react-localize-redux\";\r\nimport drinctetTranslations from \"./loc/drinctet.json\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { defaultSources } from \"./preferences\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst state = store.getState();\r\n\r\nif (state.settings.sources.length === 0) {\r\n    for (const src of defaultSources) {\r\n        const url = `${process.env.PUBLIC_URL}/${src}`;\r\n        store.dispatch(addSource(url));\r\n        store.dispatch(loadSourceAsync.request(url));\r\n    }\r\n}\r\nelse {\r\n    for (const src of state.settings.sources) {\r\n        store.dispatch(loadSourceAsync.request(src.url));\r\n    }\r\n}\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n    store.dispatch(addPlayer({ name: \"Vincent\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Melina\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Bursod\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Larny\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Sven\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Hufeld\", gender: \"Male\" }));\r\n}\r\n\r\nvar userLang = (navigator.language || ((navigator as any).userLanguage as string) || \"en\").split(\r\n    \"-\",\r\n)[0];\r\n\r\nconst languages: NamedLanguage[] = [\r\n    { code: \"en\", name: \"English\" },\r\n    { code: \"de\", name: \"Deutsch\" },\r\n];\r\nstore.dispatch(\r\n    initialize({\r\n        languages,\r\n        translation: drinctetTranslations,\r\n        options: { renderToStaticMarkup, defaultLanguage: userLang },\r\n    }),\r\n);\r\n\r\nconst Root = () => (\r\n    <div style={{ height: \"100%\" }}>\r\n        <Provider store={store}>\r\n            <LocalizeProvider store={store}>\r\n                <App />\r\n            </LocalizeProvider>\r\n        </Provider>\r\n    </div>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}