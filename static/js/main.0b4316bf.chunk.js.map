{"version":3,"sources":["env.ts","features/drinking-games/registrations.ts","features/drinking-games/DrinkingGameItems.tsx","app/AppDrawer.tsx","utils/path.ts","features/game/actions.ts","app/MainAppBar.tsx","app/AppDrawerContainer.tsx","features/play/actions.ts","features/play/components/AddPlayerForm.tsx","core/player-info.ts","features/play/selectors.ts","features/play/components/PlayerListItem.tsx","features/play/components/PlayerList.tsx","features/play/components/PlayerArrangements.tsx","features/play/components/PlayerArrangementsDialog.tsx","routes/PlayRoute.tsx","features/settings/actions.ts","features/settings/selectors.ts","features/settings/components/AddSourceForm.tsx","features/settings/components/SourcesListItem.tsx","features/settings/components/SourcesList.tsx","routes/SourcesRoute.tsx","features/settings/components/configuration/ChangeLanguage.tsx","features/settings/components/configuration/PlayerPairing.tsx","preferences.ts","features/settings/components/configuration/SocialMediaPlatform.tsx","features/settings/components/configuration/ItemPreferences.tsx","utils/statistics.ts","utils/string-extensions.ts","features/settings/components/configuration/SlidePreferences.tsx","features/settings/components/configuration/TagsPerferences.tsx","features/settings/components/configuration/ResetSettings.tsx","features/settings/components/Configuration.tsx","routes/ConfigurationRoute.tsx","utils/material-markdown.tsx","features/game/utils.ts","features/game/slides/base/helper.tsx","features/game/slides/OpeningSlide.tsx","utils/fullscreen.ts","features/game/components/GameOptions.tsx","features/game/components/InsightsCurrentSlide.tsx","features/game/components/InsightsWillPowerView.tsx","core/selection/insights.ts","core/selection/utils.ts","core/selection/selection-algorithm-base.ts","core/selection/melina-algorithm.ts","core/cards-loader.ts","core/cards/player-setting.ts","core/parsing/parser-helper.ts","core/parsing/base-card-parser.ts","core/cards/text-element.ts","core/cards/text-translation.ts","core/parsing/text-content-parser.ts","core/parsing/text-card-parser.ts","core/cards/text-card.ts","core/cards/base-card.ts","impl/cards/fact-card.ts","impl/parsing/fact-card-parser.ts","impl/cards/virus-card.ts","impl/parsing/virus-card-parser.ts","impl/parsing/default-text-card-parser.ts","impl/cards/down-card.ts","impl/cards/never-ever-card.ts","impl/cards/joke-card.ts","impl/cards/question-card.ts","impl/cards/task-card.ts","impl/cards/would-you-rather-card.ts","impl/cards/drink-card.ts","impl/cards/group-game-card.ts","impl/cards/no-idea-loses-card.ts","impl/registrations.tsx","services/api/cards-loader.ts","impl/default-card-parser-factory.ts","services/index.ts","features/settings/epics.ts","store/storage.ts","core/text-fragment.ts","core/fragments/raw-text-fragment.ts","core/fragments/variable-fragment.ts","core/fragments/player-reference-fragment.ts","core/fragments/sips-fragment.ts","core/fragments/random-number-fragment.ts","core/fragments/random-text-fragment.ts","core/fragments/gender-based-selection-fragment.ts","core/fragments/social-media-platform-fragment.ts","core/parsing/text-decoder/default-text-decoder.ts","core/parsing/text-decoder/text-decoder-consts.ts","features/game/formatter/text-formatter.ts","features/game/slides/base/text-slide-presenter.ts","features/game/slides/base/card-presenter.ts","features/game/slides/colors.ts","features/game/slides/TruthOrDareSlide.tsx","features/game/slides/DownSlide.tsx","features/game/slides/FactSlide.tsx","features/game/slides/NeverEverSlide.tsx","features/game/slides/WouldYouRatherSlide.tsx","features/game/slides/DrinkSlide.tsx","features/game/slides/VirusSlide.tsx","features/game/slides/NoIdeaLosesSlide.tsx","features/game/slides/GroupGameSlide.tsx","features/game/slides/TaskSlide.tsx","features/game/slides/GameFinishedSlide.tsx","features/game/component-registry.ts","features/game/epics.ts","features/game/slides-processor.ts","core/player-arrangement.ts","features/play/epics.ts","store/root-epic.ts","store/utils.ts","features/game/reducer.ts","features/settings/reducer.ts","features/play/reducer.ts","store/root-reducer.ts","store/index.ts","features/game/game-engine.ts","features/game/components/InsightsCards.tsx","features/game/components/InsightsView.tsx","features/game/components/InsightsDialog.tsx","features/game/components/SettingsView.tsx","features/game/components/SettingsDialog.tsx","features/game/components/SlideWrapper.tsx","features/game/components/GameComponent.tsx","features/drinking-games/DrinkingGame.tsx","routes/DrinkingGameRoute.tsx","routes/AboutRoute.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["process","LOCAL_STORAGE_VERSION","games","name","translations","lang","compose","withLocalize","withRouter","_ref","activeLanguage","history","undefined","code","translatedGames","map","game","translation","find","x","_","sortBy","_ref2","path","concat","react_default","a","createElement","index_es","key","button","onClick","push","selected","location","pathname","primary","drinctetRoutes","icon","FlightTakeoff_default","Layers_default","Settings_default","secondaryRoutes","Person_default","renderRoutes","routes","translate","route","startsWith","substring","DrinkingGamesMenu","state","isOpen","handleClick","event","_this","setState","stopPropagation","this","props","_this$props","classes","Fragment","Receipt_default","ExpandLess_default","ExpandMore_default","in","timeout","unmountOnExit","disablePadding","className","nested","DrinkingGameItems","React","Component","withStyles","theme","createStyles","toolbar","Object","objectSpread","mixins","paddingLeft","display","alignItems","spacing","unit","variant","AppDrawer_DrinkingGamesMenu","getRootPath","match","exec","length","startGame","createStandardAction","cancelGame","requestSlideAsync","createAsyncAction","applyCard","setSlideState","enqueueFollowUp","activateFollowUp","setWillPowerLocked","setWillPower","addWillPowerMemory","dispatchProps","actions","menuButton","defineProperty","marginLeft","marginRight","breakpoints","up","grow","flexGrow","appbar","connect","sources","settings","players","play","handleToggleDrawer","arePlayersSelected","areSourcesAdded","filter","cards","areSourcesLoading","isLoading","canPlay","position","color","aria-label","Menu_default","noWrap","react_localize_redux_es","id","es_Route","render","disabled","People_default","AppDrawerContainer","mobileOpen","handleDrawerToggle","setDrawerOpen","_this2","app_MainAppBar","appBar","drawer","mdUp","implementation","anchor","direction","open","onClose","onOpen","paper","drawerPaper","tabIndex","role","onKeyDown","AppDrawer","smDown","width","flexShrink","withTheme","addPlayer","playerInfo","payload","gender","cuid","updatePlayer","removePlayer","addPlayerArrangment","removePlayerArrangment","AddPlayerForm","handlePlayerNameChange","ev","currentTarget","value","handleAddClick","endsWith","handleFormKeyDown","e","preventDefault","react","style","Input_default","type","placeholder","onChange","Button_default","PlayerInfo","classCallCheck","getPlayers","getIconButtonStyle","margin","height","onRemoveClick","onSwapGenderClick","onNameChanged","IconButton_default","react_fontawesome_index_es","faMars","faVenus","error","onBlur","Delete_default","fontSize","selectors","List_default","player","ListItem_default","components_PlayerListItem","arrangements","arrangmentItem","borderBottom","paddingBottom","arrangementSelect","down","container","findIndex","p2","arrangment","p1","arrangedPlayerId","item","xs","lg","htmlFor","target","input","y","Transition","assign","withMobileDialog","breakpoint","flex","content","padding","overflowX","dialogPaper","fullscreenPaper","fullScreen","Dialog_default","goBack","TransitionComponent","fullWidth","maxWidth","paperScrollPaper","paperFullScreen","components_PlayerArrangements","tabContainer","flexDirection","headerMargin","paddingTop","paddingRight","fillRemaining","overflowY","components_AddPlayerForm","components_PlayerList","Route","component","PlayerArrangementsDialog","addSource","url","errorMessage","weight","tags","removeSource","loadSourceAsync","setSourceWeight","setPreferOppositeGenders","setSocialMediaPlatform","setSlideWeight","setTagWeight","resetWeights","resetAll","getSources","loadSource","request","AddSourceForm","handleUrlChange","sourceExists","LoadingItem","LoadingFailedItem","onReloadClick","WeightSlider","onChangeWeight","lab_index_es","max","min","step","n","root","backgroundColor","palette","background","title","textOverflow","wordBreak","overflow","_ref3","cardsCount","badgeContent","showZero","avatar","checked","b","titleTypographyProps","action","subheader","source","components_SourcesListItem","components_AddSourceForm","components_SourcesList","languages","setActiveLanguage","sm","md","inputProps","preferOppositeGenders","control","c","label","socialMediaPlatforms","slideWeights","DownSlide","DrinkSlide","FactSlide","GroupGameSlide","NeverEverSlide","NoIdeaLosesSlide","TaskSlide","TruthOrDareSlide","VirusSlide","WouldYouRatherSlide","higherArrangementPropabilityTags","automaticArrangements","Vincent","platform","socialMediaPlatform","gutterBottom","marginTop","ItemPreferences","items","getLabel","opacity","v","percentageFixedTotal","values","getPercentage","percentageValues","percent","total","reduce","result","Array","sum","prevBaseline","i","_percentageValues$i","sumRounded","Math","round","part","trimEnd","s","trim","index","lastIndexOf","slides","slidePercentages","configuration_ItemPreferences","data","count","fontWeight","decks","weights","uniq","flatMap","Configuration","marginBottom","configuration_ChangeLanguage","PlayerPairing","SocialMediaPlatform","configuration_SlidePreferences","TagsPerferences","configuration_ResetSettings","components_Configuration","Header","children","objectWithoutProperties","SizedHeader","SizedHeaderBlock","_ref8","markdownOptions","overrides","p","h1","h2","h3","h4","_ref4","fontFamily","li","_ref7","cardMarkdownOptions","_ref5","marginBlockStart","marginBlockEnd","h5","h6","blockquote","_ref6","borderLeft","toTranslator","localize","languageCode","contentStyle","textAlign","headerStyle","smallHeaderStyle","progressColor","nextSlide","slideState","justifyContent","cursor","-webkit-tap-highlight-color","rootProgress","top","left","bottom","zIndex","baseStyles","header","continuationDate","remaining","abs","Date","now","Container","Keyframes","Spring","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","from","config","duration","stop","_x","apply","arguments","tapToContinueProps","useSpring","delay","native","renderprops","div","esm","options","web","OpeningSlide","slideType","requiredCards","createClass","date","setSeconds","getSeconds","Error","insights","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","webkit","moz","ms","document","window","vendor","keys","Fullscreen","element","handler","addEventListener","removeEventListener","bind","Boolean","toLowerCase","styles","GameOptions","anchorEl","isFullscreen","handleMenuOpenClick","handleClose","handleNavigate","toggleFullscreen","documentElement","handleExit","onfullscreenchange","_this3","_this$state","MoreVert_default","PaperProps","DonutLarge_default","FullscreenExit_default","Fullscreen_default","Close_default","selectedSlide","activeFollowUp","selectedCard","section","scrollableTable","tableCellNoBreak","whiteSpace","renderPlayerInsights","playerInsights","predefined","join","renderPredefinedPlayers","rounds","statistics","number","playerId","conditionalBold","chosen","isBold","InsightsCurrentSlide","cardRef","slideInsights","card","wp","willPower","deckUrl","slide","renderSlideWeights","toggleContainer","currentWillPower","isLocked","isWillPowerLocked","exclusive","row","Insights","playerSelection","defaultRandomGenerator","random","selectRandomWeighted","getWeight","totalWeight","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","randomWeight","_i","MelinaAlgorithm","_SelectionAlgorithmBa","_getPrototypeOf2","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","deckExhaustionLimit","inherits","cardType","weightedDecks","weightCards","status","deckWeights","willPowerWeights","willPowerCounter","allCards","_loop","deck","toConsumableArray","boostWillPower","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_loop2","willPowerWeightsArray","propName","Number","totalCards","playerSettings","definedPlayers","forArrangement","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop4","arrangement","_iterator3","resultCounter","_loop3","sourceList","includes","malesCount","femalesCount","selectionRoundInsights","some","dominant","changed","_this4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop5","_iterator4","_loop6","_i4","_this5","perfectCards","unplayedCards","cardsHistory","percentage","unplayedWeight","console","log","factor","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","perfectCard","availableSlides","_this6","uniqueCardTypes","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_loop7","_iterator8","requestedCards","cardTypeRatings","_i5","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","cardDeck","weightedSlides","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_loop8","slideSettings","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iterator7","slidesHistory","lastSlideType","lastSlide","floor","getRandom","_this7","filtered","weightedTag","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_loop9","cardsPlayed","exhaustionFactor","pow","weightedCards","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","rateWillPower","getHistoryFactor","getTagsFactor","_iterator11","memory","addedMemory","getHours","slidesCount","tagWeights","historyPosition","cardWillPower","specification","specificationMales","actualMales","specificationFemales","actualFemales","SelectionAlgorithmBase","selectRandomFromWeightedList","CardsLoader","requestFile","parserFactory","domParser","DOMParser","_loadFromUrl","loadFile","abrupt","_loadFile","_callee2","xml","xmlDoc","cardElements","xmlElement","parser","_context2","sent","parseFromString","getElementsByTagName","parentElement","nodeName","parseDeckReference","createParser","deserialize","indexOf","_x2","_x3","_x4","getAttribute","deckWhitelist","referenceRequests","cardRefs","idAttr","cardId","PlayerSetting","playerIndex","ParserHelper","isNaN","genderRequirementMap","split","m","male","f","female","o","opposite","same","BaseCardParser","createCard","getDefaultAttributes","parseAttributes","subElements","tagName","parseElement","parsePlayers","parsePlayer","parsePlayerTag","requiredGender","genderAttr","genderReq","parseGenderRequirement","TextElement","TextTranslation","TextContentParser","isConditionalElement","parseTextElement","parseTranslation","textElement","texts","textXmlNode","textContent","TextCardParser","_BaseCardParser","textContentParser","rootXml","followUpAttr","followUpProbability","followUpPropability","followUpDelay","seconds","parseTimeSpanStringToSeconds","addElement","subElement","followUp","TextCard","_BaseCard","condition","language","BaseCard","FactCard","_TextCard","isTrueFact","FactCardParser","_TextCardParser","get","prototype","attr","toBool","VirusCard","VirusCardParser","DefaultTextCardParser","factory","DownCard","NeverEverCard","JokeCard","QuestionCard","TaskCard","WouldYouRatherCard","DrinkCard","GroupGameCard","NoIdeaLosesCard","parsers","WyrCard","loader","DefaultCardParserFactory","response","axios","loadCards","_loadCards","loadFromUrl","services","api","cardsLoader","loadSourceEpic","action$","_state$","pipe","isActionOf","mergeMap","success","catchError","message","of","failure","resetAllEpic","_services","tap","localStorage","clear","reload","ignoreElements","TextFragment","RawTextFragment","_TextFragment","text","VariableFragment","PlayerReferenceFragment","_VariableFragment","SipsFragment","minSips","sipsIndex","RandomNumberFragment","numbers","NumberRange","StaticNumber","RandomTextFragment","GenderBasedSelectionFragment","femaleText","maleText","referencedPlayerIndex","SocialMediaPlatformFragment","DefaultTextDecoder","lastTokenIndex","token","readToken","parseVariableFragment","parseRandomSelectionFragment","parseGenderSelectionFragment","playerTag","playerRef","parameterBegin","genderString","parsePlayerIndex","sipsTag","sipsFragment","test","parseNumberArray","splitQuoted","currentNumber","numberStart","isRangeToken","num","delimiter","tokenStart","withinQuotes","replace","nextChar","fragment","splitterIndex","reference","endChar","char","TextFormatter","fragments","requiredPlayers","groupBy","hasOwnProperty","rootSetting","sips","selection","lastPlayerFragment","boldPlayerNames","boldSips","sip","referencedPlayer","playerKeys","getCount","TextSlidePresenter","_CardPresenter","translator","formatted","gameEngine","selectText","formatText","initializeState","due","createFollowUp","param","_this$selectFollowUpT","selectFollowUpText","initializeFollowUpState","followUps","CardPresenter","selectCard","initializeCard","initializeFollowUpCard","decode","getRequiredPlayers","requiredSips","getRequiredSips","indexedPlayers","sipInfo","getSips","store","getState","format","viableContents","toLocaleLowerCase","colors","drink","fact","groupGame","neverEver","noIdeaLoses","truthOrDare","virus","wouldYouRather","task","_questionPaper","clickableRoot","spaceHeader","visibility","questionPaper","questionButtonsContainer","refuseMessage","isDeciding","selectedPlayer","select","decision","springProps","transform","QuestionComponent","markdownContent","DareComponent","TruthComponent","selectedText","getRandomSelectionAlgorithm","TruthOrDareSlide_Component","hidden","wobbly","to","_TextSlidePresenter","DownSlide_Component","isFollowUp","isTrue","availableFactSlideModes","selectedMode","FactSlide_Component","cardText","instruction","_selection","mode","NeverEverSlide_Component","_card","_players","WouldYouRatherSlide_Component","DrinkSlide_Component","VirusSlide_Component","NoIdeaLosesSlide_Component","GroupGameSlide_Component","TaskSlide_Component","minWidth","slideComponents","GameFinishedSlide","GameFinishedSlide_Component","nextSlideEpic","dueFollowUps","slideInitalizer","slideActions","initializeFollowUp","components","getSlideRegistrations","_selection$recomputeW","recomputeWillPower","willPowerMemory","willPowerActions","selectNextSlide","initialize","redirectOnGameStartedEpic","PlayerArrangement","state$","matches","toUpperCase","matchName","matchedPlayer","existingPlayer","addActions","combineEpics","settingsEpics","gameEpics","playEpics","composeEnhancers","combineReducers","getType","isStarted","startTime","currentSlideStatus","flatten","GetSlideWeightedArray","weightsList","rootReducer","playReducer","gameReducer","settingsReducer","localizeReducer","epicMiddleware","createEpicMiddleware","dependencies","middlewares","enhancer","applyMiddleware","initialState","getItem","JSON","parse","loadState","createStore","subscribe","toStore","setItem","stringify","run","rootEpic","selectPlayers","seedrandom","active","extractGameStatus","chart","InsightsCards","selectedCardType","setSelectedCardType","cardTypes","getAllCardDeckStatistics","decksStatistics","willPowerStatistics","info","displayEmpty","renderValue","es6","dataKey","tickFormatter","formatter","labelFormatter","fill","maxBarSize","entry","InsightsView","components_InsightsWillPowerView","components_InsightsCurrentSlide","components_InsightsCards","InsightsView_InsightsView","SettingsView","handleChange","_event","handleChangeIndex","indicatorColor","textColor","PlayRoute","SourcesRoute","ConfigurationRoute","firstChildMargins","components_SettingsView","GameComponent","openingSlide","dispatch","components_SlideWrapper","right","components_GameOptions","Switch","SettingsDialog","InsightsDialog","current","DrinkingGameComponent","isLoadingLang","_this$props2","getLang","Axios","then","currentLang","transitionDelay","gutters","DrinkingGameRoute","DrinkingGame","inline","flexFlow","BrowserRouter","basename","components_GameComponent","Redirect","app_AppDrawerContainer","exact","AboutRoute","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","src_iteratorNormalCompletion","src_didIteratorError","src_iteratorError","src_step","src_iterator","src","src_iteratorNormalCompletion2","src_didIteratorError2","src_iteratorError2","src_step2","src_iterator2","userLang","userLanguage","drinctetTranslations","renderToStaticMarkup","defaultLanguage","es","app_App","getElementById","URL","href","origin","fetch","contentType","headers","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0b4316bf.chunk.js","sourcesContent":["// @ts-ignore\r\nprocess.env.LOCAL_STORAGE_VERSION = 1;","export interface DrinkingGame {\r\n    name: string;\r\n    translations: DrinkingGameExplanation[];\r\n}\r\n\r\ninterface DrinkingGameExplanation {\r\n    name: string;\r\n    lang: string;\r\n}\r\n\r\nconst games: DrinkingGame[] = [\r\n    {\r\n        name: \"drinking-driving\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Drink & Drive\" },\r\n            { lang: \"en\", name: \"Drink & Drive\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"horse-racing\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pferderennen\" },\r\n            { lang: \"en\", name: \"Horse Racing\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"image-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Image Game\" },\r\n            { lang: \"en\", name: \"Image Game\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"pizza-box\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pizza Karton\" },\r\n            { lang: \"en\", name: \"Pizza Box\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"weird-talk\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Weird Talk\" },\r\n            { lang: \"en\", name: \"Weird Talk\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"whisper-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Flüsterspiel\" },\r\n            { lang: \"en\", name: \"Whisper Game\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"bus-driver\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Busfahrer\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"submarine\",\r\n        translations: [\r\n            { lang: \"de\", name: \"U-Boot\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"beer-bowling\",\r\n        translations: [\r\n            { lang: \"en\", name: \"Beer Bowling\" },\r\n            { lang: \"de\", name: \"Beer Bowling\" },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default games;","import React from \"react\";\r\nimport games from \"./registrations\";\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport _ from \"lodash\";\r\n\r\ntype Props = LocalizeContextProps & RouteComponentProps;\r\n\r\nfunction MenuItems({ activeLanguage, history }: Props) {\r\n    const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n    let translatedGames = games.map(game => {\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n\r\n        return { game, translation };\r\n    });\r\n\r\n    translatedGames = _.sortBy(translatedGames, x => x.translation.name);\r\n\r\n    return translatedGames.map(({ game, translation }) => {\r\n        const path = `/drinkingGames/${game.name}`;\r\n\r\n        return (\r\n            <ListItem\r\n                key={game.name}\r\n                button\r\n                onClick={() => history.push(path)}\r\n                selected={history.location.pathname === path}\r\n            >\r\n                <ListItemText primary={translation.name} />\r\n            </ListItem>\r\n        );\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withRouter,\r\n)(MenuItems) as React.ComponentType;\r\n","import {\r\n    Collapse,\r\n    createStyles,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport DrinkingGameItems from \"../features/drinking-games/DrinkingGameItems\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            paddingLeft: 20,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing.unit * 4,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & RouteComponentProps & LocalizeContextProps;\r\n\r\ninterface Route {\r\n    path: string;\r\n    icon: JSX.Element;\r\n}\r\n\r\nconst drinctetRoutes: Route[] = [\r\n    {\r\n        path: \"/play\",\r\n        icon: <FlightTakeoffIcon />,\r\n    },\r\n    {\r\n        path: \"/sources\",\r\n        icon: <LayersIcon />,\r\n    },\r\n    {\r\n        path: \"/configuration\",\r\n        icon: <SettingsIcon />,\r\n    },\r\n];\r\n\r\nconst secondaryRoutes: Route[] = [\r\n    {\r\n        path: \"/about\",\r\n        icon: <PersonIcon />,\r\n    },\r\n];\r\n\r\nfunction renderRoutes({ translate, history }: Props, routes: Route[]) {\r\n    return routes.map(route => (\r\n        <ListItem\r\n            key={route.path}\r\n            button\r\n            selected={history.location.pathname.startsWith(route.path)}\r\n            onClick={() => history.push(route.path)}\r\n        >\r\n            <ListItemIcon>{route.icon}</ListItemIcon>\r\n            <ListItemText primary={translate(`menu.${route.path.substring(1)}`)} />\r\n        </ListItem>\r\n    ));\r\n}\r\n\r\ninterface ExpandableItemState {\r\n    isOpen: boolean;\r\n}\r\n\r\nclass DrinkingGamesMenu extends React.Component<Props, ExpandableItemState> {\r\n    readonly state = { isOpen: false };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.pathname.startsWith(\"/drinkingGames\")) {\r\n            this.setState({ isOpen: true });\r\n        }\r\n    }\r\n\r\n    handleClick = (event: React.SyntheticEvent) => {\r\n        this.setState(state => ({ isOpen: !state.isOpen }));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { translate, classes } = this.props;\r\n        const { isOpen } = this.state;\r\n        const name = \"drinkingGames\";\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={this.handleClick} selected={false}>\r\n                    <ListItemIcon>\r\n                        <ReceiptIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={translate(`menu.${name}`)} />\r\n                    {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                </ListItem>\r\n                <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                    <List disablePadding>\r\n                        <div className={classes.nested}>\r\n                            <DrinkingGameItems />\r\n                        </div>\r\n                    </List>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction MainDrawer(props: Props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n                <div>\r\n                    <Typography variant=\"h6\">Drinctet</Typography>\r\n                    <Typography>The goal is to drink that!</Typography>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>{renderRoutes(props, drinctetRoutes)}</List>\r\n            <Divider />\r\n            <List>\r\n                <DrinkingGamesMenu {...props} />\r\n                <List>{renderRoutes(props, secondaryRoutes)}</List>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n    withLocalize,\r\n)(MainDrawer) as React.ComponentType;\r\n","export function getRootPath(path: string): string | null {\r\n    const match = /[a-zA-Z]+/g.exec(path);\r\n    return match !== null && match.length > 0 ? match[0] : null;\r\n}\r\n","import { PlayerSelectionInsights } from './../../core/selection/insights';\r\nimport { createStandardAction, createAsyncAction } from \"typesafe-actions\";\r\nimport { FollowUpSlide, Translator } from 'GameModels';\r\nimport { History } from 'history';\r\nimport { SlideSelectionInsights } from '@core/selection/insights';\r\nimport { CardRef } from '@core/cards/card-ref';\r\n\r\nexport const startGame = createStandardAction(\"START_GAME\")<History>();\r\n\r\nexport const cancelGame = createStandardAction(\"CANCEL_GAME\")();\r\n\r\nexport const requestSlideAsync = createAsyncAction(\r\n    \"NEXT_SLIDE_REQUEST\",\r\n    \"NEXT_SLIDE_SUCCESS\",\r\n    \"NEXT_SLIDE_FAILURE\",\r\n)<Translator, {slide: string, insights: SlideSelectionInsights | null}, string>();\r\n\r\nexport const applyCard = createStandardAction(\"APPLY_CARD\")<CardRef>();\r\n\r\nexport const setSlideState = createStandardAction(\"SET_SLIDE_STATE\")<{state: any, insights: PlayerSelectionInsights | null}>();\r\n\r\nexport const enqueueFollowUp = createStandardAction(\"ADD_FOLLOW_UP\")<FollowUpSlide>();\r\nexport const activateFollowUp = createStandardAction(\"ACTIVATE_FOLLOW_UP\")<FollowUpSlide>();\r\n\r\nexport const setWillPowerLocked = createStandardAction(\"SET_WILL_POWER_LOCKED\")<boolean>();\r\nexport const setWillPower = createStandardAction(\"SET_WILL_POWER\")<number>();\r\nexport const addWillPowerMemory = createStandardAction(\"ADD_WILL_POWER_MEMORY\")<string[]>();\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Theme,\r\n    Toolbar,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { Route, RouteComponentProps, withRouter } from \"react-router\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { getRootPath } from \"@utils/path\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as actions from \"../features/game/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                display: \"none\",\r\n            },\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        appbar: {},\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: state.settings.sources,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    startGame: actions.startGame,\r\n};\r\n\r\ninterface HandlerProps {\r\n    handleToggleDrawer(): void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> &\r\n    HandlerProps &\r\n    LocalizeContextProps &\r\n    RouteComponentProps &\r\n    ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps;\r\n\r\nfunction MainAppBar({ classes, handleToggleDrawer, history, sources, players, startGame }: Props) {\r\n    const arePlayersSelected = players.length > 1;\r\n    const areSourcesAdded = sources.filter(x => x.cards !== undefined).length > 0;\r\n    const areSourcesLoading = sources.filter(x => x.isLoading).length > 0;\r\n\r\n    const canPlay = arePlayersSelected && areSourcesAdded && !areSourcesLoading;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                    onClick={handleToggleDrawer}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} noWrap>\r\n                    <Translate id={`menu.${getRootPath(history.location.pathname)}`} />\r\n                </Typography>\r\n                <Route\r\n                    path=\"/play\"\r\n                    render={() => (\r\n                        <React.Fragment>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                disabled={players.length < 3}\r\n                                onClick={() => history.push(\"/play/arrangements\")}\r\n                            >\r\n                                <PeopleIcon />\r\n                            </IconButton>\r\n                            <Button color=\"inherit\" disabled={!canPlay} onClick={() => startGame(history)}>\r\n                                <Translate id=\"play.start\" />\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    )}\r\n                />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(\r\n    withLocalize(\r\n        withRouter(\r\n            connect(\r\n                mapStateToProps,\r\n                dispatchProps,\r\n            )(MainAppBar),\r\n        ),\r\n    ),\r\n);\r\n","import React from \"react\";\r\nimport {\r\n    createStyles,\r\n    WithStyles,\r\n    WithTheme,\r\n    Theme,\r\n    Hidden,\r\n    Drawer,\r\n    withStyles,\r\n    SwipeableDrawer,\r\n} from \"@material-ui/core\";\r\nimport MainDrawer from \"./AppDrawer\";\r\nimport MainAppBar from \"./MainAppBar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        appBar: {\r\n            marginLeft: drawerWidth,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n            },\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme;\r\ninterface State {\r\n    mobileOpen: boolean;\r\n}\r\n\r\nclass AppDrawerContainer extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        mobileOpen: false,\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    setDrawerOpen = (isOpen: boolean) => {\r\n        this.setState({ mobileOpen: isOpen });\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n        const { mobileOpen } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <MainAppBar\r\n                    classes={{ appbar: classes.appBar }}\r\n                    handleToggleDrawer={this.handleDrawerToggle}\r\n                />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden mdUp implementation=\"css\">\r\n                        <SwipeableDrawer\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                            open={mobileOpen}\r\n                            onClose={() => this.setDrawerOpen(false)}\r\n                            onOpen={() => this.setDrawerOpen(true)}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                tabIndex={0}\r\n                                role=\"button\"\r\n                                onClick={() => this.setDrawerOpen(false)}\r\n                                onKeyDown={() => this.setDrawerOpen(false)}\r\n                            >\r\n                                <MainDrawer />\r\n                            </div>\r\n                        </SwipeableDrawer>\r\n                    </Hidden>\r\n                    <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open\r\n                        >\r\n                            <MainDrawer />\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(AppDrawerContainer);\r\n","import { Gender, PlayerInfo } from \"@core/player-info\";\r\nimport cuid from \"cuid\";\r\nimport { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { createStandardAction } from \"typesafe-actions\";\r\n\r\nexport const addPlayer = createStandardAction(\"ADD_PLAYER\").map(\r\n    (playerInfo: { name: string; gender: Gender }): { payload: PlayerInfo } => ({\r\n        payload: {\r\n            name: playerInfo.name,\r\n            gender: playerInfo.gender,\r\n            id: cuid(),\r\n        },\r\n    }),\r\n);\r\n\r\nexport const updatePlayer = createStandardAction(\"UPDATE_PLAYER\")<PlayerInfo>();\r\nexport const removePlayer = createStandardAction(\"REMOVE_PLAYER\")<string>();\r\n\r\nexport const addPlayerArrangment = createStandardAction(\"ADD_PLAYER_ARRANGEMENT\")<\r\n    PlayerArrangement\r\n>();\r\nexport const removePlayerArrangment = createStandardAction(\"REMOVE_PLAYER_ARRANGEMENT\")<string>();\r\n","import * as React from \"react\";\r\nimport { addPlayer } from \"../actions\";\r\nimport { Gender } from \"@core/player-info\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\n\r\nconst dispatchProps = {\r\n    addPlayer,\r\n};\r\n\r\ntype Props = typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    name: string;\r\n};\r\n\r\nclass AddPlayerForm extends React.Component<Props, State> {\r\n    readonly state = { name: \"\" };\r\n\r\n    handlePlayerNameChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ name: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        let gender: Gender = \"Male\";\r\n        if (this.state.name.endsWith(\"a\"))\r\n            //sorry Luca\r\n            gender = \"Female\";\r\n\r\n        this.props.addPlayer({ name: this.state.name, gender });\r\n        this.setState({ name: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.name) this.handleAddClick();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        const { translate } = this.props;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={name}\r\n                        placeholder={translate(\"settings.players.playerName\") as string}\r\n                        onChange={this.handlePlayerNameChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!name}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    dispatchProps,\r\n)(withLocalize(AddPlayerForm));\r\n","export class PlayerInfo {\r\n    constructor(public id: string, public name: string, public gender: Gender) {}\r\n}\r\n\r\nexport type Gender = \"Male\" | \"Female\";\r\n","import { PlayState } from './reducer';\r\n\r\nexport const getPlayers = (state: PlayState) => state.players;","import { Gender } from \"../../../core/player-info\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVenus, faMars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps } from \"react-localize-redux\";\r\n\r\ninterface Props extends LocalizeContextProps {\r\n    name: string;\r\n    gender: Gender;\r\n    onRemoveClick: () => void;\r\n    onSwapGenderClick: () => void;\r\n    onNameChanged: (name: string) => void;\r\n}\r\n\r\nconst getIconButtonStyle = (): React.CSSProperties => ({\r\n    margin: -10,\r\n    width: 48,\r\n    height: 48,\r\n});\r\n\r\nfunction PlayerListItem({ name, gender, onRemoveClick, onSwapGenderClick, onNameChanged, translate }: Props) {\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <IconButton\r\n                aria-label=\"Swap Gender\"\r\n                onClick={onSwapGenderClick}\r\n                style={{ ...getIconButtonStyle(), marginRight: 0 }}\r\n            >\r\n                <Icon>\r\n                    <FontAwesomeIcon icon={gender === \"Male\" ? faMars : faVenus} />\r\n                </Icon>\r\n            </IconButton>\r\n            <Input\r\n                error={!name}\r\n                onBlur={() => {\r\n                    if (!name) onRemoveClick();\r\n                }}\r\n                style={{ flexGrow: 1, marginLeft: 5, marginRight: 5 }}\r\n                placeholder={translate(\"settings.willBeRemoved\") as string}\r\n                value={name}\r\n                onChange={ev => onNameChanged(ev.currentTarget.value)}\r\n            />\r\n            <IconButton\r\n                aria-label=\"Delete\"\r\n                onClick={onRemoveClick}\r\n                style={{ ...getIconButtonStyle(), marginLeft: 0 }}\r\n                tabIndex={-1}\r\n            >\r\n                <DeleteIcon fontSize=\"default\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withLocalize(PlayerListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { removePlayer, updatePlayer } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport PlayerListItem from \"./PlayerListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  players: selectors.getPlayers(state.play),\r\n});\r\n\r\nconst dispatchProps = {\r\n  removePlayer,\r\n  updatePlayer,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction PlayerList({ players, removePlayer, updatePlayer }: Props) {\r\n  return (\r\n    <List>\r\n      {players.map(player => (\r\n        <ListItem key={player.id}>\r\n          <ListItemText>\r\n            <PlayerListItem\r\n              name={player.name}\r\n              gender={player.gender}\r\n              onRemoveClick={() => removePlayer(player.id)}\r\n              onNameChanged={name =>\r\n                updatePlayer(new PlayerInfo(player.id, name, player.gender))\r\n              }\r\n              onSwapGenderClick={() =>\r\n                updatePlayer(\r\n                  new PlayerInfo(\r\n                    player.id,\r\n                    player.name,\r\n                    player.gender === \"Female\" ? \"Male\" : \"Female\",\r\n                  ),\r\n                )\r\n              }\r\n            />\r\n          </ListItemText>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  dispatchProps,\r\n)(PlayerList);\r\n","import React from \"react\";\r\nimport {\r\n    Typography,\r\n    WithStyles,\r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { addPlayerArrangment, removePlayerArrangment } from \"../actions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        arrangmentItem: {\r\n            borderBottom: \"1px solid #d8d8d8\",\r\n            paddingBottom: 5,\r\n        },\r\n        arrangementSelect: {\r\n            width: 200,\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                width: \"100%\",\r\n            },\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    players: state.play.players,\r\n    arrangements: state.play.arrangements,\r\n});\r\n\r\nconst dispatchProps = {\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles>;\r\n\r\nfunction PlayerArrangements({\r\n    classes,\r\n    players,\r\n    arrangements,\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle2\">\r\n                <Translate id=\"settings.configuration.arrangements\" />\r\n            </Typography>\r\n            <Typography>\r\n                <Translate id=\"settings.configuration.arrangements.description\" />\r\n            </Typography>\r\n            <Grid container>\r\n                {players\r\n                    .filter(player => arrangements.findIndex(x => x.p2 === player.id) === -1)\r\n                    .map(player => {\r\n                        const arrangment = arrangements.find(x => x.p1 === player.id);\r\n                        const arrangedPlayerId = arrangment === undefined ? \"\" : arrangment.p2;\r\n                        return (\r\n                            <Grid\r\n                                item\r\n                                container\r\n                                alignItems=\"flex-end\"\r\n                                className={classes.arrangmentItem}\r\n                                key={player.id}\r\n                            >\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Typography variant=\"subtitle1\">{player.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl className={classes.arrangementSelect}>\r\n                                        <InputLabel htmlFor=\"player-selection\">\r\n                                            <Translate id=\"settings.configuration.arrangements.pairWith\" />\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            value={arrangedPlayerId}\r\n                                            onChange={ev => {\r\n                                                const value = ev.target.value;\r\n                                                if (value === \"\") {\r\n                                                    removePlayerArrangment(player.id);\r\n                                                } else {\r\n                                                    addPlayerArrangment({\r\n                                                        p1: player.id,\r\n                                                        p2: value,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            input={<Input id=\"player-selection\" />}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>\r\n                                                    <Translate id=\"settings.configuration.arrangements.none\" />\r\n                                                </em>\r\n                                            </MenuItem>\r\n                                            {players\r\n                                                .filter(\r\n                                                    x =>\r\n                                                        x.id !== player.id &&\r\n                                                        arrangements.findIndex(\r\n                                                            y =>\r\n                                                                (y.p1 === x.id || y.p2 === x.id) &&\r\n                                                                y.p1 !== player.id,\r\n                                                        ) === -1,\r\n                                                )\r\n                                                .map(x => (\r\n                                                    <MenuItem key={x.id} value={x.id}>\r\n                                                        {x.name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(PlayerArrangements) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangements from \"./PlayerArrangements\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: \"relative\",\r\n        },\r\n        flex: {\r\n            flex: 1,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing.unit * 2,\r\n            overflowX: \"auto\",\r\n        },\r\n        dialogPaper: {\r\n            height: \"80vh\",\r\n        },\r\n        fullscreenPaper: {\r\n            height: \"100vh\",\r\n        },\r\n    });\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction PlayerArrangementsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClose={() => history.goBack()}\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            classes={{\r\n                paperScrollPaper: classes.dialogPaper,\r\n                paperFullScreen: classes.fullscreenPaper,\r\n            }}\r\n        >\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                        <Translate id=\"play.playerArrangements\" />\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                        <Translate id=\"close\" />\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.content}>\r\n                <PlayerArrangements />\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(PlayerArrangementsDialog) as React.ComponentType;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddPlayerForm from \"../features/play/components/AddPlayerForm\";\r\nimport PlayerList from \"../features/play/components/PlayerList\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../features/play/components/PlayerArrangementsDialog\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            maxWidth: 800,\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction PlayComponent({ classes }: Props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className={classes.tabContainer}>\r\n                <div className={classes.headerMargin}>\r\n                    <AddPlayerForm />\r\n                </div>\r\n                <div className={classes.fillRemaining}>\r\n                    <PlayerList />\r\n                </div>\r\n            </Grid>\r\n\r\n            <Route path=\"/play/arrangements\" component={PlayerArrangementsDialog} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n)(PlayComponent) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { createAsyncAction, createStandardAction } from \"typesafe-actions\";\r\nimport { Card } from \"@core/cards/card\";\r\n\r\nexport const addSource = createStandardAction(\"ADD_SOURCE\").map(\r\n    (url: string): { payload: SourceInfo } => ({\r\n        payload: {\r\n            url,\r\n            isLoading: false,\r\n            errorMessage: null,\r\n            cards: null,\r\n            weight: 0.5,\r\n            tags: []\r\n        },\r\n    }),\r\n);\r\nexport const removeSource = createStandardAction(\"REMOVE_SOURCE\")<string>();\r\n\r\nexport const loadSourceAsync = createAsyncAction(\r\n    \"LOAD_SOURCE_REQUEST\",\r\n    \"LOAD_SOURCE_SUCCESS\",\r\n    \"LOAD_SOURCE_FAILURE\",\r\n)<string, { url: string; cards: Card[] }, { url: string; message: string }>();\r\n\r\nexport const setSourceWeight = createStandardAction(\"SET_SOURCE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setPreferOppositeGenders = createStandardAction(\"SET_PREFER_OPPOSITE_GENDERS\")<\r\n    boolean\r\n>();\r\n\r\nexport const setSocialMediaPlatform = createStandardAction(\"SET_SOCIAL_MEDIA_PLATFORM\")<string>();\r\n\r\nexport const setSlideWeight = createStandardAction(\"SET_SLIDE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setTagWeight = createStandardAction(\"SET_TAG_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const resetWeights = createStandardAction(\"RESET_WEIGHTS\")();\r\nexport const resetAll = createStandardAction(\"RESET_ALL\")();\r\n","import {SettingsState} from \"./reducer\";\r\n\r\nexport const getSources = (state: SettingsState) => state.sources;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSource, loadSourceAsync } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    addSource,\r\n    loadSource: loadSourceAsync.request,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    url: string;\r\n};\r\n\r\nclass AddSourceForm extends React.Component<Props, State> {\r\n    readonly state = { url: \"\" };\r\n\r\n    handleUrlChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ url: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        if (!this.state.url || this.props.sources.findIndex(x => x.url === this.state.url) > -1) {\r\n            return;\r\n        }\r\n\r\n        this.props.addSource(this.state.url);\r\n        this.props.loadSource(this.state.url);\r\n        this.setState({ url: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.url) {\r\n                this.handleAddClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { url } = this.state;\r\n        const { translate } = this.props;\r\n        const sourceExists = this.props.sources.findIndex(x => x.url === this.state.url) > -1;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={url}\r\n                        placeholder={translate(\"settings.sources.sourceUrl\") as string}\r\n                        error={sourceExists}\r\n                        onChange={this.handleUrlChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!url || sourceExists}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(AddSourceForm));\r\n","import {\r\n    Card,\r\n    CardHeader,\r\n    Typography,\r\n    Link,\r\n    Checkbox,\r\n    withStyles,\r\n    Theme,\r\n    createStyles,\r\n    LinearProgress,\r\n    Badge,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport React from \"react\";\r\nimport { Slider } from \"@material-ui/lab\";\r\n\r\ninterface LoadingFailedItemProps {\r\n    errorMessage: string | null;\r\n    onReloadClick: () => void;\r\n}\r\n\r\ninterface WeightProps {\r\n    weight: number;\r\n    onChangeWeight: (value: number) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n        },\r\n        title: {\r\n            textOverflow: \"elipsis\",\r\n            wordBreak: \"break-all\",\r\n            overflow: \"hidden\",\r\n        },\r\n        fullWidth: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ninterface Props extends LoadingFailedItemProps, WeightProps, WithStyles<typeof styles> {\r\n    url: string;\r\n    isLoading: boolean;\r\n    cardsCount: number;\r\n    weight: number;\r\n    onRemoveClick: () => void;\r\n}\r\n\r\nfunction LoadingItem() {\r\n    return <LinearProgress />;\r\n}\r\n\r\nfunction LoadingFailedItem({ errorMessage, onReloadClick }: LoadingFailedItemProps) {\r\n    return (\r\n        <Typography color=\"secondary\" variant=\"body1\" component=\"small\">\r\n            {`${errorMessage}`}\r\n            <Link\r\n                style={{ marginLeft: 15 }}\r\n                component=\"button\"\r\n                variant=\"body1\"\r\n                onClick={onReloadClick}\r\n            >\r\n                Reload\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction WeightSlider({ weight, onChangeWeight }: WeightProps) {\r\n    return (\r\n        <Slider\r\n            max={1}\r\n            min={0}\r\n            step={0.05}\r\n            style={{ margin: 10, padding: '4px 0px' }}\r\n            value={weight}\r\n            onChange={(_, n) => onChangeWeight(n)}\r\n        />\r\n    );\r\n}\r\n\r\nfunction SourcesListItem({\r\n    url,\r\n    classes,\r\n    isLoading,\r\n    errorMessage,\r\n    cardsCount,\r\n    weight,\r\n    onRemoveClick,\r\n    onReloadClick,\r\n    onChangeWeight,\r\n}: Props) {\r\n    return (\r\n        <Badge\r\n            badgeContent={cardsCount}\r\n            color=\"primary\"\r\n            max={9999}\r\n            className={classes.fullWidth}\r\n            showZero={false}\r\n        >\r\n            <Card className={classes.fullWidth}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Checkbox\r\n                            checked={weight !== 0}\r\n                            style={{ margin: -10 }}\r\n                            onChange={(_, b) => (b ? onChangeWeight(0.5) : onChangeWeight(0))}\r\n                        />\r\n                    }\r\n                    titleTypographyProps={{ className: classes.title }}\r\n                    title={url}\r\n                    action={\r\n                        <IconButton onClick={onRemoveClick}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    }\r\n                    subheader={\r\n                        isLoading ? (\r\n                            <LoadingItem />\r\n                        ) : errorMessage ? (\r\n                            <LoadingFailedItem\r\n                                errorMessage={errorMessage}\r\n                                onReloadClick={onReloadClick}\r\n                            />\r\n                        ) : (\r\n                            <WeightSlider weight={weight} onChangeWeight={onChangeWeight} />\r\n                        )\r\n                    }\r\n                />\r\n            </Card>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SourcesListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadSourceAsync, removeSource, setSourceWeight } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport SourcesListItem from \"./SourcesListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    loadSource: loadSourceAsync.request,\r\n    removeSource,\r\n    setSourceWeight,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SourcesList({ sources, removeSource, loadSource, setSourceWeight }: Props) {\r\n    return (\r\n        <List>\r\n            {sources.map(source => (\r\n                <ListItem key={source.url}>\r\n                    <ListItemText>\r\n                        <SourcesListItem\r\n                            url={source.url}\r\n                            isLoading={source.isLoading}\r\n                            errorMessage={source.errorMessage}\r\n                            cardsCount={(source.cards && source.cards.length) || 0}\r\n                            weight={source.weight}\r\n                            onChangeWeight={weight =>\r\n                                setSourceWeight({ value: source.url, weight })\r\n                            }\r\n                            onRemoveClick={() => removeSource(source.url)}\r\n                            onReloadClick={() => loadSource(source.url)}\r\n                        />\r\n                    </ListItemText>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(SourcesList);\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddSourceForm from \"../features/settings/components/AddSourceForm\";\r\nimport SourcesList from \"../features/settings/components/SourcesList\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction SourcesComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.headerMargin}>\r\n                <AddSourceForm />\r\n            </div>\r\n            <div className={classes.fillRemaining}>\r\n                <SourcesList />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(SourcesComponent);\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Grid,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nconst styles = () =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ntype Props = LocalizeContextProps & WithStyles<typeof styles>;\r\n\r\nfunction ChangeLanguage({ activeLanguage, languages, setActiveLanguage, classes }: Props) {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={10} md={8} lg={6}>\r\n                <FormControl className={classes.root}>\r\n                    <InputLabel htmlFor=\"language-input\">\r\n                        <Translate id=\"settings.configuration.language\" />\r\n                    </InputLabel>\r\n                    <Select\r\n                        inputProps={{\r\n                            id: \"language-input\",\r\n                        }}\r\n                        style={{ width: \"100%\" }}\r\n                        value={activeLanguage === undefined ? \"en\" : activeLanguage.code}\r\n                        onChange={ev => setActiveLanguage(ev.target.value)}\r\n                    >\r\n                        {languages.map(lang => (\r\n                            <MenuItem key={lang.code} value={lang.code}>{lang.name}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(withLocalize(ChangeLanguage));\r\n","import { FormControlLabel, Switch, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setPreferOppositeGenders } from \"../../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    preferOppositeGenders: state.settings.preferOppositeGenders,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setPreferOppositeGenders,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\nfunction PlayerSettings({ preferOppositeGenders, setPreferOppositeGenders }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.playerSettings\" />\r\n            </Typography>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={preferOppositeGenders}\r\n                        onChange={(_, c) => setPreferOppositeGenders(c)}\r\n                    />\r\n                }\r\n                label={<Translate id=\"settings.configuration.playerSettings.pairOppositeGenders\" />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n)(PlayerSettings) as React.ComponentType;\r\n","export const socialMediaPlatforms = [\"Snapchat\", \"Instagram\", \"Facebook\"];\r\n\r\nexport const defaultSources = [\r\n    \"cards/Bevil.xml\",\r\n    \"cards/bullshitfact.xml\",\r\n    \"cards/common.xml\",\r\n    \"cards/ConversationStartersWorld.FunnyQuestions.xml\",\r\n    \"cards/ConversationStartersWorld.NeverHaveIEver.xml\",\r\n    \"cards/ConversationStartersWorld.TruthOrDareDare.xml\",\r\n    \"cards/ConversationStartersWorld.TruthOrDareTruth.xml\",\r\n    \"cards/ConversationStartersWorld.Wyr.xml\",\r\n    \"cards/ichundderalkohol.xml\",\r\n    \"cards/picolo/Picolo.xml\",\r\n    \"cards/picolo/Picolo.Silly.xml\",\r\n    \"cards/realfacts.xml\",\r\n];\r\n\r\nexport const slideWeights: { [key: string]: number } = {\r\n    DownSlide: 0.1,\r\n    DrinkSlide: 0.6,\r\n    FactSlide: 0.3,\r\n    GroupGameSlide: 0.3,\r\n    NeverEverSlide: 0.5,\r\n    NoIdeaLosesSlide: 0.3,\r\n    TaskSlide: 0.2,\r\n    TruthOrDareSlide: 0.35,\r\n    VirusSlide: 0.2,\r\n    WouldYouRatherSlide: 0.5,\r\n};\r\n\r\n// if a card has one of these tags and an arranged player is selected\r\n// the propability that their counterpart is selected is increased further\r\nexport const higherArrangementPropabilityTags = [\"sexual\"];\r\n\r\n// everyone uses what he can do best to get females\r\nexport const automaticArrangements: { [name: string]: string[] } = {\r\n    Vincent: [\"Melina\"],\r\n};\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport * as React from \"react\";\r\nimport { Typography, FormControl, Select, Input, MenuItem } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { setSocialMediaPlatform } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { socialMediaPlatforms } from \"../../../../preferences\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    platform: state.settings.socialMediaPlatform,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSocialMediaPlatform,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction ChangeLanguage({ platform, setSocialMediaPlatform }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.socialMediaPlatform\" />\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n                <Translate id=\"settings.configuration.socialMediaPlatform.description\" />\r\n            </Typography>\r\n            <FormControl>\r\n                <Select style={{width: 200, marginTop: 10}}\r\n                    value={platform}\r\n                    onChange={ev => setSocialMediaPlatform(ev.target.value)}\r\n                    input={<Input />}\r\n                >\r\n                    {socialMediaPlatforms.map(x => (\r\n                        <MenuItem key={x} value={x}>\r\n                            {x}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(ChangeLanguage));\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Slider } from \"@material-ui/lab\";\r\nimport * as React from \"react\";\r\n\r\ninterface Props {\r\n    items: Weighted<string>[];\r\n    onChangeWeight: (item: Weighted<string>) => void;\r\n    getLabel?: (name: string) => string;\r\n}\r\n\r\nclass ItemPreferences extends React.Component<Props> {\r\n    render() {\r\n        const { items, onChangeWeight, getLabel } = this.props;\r\n\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {items.map(x => \r\n                        <tr key={x.value}>\r\n                            <td>\r\n                                <Typography\r\n                                    style={{\r\n                                        opacity: x.weight === 0 ? 0.5 : 1,\r\n                                    }}\r\n                                >\r\n                                    {getLabel !== undefined ? getLabel(x.value): x.value}\r\n                                </Typography>\r\n                            </td>\r\n                            <td style={{width: \"100%\"}}>\r\n                                <Slider\r\n                                    max={1}\r\n                                    min={0}\r\n                                    style={{ padding: \"20px 0 20px 5px\", width: \"100%\" }}\r\n                                    step={0.05}\r\n                                    value={x.weight}\r\n                                    onChange={(_, v) =>\r\n                                        onChangeWeight({ value: x.value, weight: v })\r\n                                    }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n\r\n        // return (\r\n        //     <Grid container>\r\n        //         {items.map(x => (\r\n        //             <Grid key={x.value} item container alignItems=\"center\">\r\n        //                 <Grid item>\r\n        //                     <Typography\r\n        //                         style={{\r\n        //                             opacity: x.weight === 0 ? 0.5 : 1,\r\n        //                         }}\r\n        //                     >\r\n        //                         {x.value}\r\n        //                     </Typography>\r\n        //                 </Grid>\r\n        //                 <Grid item xs={8} lg={9}>\r\n        //                     <Slider\r\n        //                         max={1}\r\n        //                         min={0}\r\n        //                         style={{ padding: \"20px 0\" }}\r\n        //                         step={0.05}\r\n        //                         value={x.weight}\r\n        //                         onChange={(_, v) => onChangeWeight({ value: x.value, weight: v })}\r\n        //                     />\r\n        //                 </Grid>\r\n        //             </Grid>\r\n        //         ))}\r\n        //     </Grid>\r\n        // );\r\n    }\r\n}\r\n\r\nexport default ItemPreferences;\r\n","export function percentageFixedTotal<T>(\r\n    values: T[],\r\n    getPercentage: (x: T) => number,\r\n    target: number,\r\n): Array<{ value: T; part: number }> {\r\n    // https://stackoverflow.com/a/13483486\r\n    const percentageValues = values.map(value => ({ value, percent: getPercentage(value) }));\r\n    const total = percentageValues.reduce((x, y) => x + y.percent, 0);\r\n\r\n    const result = new Array<{ value: T; part: number }>();\r\n    let sum = 0;\r\n    let prevBaseline = 0;\r\n\r\n    for (let i = 0; i < percentageValues.length; i++) {\r\n        const {value, percent} = percentageValues[i];\r\n\r\n        sum += percent / total * target;\r\n        const sumRounded = Math.round(sum);\r\n\r\n        result.push({ value, part: sumRounded - prevBaseline });\r\n        prevBaseline = sumRounded;\r\n    }\r\n\r\n    return result;\r\n}\r\n","export function toFixedEnd(s: string, length: number) {\r\n    if (length > s.length) {\r\n        return s;\r\n    }\r\n\r\n    return \"..\" + s.substring(s.length - length - 2, s.length);\r\n}\r\n\r\nexport function trimEnd(s: string, trim: string) {\r\n    while (true) {\r\n        const index = s.lastIndexOf(trim);\r\n        if (index !== -1 && index === s.length - trim.length) {\r\n            s = s.substring(0, s.length - trim.length);\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setSlideWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\nimport { trimEnd } from \"@utils/string-extensions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slides: state.settings.slides,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSlideWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SlidePreferences({ slides, setSlideWeight }: Props) {\r\n    const totalCards = 50;\r\n    const slidePercentages = percentageFixedTotal(slides, x => x.weight, totalCards);\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.slides\" />\r\n            </Typography>\r\n            <ItemPreferences items={slides} onChangeWeight={x => setSlideWeight(x)} getLabel={x => trimEnd(x, \"Slide\")} />\r\n            <Typography>\r\n                <Translate\r\n                    id=\"settings.configuration.slidesProjection\"\r\n                    data={{ count: totalCards }}\r\n                />\r\n                {slidePercentages.map((x, i) => (\r\n                    <React.Fragment key={x.value.value}>\r\n                        <b style={{fontWeight: \"bolder\"}}>{trimEnd(x.value.value, \"Slide\")}</b>: {x.part}\r\n                        {i < slidePercentages.length - 1 ? \", \" : null}\r\n                    </React.Fragment>\r\n                ))}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(SlidePreferences));\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setTagWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    tags: state.settings.tags,\r\n    decks: state.settings.sources,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setTagWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction TagPreferences({ tags, decks, setTagWeight }: Props) {\r\n    const allTags = _.uniq(decks.flatMap(x => x.tags));\r\n    const weights = allTags.map(x => tags.find(y => y.value === x) || { value: x, weight: 0.5 });\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.tags\" />\r\n            </Typography>\r\n            <ItemPreferences items={weights} onChangeWeight={x => setTagWeight(x)} />\r\n            {weights.length === 0 ? (\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    <Translate id=\"settings.configuration.tags.none\" />\r\n                </Typography>\r\n            ) : (\r\n                undefined\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(TagPreferences));\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions\";\r\n\r\nconst dispatchProps = {\r\n    resetWeights: actions.resetWeights,\r\n    resetAll: actions.resetAll,\r\n};\r\n\r\ntype Props = typeof dispatchProps\r\n\r\nfunction ResetSettings({resetWeights, resetAll}: Props) {\r\n    return (\r\n        <Grid container spacing={16}>\r\n            <Grid item>\r\n                <Button color=\"secondary\" variant=\"outlined\" onClick={resetWeights}>\r\n                    <Translate id=\"settings.configuration.resetWeights\" />\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={resetAll}>\r\n                    <Translate id=\"settings.configuration.reset\" />\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default connect(null, dispatchProps)(ResetSettings);\r\n","import * as React from \"react\";\r\nimport ChangeLanguage from \"./configuration/ChangeLanguage\";\r\nimport PlayerPairing from \"./configuration/PlayerPairing\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SocialMediaPlatform from \"./configuration/SocialMediaPlatform\";\r\nimport SlidePreferences from \"./configuration/SlidePreferences\";\r\nimport TagsPerferences from \"./configuration/TagsPerferences\";\r\nimport ResetSettings from \"./configuration/ResetSettings\";\r\n\r\nclass Configuration extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid style={{ maxWidth: 800 }}>\r\n                <Grid container spacing={32} direction=\"column\">\r\n                    <Grid item style={{ marginBottom: 20 }}>\r\n                        <ChangeLanguage />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <PlayerPairing />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SocialMediaPlatform />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SlidePreferences />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TagsPerferences />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ResetSettings />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Configuration;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Configuration from \"../features/settings/components/Configuration\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            padding: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction ConfigurationComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.fillRemaining} style={{ overflowX: \"hidden\" }}>\r\n                <Configuration />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ConfigurationComponent);\r\n","import { ParsingOptions } from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { ThemeStyle } from \"@material-ui/core/styles/createTypography\";\r\n\r\nconst Header = (style: ThemeStyle) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant={style}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst SizedHeader = (fontSize: string) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant=\"h6\" style={{ fontSize }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nfunction Paragraph({ children, ...props }: any) {\r\n    return (\r\n        <Typography {...props} color=\"inherit\" component=\"p\">\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Code({ children, ...props }: any) {\r\n    return (\r\n        <Typography {...props} color=\"inherit\" component=\"p\" style={{fontSize: \"0.8em\", fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New',monospace\"}}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst SizedBlock = (fontSize: string) => ({ children, ...props }: any) => (\r\n        <Typography\r\n            color=\"inherit\"\r\n            {...props}\r\n            style={{ marginBlockStart: 5, marginBlockEnd: 5, fontSize }}\r\n        >\r\n            {children}\r\n        </Typography>)\r\n;\r\n\r\nconst BlockQuote = ({children, ...props}: any) => <div {...props} style={{borderLeft: \"1px solid white\", paddingLeft: 16}}>{children}</div>\r\nconst ListItem = ({children, ...props}: any) => <li {...props}><Typography>{children}</Typography></li>\r\n\r\nconst SizedHeaderBlock = (fontSize: string) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant=\"h6\" style={{ fontSize, marginTop: 16 }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport const markdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: Paragraph,\r\n            props: {},\r\n        },\r\n        h1: {\r\n            component: SizedHeaderBlock(\"1.4em\"),\r\n            props: {},\r\n        },\r\n        h2: {\r\n            component: SizedHeaderBlock(\"1.3em\"),\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: SizedHeaderBlock(\"1.2em\"),\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: SizedHeaderBlock(\"1.1em\"),\r\n            props: {},\r\n        },\r\n        code: {\r\n            component: Code,\r\n            props: {}\r\n        },\r\n        li: {\r\n            component: ListItem,\r\n            props: {}\r\n        },\r\n    },\r\n};\r\n\r\nexport const cardMarkdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: SizedBlock(\"1em\"),\r\n            props: {},\r\n        },\r\n        h1: {\r\n            component: Header(\"h5\"),\r\n            props: {},\r\n        },\r\n        h2: {\r\n            component: Header(\"h6\"),\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: SizedHeader(\"1.2em\"),\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: SizedHeader(\"1.1em\"),\r\n            props: {},\r\n        },\r\n        h5: {\r\n            component: SizedHeader(\"1.08em\"),\r\n            props: {},\r\n        },\r\n        h6: {\r\n            component: SizedHeader(\"1.05em\"),\r\n            props: {},\r\n        },\r\n        blockquote: {\r\n            component: BlockQuote,\r\n            props: {},\r\n        },\r\n    },\r\n};\r\n","import { LocalizeContextProps } from \"react-localize-redux\";\r\nimport { Translator } from \"GameModels\";\r\n\r\nexport function toTranslator(localize: LocalizeContextProps): Translator {\r\n    return {\r\n        languageCode: localize.activeLanguage.code,\r\n        translate: x => localize.translate(x) as string,\r\n    }\r\n}","import { Theme } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nexport function rootStyle(): CSSProperties {\r\n    return {\r\n        backgroundColor: \"transparent\",\r\n        height: \"100%\",\r\n        fontSize: 22,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        \"-webkit-tap-highlight-color\": \"rgba(255, 255, 255, 0)\",\r\n    };\r\n}\r\n\r\nexport function contentStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            width: \"100%\",\r\n            marginLeft: 30,\r\n            marginRight: 30,\r\n            fontSize: 18,\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"80%\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"60%\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function headerStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"2em\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function smallHeaderStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        color: \"white\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"1.5em\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function hidden(): CSSProperties {\r\n    return {\r\n        visibility: \"hidden\",\r\n    };\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated as animatedDom, useSpring } from \"react-spring\";\r\nimport { animated, Keyframes } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\n\r\nconst color = \"#2980b9\";\r\nconst progressColor = \"#3498db\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as OpeningSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...baseStyles.rootStyle(),\r\n            backgroundColor: color,\r\n            position: \"relative\",\r\n        },\r\n        rootProgress: {\r\n            height: \"100%\",\r\n            backgroundColor: progressColor,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            zIndex: 5,\r\n        },\r\n        content: {\r\n            ...baseStyles.contentStyle(theme),\r\n            zIndex: 10,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                width: \"100%\",\r\n                marginLeft: 30,\r\n                marginRight: 30,\r\n                fontSize: 16,\r\n            },\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction OpeningSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state, translate } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const { continuationDate } = state;\r\n    const remaining = Math.abs(+continuationDate - Date.now());\r\n\r\n    const Container = Keyframes.Spring(async (next: any) => {\r\n        await next({\r\n            from: { width: \"0%\" },\r\n            width: \"100%\",\r\n            config: {\r\n                duration: remaining,\r\n            },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: progressColor },\r\n            backgroundColor: color,\r\n            config: { duration: 200 },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: color },\r\n            backgroundColor: progressColor,\r\n            config: { duration: 200 },\r\n        });\r\n    }) as any;\r\n\r\n    const tapToContinueProps = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: remaining,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            onClick={() =>\r\n                (new Date() > continuationDate || process.env.NODE_ENV === \"development\") &&\r\n                nextSlide(toTranslator(props))\r\n            }\r\n        >\r\n            <Container native>\r\n                {(props: any) => <animated.div className={classes.rootProgress} style={props} />}\r\n            </Container>\r\n            <div className={classes.content}>\r\n                <Typography variant=\"h5\" color=\"inherit\" className={classes.header} gutterBottom>\r\n                    <Translate id=\"game.welcome\" />\r\n                </Typography>\r\n                <Markdown\r\n                    children={translate(\"game.openingInfo\") as string}\r\n                    options={cardMarkdownOptions}\r\n                />\r\n                <animatedDom.div style={tapToContinueProps}>\r\n                    <Typography style={{ color: \"white\", marginTop: 20 }} variant=\"h6\">\r\n                        <Translate id=\"game.tapToContinue\" />\r\n                    </Typography>\r\n                </animatedDom.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(OpeningSlideComponent) as React.ComponentType;\r\n\r\ninterface OpeningSlideState {\r\n    continuationDate: Date;\r\n}\r\n\r\nexport class OpeningSlide implements SlidePresenter {\r\n    slideType = \"OpeningSlide\";\r\n    requiredCards = [];\r\n    backgroundColor = color;\r\n\r\n    initialize(): RootAction[] {\r\n        const date = new Date();\r\n        date.setSeconds(date.getSeconds() + 5);\r\n\r\n        return [\r\n            this.setSlideState({\r\n                continuationDate: date,\r\n            }),\r\n        ];\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setSlideState(state: OpeningSlideState): RootAction {\r\n        return actions.setSlideState({ state, insights: null });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","// Source: https://github.com/vasilevich/react-fullscreen-crossbrowser (MIT)\r\n\r\nconst key: any = {\r\n    fullscreenEnabled: 0,\r\n    fullscreenElement: 1,\r\n    requestFullscreen: 2,\r\n    exitFullscreen: 3,\r\n    fullscreenchange: 4,\r\n    fullscreenerror: 5,\r\n};\r\n\r\nconst webkit = [\r\n    \"webkitFullscreenEnabled\",\r\n    \"webkitFullscreenElement\",\r\n    \"webkitRequestFullscreen\",\r\n    \"webkitExitFullscreen\",\r\n    \"webkitfullscreenchange\",\r\n    \"webkitfullscreenerror\",\r\n];\r\n\r\nconst moz = [\r\n    \"mozFullScreenEnabled\",\r\n    \"mozFullScreenElement\",\r\n    \"mozRequestFullScreen\",\r\n    \"mozCancelFullScreen\",\r\n    \"mozfullscreenchange\",\r\n    \"mozfullscreenerror\",\r\n];\r\n\r\nconst ms = [\r\n    \"msFullscreenEnabled\",\r\n    \"msFullscreenElement\",\r\n    \"msRequestFullscreen\",\r\n    \"msExitFullscreen\",\r\n    \"MSFullscreenChange\",\r\n    \"MSFullscreenError\",\r\n];\r\n\r\n// so it doesn't throw if no window or document\r\nconst document: any =\r\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\" ? window.document : {};\r\n\r\nconst vendor =\r\n    (\"fullscreenEnabled\" in document && Object.keys(key)) ||\r\n    (webkit[0] in document && webkit) ||\r\n    (moz[0] in document && moz) ||\r\n    (ms[0] in document && ms) ||\r\n    [];\r\n\r\nexport default class Fullscreen {\r\n    static requestFullscreen(element: any) {\r\n        return element[vendor[key.requestFullscreen]]();\r\n    }\r\n    static requestFullscreenFunction(element: any) {\r\n        return element[vendor[key.requestFullscreen]];\r\n    }\r\n    static get exitFullscreen() {\r\n        return document[vendor[key.exitFullscreen]].bind(document);\r\n    };\r\n    static addEventListener(type: any, handler: any, options: any) {\r\n        return document.addEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static removeEventListener(type: any, handler: any, options: any) {\r\n        return document.removeEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static get fullscreenEnabled() {\r\n        return Boolean(document[vendor[key.fullscreenEnabled]]);\r\n    }\r\n    static get fullscreenElement() {\r\n        return document[vendor[key.fullscreenElement]];\r\n    }\r\n    static get onfullscreenchange() {\r\n        return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenchange(handler) {\r\n        document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler;\r\n    }\r\n    static get onfullscreenerror() {\r\n        return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenerror(handler) {\r\n        document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler;\r\n    }\r\n}\r\n","import { createStyles, IconButton, ListItemIcon, Menu, MenuItem, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport Fullscreen from \"@utils/fullscreen\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component, ComponentType } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\n\r\nconst styles = createStyles({\r\n    button: {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles> &\r\n    RouteComponentProps;\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n    activeFollowUp: state.game.activeFollowUp,\r\n    selectedCard: state.game.selectedCard,\r\n});\r\n\r\nconst dispatchProps = {};\r\n\r\ninterface State {\r\n    anchorEl: HTMLElement | null;\r\n    isFullscreen: boolean;\r\n}\r\n\r\nclass GameOptions extends Component<Props, State> {\r\n    readonly state: State = {\r\n        anchorEl: null,\r\n        isFullscreen: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        Fullscreen.onfullscreenchange = () => {\r\n            this.setState(state => ({ ...state, isFullscreen: Fullscreen.fullscreenElement }));\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Fullscreen.onfullscreenchange = null;\r\n    }\r\n\r\n    handleMenuOpenClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleNavigate = (path: string) => {\r\n        this.handleClose();\r\n        this.props.history.push(`/play/game/${path}`);\r\n    };\r\n\r\n    toggleFullscreen = () => {\r\n        const { isFullscreen } = this.state;\r\n        if (isFullscreen) {\r\n            Fullscreen.exitFullscreen();\r\n        } else {\r\n            Fullscreen.requestFullscreen(window.document.documentElement);\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n    \r\n    handleExit = () => {\r\n        this.handleClose();\r\n        this.props.history.push(\"/play\");\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl, isFullscreen } = this.state;\r\n        const isOpen = anchorEl !== null;\r\n\r\n        return (\r\n            <div>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={this.handleMenuOpenClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={isOpen}\r\n                    onClose={this.handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => this.handleNavigate(\"settings\")}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.settings\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => this.handleNavigate(\"insights\")}>\r\n                        <ListItemIcon>\r\n                            <DonutLargeIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.insights\" />\r\n                    </MenuItem>\r\n                    {/* <MenuItem onClick={this.handleClose} disabled={selectedCard === null}>\r\n                        <ListItemIcon>\r\n                            <FeedbackIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.reportCard\" />\r\n                    </MenuItem> */}\r\n                    <MenuItem onClick={this.toggleFullscreen}>\r\n                        <ListItemIcon>\r\n                            {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\r\n                        </ListItemIcon>\r\n                        <Translate id={isFullscreen ? \"game.options.exitFullscreen\" : \"game.options.fullscreen\"} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleExit}>\r\n                        <ListItemIcon>\r\n                            <CloseIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.exit\" />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withLocalize,\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withRouter,\r\n)(GameOptions) as ComponentType;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, createStyles, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slide: state.game.selectedSlide,\r\n    slideInsights: state.game.slideInsights,\r\n    playerInsights: state.game.playerInsights,\r\n    players: state.play.players,\r\n    cardRef: state.game.selectedCard,\r\n});\r\n\r\nconst styles = createStyles({\r\n    section: {\r\n        marginTop: 10,\r\n    },\r\n    scrollableTable: {\r\n        overflow: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    tableCellNoBreak: {\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles>;\r\n\r\nfunction renderPredefinedPlayers({ playerInsights, players }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography>\r\n                <Translate id=\"insights.predefinedPlayers\" />\r\n                {\": \"}\r\n                {playerInsights!.predefined\r\n                    .map(x => players.find(y => y.id === x))\r\n                    .filter(x => x != null)\r\n                    .map(x => x!.name)\r\n                    .join(\", \")}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderPlayerInsights(props: Props) {\r\n    const { playerInsights, players, classes } = props;\r\n    return (\r\n        <div className={classes.scrollableTable}>\r\n            {playerInsights!.predefined.length > 0 ? renderPredefinedPlayers(props) : null}\r\n            {playerInsights!.rounds.map((x, i) => {\r\n                const statistics = percentageFixedTotal(x, x => x.weight, 1000);\r\n                return (\r\n                    <table key={i}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className={classes.tableCellNoBreak}>\r\n                                    <Typography>\r\n                                        <Translate id=\"insights.player\" data={{ number: i + 1 }} />:\r\n                                    </Typography>\r\n                                </td>\r\n                                {statistics.map(y => {\r\n                                    const player = players.find(p => p.id === y.value.playerId);\r\n                                    let element: JSX.Element;\r\n                                    if (player === undefined) {\r\n                                        element = (\r\n                                            <span>\r\n                                                <i>\r\n                                                    <Translate id=\"insights.playerRemoved\" />\r\n                                                </i>{\" \"}\r\n                                                ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    } else {\r\n                                        element = (\r\n                                            <span>\r\n                                                {player.name} ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    }\r\n\r\n                                    return (\r\n                                        <td key={y.value.playerId} style={{ paddingLeft: 10 }}>\r\n                                            <Typography>\r\n                                                {conditionalBold(element, y.value.chosen)}\r\n                                            </Typography>\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction conditionalBold(element: JSX.Element, isBold: boolean): JSX.Element {\r\n    if (isBold) {\r\n        return <b>{element}</b>;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nfunction renderSlideWeights({ slide, slideInsights }: Props) {\r\n    const slides = slideInsights!.weights;\r\n    const statistics = percentageFixedTotal(slides, x => x.weight, 1000);\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {statistics.map(x => (\r\n                    <tr key={x.value.value}>\r\n                        <td>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.value.value}</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                        <td style={{ paddingLeft: 10 }}>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.part / 10}%</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nclass InsightsCurrentSlide extends Component<Props> {\r\n    render() {\r\n        const { playerInsights, classes, cardRef, slideInsights } = this.props;\r\n        if (slideInsights === null) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.currentSlide\" />\r\n                </Typography>\r\n                <Typography>\r\n                    <Translate id=\"insights.currentCard\" />\r\n                    {\": \"}\r\n                    {cardRef === null ? (\r\n                        <i>\r\n                            <Translate id=\"insights.noCard\" />\r\n                        </i>\r\n                    ) : (\r\n                        <span>\r\n                            <Translate\r\n                                id=\"insights.cardInfo\"\r\n                                data={{\r\n                                    name: cardRef.card.type,\r\n                                    id: cardRef.card.id,\r\n                                    wp:\r\n                                        cardRef.card.willPower === undefined ? (\r\n                                            <Translate id=\"insights.universal\" />\r\n                                        ) : (\r\n                                            cardRef.card.willPower\r\n                                        ),\r\n                                    url: cardRef.deckUrl,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    )}\r\n                </Typography>\r\n                {renderSlideWeights(this.props)}\r\n\r\n                <Typography variant=\"h6\" className={classes.section}>\r\n                    <Translate id=\"insights.playerSelection\" />\r\n                </Typography>\r\n                {playerInsights === null ? (\r\n                    <Typography>\r\n                        <i>\r\n                            <Translate id=\"insights.noPlayers\" />\r\n                        </i>\r\n                    </Typography>\r\n                ) : (\r\n                    renderPlayerInsights(this.props)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsCurrentSlide) as React.ComponentType;\r\n","import { createStyles, FormControlLabel, FormGroup, Switch, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setWillPower, setWillPowerLocked } from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n    isLocked: state.game.isWillPowerLocked,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n};\r\n\r\nconst styles = \r\n    createStyles({\r\n        toggleContainer: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & WithStyles<typeof styles>;\r\n\r\nfunction InsightsWillPowerView({\r\n    currentWillPower,\r\n    isLocked,\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n    classes,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                <Translate id=\"insights.willPower\" />\r\n            </Typography>\r\n            <div className={classes.toggleContainer}>\r\n                <ToggleButtonGroup\r\n                    exclusive\r\n                    value={currentWillPower}\r\n                    onChange={(_, y) => setWillPower(y)}\r\n                    children={[1, 2, 3, 4, 5].map(x => (\r\n                        <ToggleButton key={x} value={x}>\r\n                            {x}\r\n                        </ToggleButton>\r\n                    ))}\r\n                />\r\n            </div>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch checked={isLocked} onChange={(_, x) => setWillPowerLocked(x)} />\r\n                    }\r\n                    label={<Translate id=\"insights.lockWillPower\" />}\r\n                />\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsWillPowerView) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { CardDeck } from \"@core/card-deck\";\r\n\r\nexport class Insights {\r\n    public playerSelection: PlayerSelectionInsights | null = null;\r\n    public slideWeights: SlideSelectionInsights | null  = null;\r\n}\r\n\r\nexport interface PlayerSelectionInsights {\r\n    predefined: string[];\r\n    rounds: Array<PlayerSelection[]>;\r\n}\r\n\r\nexport interface SlideSelectionInsights {\r\n    weights: Weighted<string>[];\r\n}\r\n\r\nexport interface PlayerSelection {\r\n    chosen: boolean;\r\n    weight: number;\r\n    playerId: string;\r\n}\r\n\r\nexport interface CardsInsight {\r\n    decks: Weighted<CardDeck>[];\r\n    willPower: Weighted<{willPower: number | null, count: number}>[];\r\n    totalCards: number;\r\n}\r\n","import { Weighted } from \"./../weighted\";\r\n\r\nexport type RNG = () => number;\r\nconst defaultRandomGenerator: RNG = () => Math.random();\r\n\r\nexport function selectRandomWeighted<T>(\r\n    items: T[],\r\n    getWeight: (item: T) => number,\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    if (items.length === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    const weights: Array<{ item: T; weight: number }> = [];\r\n    let totalWeight: number = 0;\r\n    for (const item of items) {\r\n        const weight = getWeight(item);\r\n        weights.push({ item, weight });\r\n\r\n        totalWeight += weight;\r\n    }\r\n\r\n    let randomWeight = totalWeight * random();\r\n    for (const { item, weight } of weights) {\r\n        if (weight === 0) {\r\n            continue;\r\n        }\r\n        randomWeight -= weight;\r\n\r\n        if (randomWeight <= 0) {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function selectRandomFromWeightedList<T>(\r\n    items: Weighted<T>[],\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    const result = selectRandomWeighted(items, item => item.weight, random);\r\n    if (result === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    return result.value;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { Weighted } from \"@core/weighted\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { SelectionAlgorithm } from \"./selection-algorithm\";\r\nimport { RNG, selectRandomFromWeightedList, selectRandomWeighted } from \"./utils\";\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport abstract class SelectionAlgorithmBase implements SelectionAlgorithm {\r\n    protected readonly random: RNG;\r\n\r\n    constructor(protected readonly status: GameStatus, random: RNG) {\r\n        this.random = random;\r\n    }\r\n\r\n    public abstract selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[];\r\n    public abstract selectNextSlide(availableSlides: SlideRegistration[]): string | undefined;\r\n    public abstract selectCard(cardType: string): CardRef;\r\n    public abstract getSips(min: number): number;\r\n    public abstract recomputeWillPower(memory: string[]): { willPower: number; memory: string[] };\r\n\r\n    public getRandom(): number {\r\n        return this.random();\r\n    }\r\n\r\n    public selectRandomWeighted<T>(items: T[], getWeight: (item: T) => number): T | undefined {\r\n        return selectRandomWeighted(items, getWeight, () => this.random());\r\n    }\r\n\r\n    protected selectRandomFromWeightedList<T>(items: Weighted<T>[]): T | undefined {\r\n        return selectRandomFromWeightedList(items, () => this.random());\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport _ from \"lodash\";\r\nimport { higherArrangementPropabilityTags } from \"../../preferences\";\r\nimport { CardDeck } from \"../card-deck\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { Gender, PlayerInfo } from \"../player-info\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { Weighted } from \"../weighted\";\r\nimport { CardsInsight, Insights, PlayerSelection, PlayerSelectionInsights } from \"./insights\";\r\nimport { SelectionAlgorithmBase } from \"./selection-algorithm-base\";\r\n\r\nexport class MelinaAlgorithm extends SelectionAlgorithmBase {\r\n    /** the percentage of cards that were played from one deck once the cards get weighted much lower */\r\n    private readonly deckExhaustionLimit = 0.1;\r\n\r\n    public readonly insights: Insights = new Insights();\r\n\r\n    public getAllCardDeckStatistics(cardType: string | null = null): CardsInsight {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n        const deckWeights: { [deckUrl: string]: number } = {};\r\n        const willPowerWeights: { [willPower: number]: number } = {};\r\n        const willPowerCounter: { [willPower: number]: number } = {};\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const deck of this.status.decks) {\r\n            deckWeights[deck.url] = 0;\r\n        }\r\n\r\n        for (const card of allCards) {\r\n            const { value, weight } = card;\r\n\r\n            const deck = this.status.decks.find(x => x.url === value.deckUrl)!;\r\n\r\n            deckWeights[value.deckUrl] += weight * deck.weight;\r\n\r\n            const willPower = value.card.willPower || 0;\r\n            if (willPowerCounter[willPower] === undefined) {\r\n                willPowerWeights[willPower] = 0;\r\n                willPowerCounter[willPower] = 0;\r\n            }\r\n\r\n            willPowerWeights[willPower] += weight * deck.weight;\r\n            willPowerCounter[willPower] += 1;\r\n        }\r\n\r\n        const willPowerWeightsArray: Weighted<{\r\n            willPower: number | null;\r\n            count: number;\r\n        }>[] = Object.keys(willPowerWeights).map(propName => {\r\n            const willPower = Number(propName);\r\n            return {\r\n                value: {\r\n                    willPower: willPower === 0 ? null : willPower,\r\n                    count: willPowerCounter[willPower],\r\n                },\r\n                weight: willPowerWeights[willPower],\r\n            };\r\n        });\r\n\r\n        const decksArray = Object.keys(deckWeights).map(url => {\r\n            const deck = this.status.decks.find(x => x.url === url)!;\r\n            return { value: deck, weight: deckWeights[url] * deck.weight };\r\n        });\r\n\r\n        return { decks: decksArray, willPower: willPowerWeightsArray, totalCards: allCards.length };\r\n    }\r\n\r\n    public selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[] {\r\n        if (playerSettings.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (playerSettings.length > this.status.players.length) {\r\n            throw new Error(\"More players were requested than available.\");\r\n        }\r\n\r\n        const forArrangement = new Array<string>();\r\n        const result: (PlayerInfo | null)[] = playerSettings.map((_, i) =>\r\n            definedPlayers.length > i ? definedPlayers[i] : null,\r\n        );\r\n\r\n        for (const player of definedPlayers.filter(x => x !== null).map(x => x!)) {\r\n            const arrangement = this.status.arrangements.find(\r\n                x => x.p1 === player.id || x.p2 === player.id,\r\n            );\r\n\r\n            if (arrangement !== undefined) {\r\n                if (arrangement.p1 === player.id) {\r\n                    forArrangement.push(arrangement.p2);\r\n                } else {\r\n                    forArrangement.push(arrangement.p1);\r\n                }\r\n            }\r\n        }\r\n\r\n        let resultCounter = 0;\r\n        const insights: PlayerSelectionInsights = {\r\n            predefined: definedPlayers.filter(x => x != null).map(x => x!.id),\r\n            rounds: [],\r\n        };\r\n\r\n        while (result.findIndex(x => x === null) !== -1) {\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                if (result[i] !== null) {\r\n                    continue;\r\n                }\r\n\r\n                const gender = playerSettings[i];\r\n                let sourceList: PlayerInfo[];\r\n\r\n                switch (gender) {\r\n                    case \"None\":\r\n                        sourceList = this.status.players;\r\n                        break;\r\n                    case \"Male\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Male\");\r\n                        break;\r\n                    case \"Female\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Female\");\r\n                        break;\r\n                    default:\r\n                        continue;\r\n                }\r\n\r\n                const source = sourceList.filter(x => !_.includes(result, x));\r\n                const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n                const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n\r\n                const selectionRoundInsights = new Array<PlayerSelection>();\r\n                const player = this.selectRandomWeighted(source, p => {\r\n                    let weight = 1;\r\n\r\n                    if (_.some(forArrangement, x => x === p.id)) {\r\n                        if (\r\n                            _.some(higherArrangementPropabilityTags, x =>\r\n                                _.some(tags, y => x === y.toLowerCase()),\r\n                            )\r\n                        ) {\r\n                            weight += source.length;\r\n                        } else {\r\n                            // everyone has ~ the weight 1\r\n                            weight += source.length * 0.5;\r\n                        }\r\n                    }\r\n\r\n                    if (gender === \"None\" && this.status.preferOppositeGenders) {\r\n                        if (malesCount > femalesCount) {\r\n                            if (p.gender === \"Female\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        } else if (femalesCount > malesCount) {\r\n                            if (p.gender === \"Male\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    selectionRoundInsights.push({ playerId: p.id, weight, chosen: false });\r\n                    return weight;\r\n                })!;\r\n\r\n                selectionRoundInsights.find(x => x.playerId === player.id)!.chosen = true;\r\n                insights.rounds.push(selectionRoundInsights);\r\n\r\n                result[i] = player;\r\n                resultCounter++;\r\n\r\n                const arrangement = this.status.arrangements.find(\r\n                    x => x.p1 === player.id || x.p2 === player.id,\r\n                );\r\n                if (arrangement !== undefined) {\r\n                    if (arrangement.p1 === player.id) {\r\n                        forArrangement.push(arrangement.p2);\r\n                    } else {\r\n                        forArrangement.push(arrangement.p1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultCounter === result.length) {\r\n                break;\r\n            }\r\n\r\n            // here we have to handle Same/Opposite genders\r\n\r\n            const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n            const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n            let dominant: Gender | null = null;\r\n\r\n            if (malesCount > femalesCount) dominant = \"Male\";\r\n            else if (femalesCount > malesCount) dominant = \"Female\";\r\n\r\n            if (dominant === null) {\r\n                // we try to change a 'Same' gender, so Same and opposite stay on different sites\r\n                // because the player gender will become dominant and opposite is always against dominant\r\n\r\n                let changed = false;\r\n                for (let i = 0; i < playerSettings.length; i++) {\r\n                    if (playerSettings[i] === \"Same\") {\r\n                        playerSettings[i] = \"None\";\r\n                        changed = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!changed) {\r\n                    // we have the problem here that we only have opposite genders left but we have no dominant gender.\r\n                    // We change the first opposite to none (so it gets filled) and all other to Same, so they will get\r\n                    // the same gender like the first item that was changed to Same\r\n\r\n                    for (let i = 0; i < playerSettings.length; i++) {\r\n                        if (playerSettings[i] === \"Opposite\") {\r\n                            if (!changed) {\r\n                                playerSettings[i] = \"None\";\r\n                                changed = true;\r\n                            } else {\r\n                                playerSettings[i] = \"Same\";\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                const gender = playerSettings[i];\r\n\r\n                switch (gender) {\r\n                    case \"Opposite\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Male\";\r\n                        } else {\r\n                            playerSettings[i] = \"Female\";\r\n                        }\r\n                        break;\r\n                    case \"Same\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Female\";\r\n                        } else {\r\n                            playerSettings[i] = \"Male\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.insights.playerSelection = insights;\r\n        return result.map(x => x!);\r\n    }\r\n\r\n    public selectCard(cardType: string): CardRef {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const card of allCards) {\r\n            const deck = this.status.decks.find(x => x.url === card.value.deckUrl)!;\r\n            card.weight *= deck.weight;\r\n        }\r\n\r\n        const selected = this.selectRandomWeighted(allCards, x => x.weight);\r\n        if (selected === undefined) {\r\n            throw new Error(\"That should not actually happen\");\r\n        }\r\n\r\n        return selected.value;\r\n    }\r\n\r\n    private boostWillPower(cards: Weighted<CardRef>[]): void {\r\n        const willPower = this.status.willPower;\r\n\r\n        const perfectCards = cards.filter(\r\n            x => x.value.card.willPower === willPower || x.value.card.willPower === willPower - 1,\r\n        );\r\n        const unplayedCards = perfectCards.filter(\r\n            x =>\r\n                this.status.cardsHistory.findIndex(\r\n                    y => y.deckUrl === x.value.deckUrl && y.card.id === x.value.card.id,\r\n                ) === -1,\r\n        );\r\n\r\n        // played cards / all cards\r\n        const percentage = (perfectCards.length - unplayedCards.length) / perfectCards.length;\r\n\r\n        // console.log(\r\n        //     `wp: ${willPower}, perfect: ${perfectCards.length}, unplayed: ${\r\n        //         unplayedCards.length\r\n        //     }, percentage: ${percentage}`,\r\n        // );\r\n\r\n        // we don't boost if we already played 10% (deckExhaustionLimit) of the cards\r\n        if (this.deckExhaustionLimit > percentage && unplayedCards.length > 50) {\r\n            const totalWeight = cards.reduce((x, y) => x + y.weight, 0);\r\n            const unplayedWeight = unplayedCards.reduce((x, y) => x + y.weight, 0);\r\n\r\n            console.log(`total: ${totalWeight}, unplayed: ${unplayedWeight}`);\r\n\r\n            const targetPercentage = 0.7;\r\n            if (totalWeight * targetPercentage > unplayedWeight) {\r\n                const factor =\r\n                    totalWeight * targetPercentage -\r\n                    unplayedWeight +\r\n                    unplayedWeight / unplayedWeight;\r\n\r\n                // const diff = (totalWeight * targetPercentage - unplayedWeight);\r\n                // const add = diff / unplayedCards.length;\r\n                console.log(\"factor: \" + factor);\r\n\r\n                // const add = (totalWeight - unplayedWeight) / perfectCards.length;\r\n                for (const perfectCard of unplayedCards) {\r\n                    perfectCard.weight = perfectCard.weight * factor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public selectNextSlide(availableSlides: SlideRegistration[]): string | undefined {\r\n        const uniqueCardTypes: string[] = [];\r\n        for (const slide of availableSlides) {\r\n            for (const cardType of slide.requestedCards) {\r\n                if (uniqueCardTypes.findIndex(x => x === cardType) === -1) {\r\n                    uniqueCardTypes.push(cardType);\r\n                }\r\n            }\r\n        }\r\n\r\n        const cardTypeRatings: { [type: string]: number } = {};\r\n        for (const cardType of uniqueCardTypes) {\r\n            const weightedDecks = this.weightCards(\r\n                this.status.decks.filter(x => x.weight !== 0),\r\n                cardType,\r\n            );\r\n\r\n            const allCards: Array<Weighted<Card>> = [];\r\n            for (const cardDeck of weightedDecks) {\r\n                allCards.push(...cardDeck.cards);\r\n            }\r\n\r\n            if (allCards.length === 0) {\r\n                cardTypeRatings[cardType] = 0;\r\n            } else {\r\n                cardTypeRatings[cardType] =\r\n                    0.75 + (0.25 * allCards.reduce((x, y) => x + y.weight, 0)) / allCards.length;\r\n            }\r\n        }\r\n\r\n        const weightedSlides: Array<Weighted<SlideRegistration>> = [];\r\n        for (const slide of availableSlides) {\r\n            const slideSettings = this.status.slides.find(x => x.value === slide.slideType);\r\n\r\n            if (slideSettings === undefined || slideSettings.weight === 0) {\r\n                continue;\r\n            }\r\n\r\n            let factor = 1;\r\n            for (const cardType of slide.requestedCards) {\r\n                factor = Math.min(cardTypeRatings[cardType], factor);\r\n            }\r\n\r\n            if (factor === 0) {\r\n                continue;\r\n            }\r\n\r\n            weightedSlides.push({ weight: factor * slideSettings.weight, value: slide });\r\n        }\r\n\r\n        if (weightedSlides.length > 2 && availableSlides.length > 2 && this.status.slidesHistory.length > 0) {\r\n            const lastSlideType = this.status.slidesHistory[0];\r\n            const lastSlide = weightedSlides.find(x => x.value.slideType === lastSlideType);\r\n            if (lastSlide !== undefined) {\r\n                lastSlide.weight = 0;\r\n            }\r\n        }\r\n\r\n        this.insights.slideWeights = {\r\n            weights: weightedSlides.map(x => ({ weight: x.weight, value: x.value.slideType })),\r\n        };\r\n\r\n        const selected = this.selectRandomWeighted(weightedSlides, slide => slide.weight);\r\n        if (selected === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return selected.value.slideType;\r\n    }\r\n\r\n    public getSips(min: number): number {\r\n        min = Math.max(min, 1);\r\n\r\n        return Math.max(min, Math.floor(this.getRandom() * 4) + 1);\r\n    }\r\n\r\n    protected weightCards(\r\n        decks: CardDeck[],\r\n        type: string | null,\r\n    ): Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> {\r\n        const filtered: CardDeck[] = decks.map(x => ({\r\n            cards: x.cards.filter(card => {\r\n                if (type !== null && card.type !== type) {\r\n                    return false;\r\n                }\r\n\r\n                return (\r\n                    card.tags.length === 0 ||\r\n                    card.tags.findIndex(x => {\r\n                        const weightedTag = this.status.tags.find(y => y.value === x);\r\n                        return weightedTag !== undefined && weightedTag.weight === 0;\r\n                    }) === -1\r\n                );\r\n            }),\r\n            url: x.url,\r\n            weight: x.weight,\r\n        }));\r\n\r\n        // cards are now of the correct type and playable\r\n        const totalCards = filtered.reduce((x, y) => x + y.cards.length, 0);\r\n\r\n        // every card should be rated by x when 0 < x <= 1\r\n        const result: Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> = [];\r\n\r\n        const willPower = this.status.willPower;\r\n\r\n        for (const deck of filtered) {\r\n            // cards from this deck that were already played\r\n            const cardsPlayed = this.status.cardsHistory.filter(x => x.deckUrl === deck.url);\r\n\r\n            // compute the deck exhaustion factor\r\n            let exhaustionFactor: number;\r\n\r\n            const percentage = cardsPlayed.length / deck.cards.length;\r\n            if (percentage > this.deckExhaustionLimit) {\r\n                // cubic reduction\r\n                exhaustionFactor = Math.pow(Math.max(1.1 - percentage, 0.1), 2) * 0.5;\r\n            } else {\r\n                exhaustionFactor = 1;\r\n            }\r\n\r\n            const weightedCards: Array<Weighted<Card>> = [];\r\n            for (const card of deck.cards) {\r\n                const willPowerRating = this.rateWillPower(card.willPower, willPower);\r\n                const historyFactor = this.getHistoryFactor(card.id, cardsPlayed, totalCards);\r\n                const tagsFactor = this.getTagsFactor(card.tags, this.status.tags);\r\n                const weight = exhaustionFactor * willPowerRating * historyFactor * tagsFactor;\r\n                if (weight === 0) {\r\n                    continue;\r\n                }\r\n\r\n                weightedCards.push({\r\n                    value: card,\r\n                    weight: weight,\r\n                });\r\n            }\r\n\r\n            result.push({ deck, cards: weightedCards });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public recomputeWillPower(memory: string[]): { willPower: number; memory: string[] } {\r\n        const addedMemory = new Array<string>();\r\n        const now = new Date();\r\n        let result = this.status.willPower;\r\n\r\n        if (!_.includes(memory, \"AFTER_10\") && (now.getHours() > 22 || now.getHours() < 8)) {\r\n            result++;\r\n            addedMemory.push(\"AFTER_10\");\r\n        }\r\n\r\n        const slidesCount = this.status.slidesHistory.length;\r\n        if (slidesCount % 12 === 0 && slidesCount !== 0) {\r\n            const id = slidesCount / 12;\r\n            if (!_.includes(memory, `SLIDES_${id}`)) {\r\n                result++;\r\n                addedMemory.push(`SLIDES_${id}`);\r\n            }\r\n        }\r\n\r\n        if (result > 5) {\r\n            result = 5;\r\n        }\r\n\r\n        return { willPower: result, memory: addedMemory };\r\n    }\r\n\r\n    protected getTagsFactor(tags: string[], tagWeights: Array<Weighted<string>>) {\r\n        const weights = tags\r\n            .map(x => tagWeights.find(y => y.value === x))\r\n            .filter(x => x !== undefined)\r\n            .map(x => x!.weight);\r\n        if (weights.length > 0) {\r\n            return Math.min(...weights);\r\n        }\r\n        return 0.5;\r\n    }\r\n\r\n    /** return a value between 0 and 1 that returns 1 if the card was never played and a smaller number if the card was played recently */\r\n    protected getHistoryFactor(id: string, history: CardRef[], totalCards: number) {\r\n        const historyPosition = history.findIndex(x => x.card.id === id);\r\n        if (historyPosition === -1) {\r\n            return 1;\r\n        }\r\n\r\n        if (historyPosition > totalCards) {\r\n            return 0;\r\n        }\r\n\r\n        return historyPosition / totalCards;\r\n    }\r\n\r\n    /** return a value between 0 and 1 for the given will power */\r\n    protected rateWillPower(cardWillPower: number | undefined, willPower: number) {\r\n        if (cardWillPower === undefined) {\r\n            return 0.75;\r\n        }\r\n\r\n        // --- --- --- ||| --- --- --- ---\r\n        // 0.5 .75 .75  1  .15  0   0   0\r\n\r\n        if (cardWillPower === willPower) {\r\n            return 1;\r\n        }\r\n\r\n        if (cardWillPower > willPower) {\r\n            const result = 0.15 - (cardWillPower - willPower) * 0.1;\r\n            return result < 0 ? 0 : result;\r\n        }\r\n\r\n        return 0.5;\r\n    }\r\n\r\n    protected verifyPlayerSpecification(\r\n        players: PlayerInfo[],\r\n        specification: PlayerSetting[],\r\n    ): boolean {\r\n        if (specification.length > players.length) {\r\n            return false;\r\n        }\r\n\r\n        const specificationMales = specification.filter(x => x.gender === \"Male\").length;\r\n        const actualMales = players.filter(x => x.gender === \"Male\").length;\r\n\r\n        if (specificationMales > actualMales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationFemales = specification.filter(x => x.gender === \"Female\").length;\r\n        const actualFemales = players.filter(x => x.gender === \"Female\").length;\r\n        if (specificationFemales > actualFemales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationOpposite = specification.filter(x => x.gender === \"Opposite\").length;\r\n        if (specificationOpposite > Math.min(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        const specificationSame = specification.filter(x => x.gender === \"Same\").length;\r\n        if (specificationSame + 1 > Math.max(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Card } from \"./cards/card\";\r\nimport { CardParserFactory } from \"./parsing/card-parser-factory\";\r\n\r\nexport class CardsLoader {\r\n    private readonly domParser = new DOMParser();\r\n\r\n    constructor(\r\n        private requestFile: (url: string) => Promise<string>,\r\n        private parserFactory: CardParserFactory,\r\n    ) {}\r\n\r\n    public async loadFromUrl(url: string): Promise<Card[]> {\r\n        const result: Card[] = [];\r\n\r\n        await this.loadFile(url, result, undefined);\r\n        return result;\r\n    }\r\n\r\n    private async loadFile(url: string, result: Card[], requestedCards?: string[]): Promise<void> {\r\n        const xml = await this.requestFile(url);\r\n        \r\n        // the DOMParser doesn't like XML docs without a Root element\r\n        const xmlDoc = this.domParser.parseFromString(\"<Root>\" + xml + \"</Root>\", \"text/xml\");\r\n\r\n        const cardElements = xmlDoc.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < cardElements.length; i++) {\r\n            const xmlElement = cardElements[i];\r\n\r\n            if (xmlElement.parentElement !== xmlDoc.documentElement) {\r\n                continue;\r\n            }\r\n\r\n            if (xmlElement.nodeName === \"DeckReference\") {\r\n                await this.parseDeckReference(xmlElement, result, requestedCards);\r\n                continue;\r\n            }\r\n\r\n            const parser = this.parserFactory.createParser(xmlElement.nodeName);\r\n            if (parser === undefined) {\r\n                console.error(\r\n                    `The card ${xmlElement.nodeName} could not be parsed. No parser found.`,\r\n                );\r\n                continue;\r\n            }\r\n\r\n            const card = parser.deserialize(xmlElement);\r\n            if (requestedCards !== undefined && requestedCards.indexOf(card.id) === -1) {\r\n                continue;\r\n            }\r\n\r\n            result.push(card);\r\n        }\r\n    }\r\n\r\n    private parseDeckReference(\r\n        xmlElement: Element,\r\n        result: Card[],\r\n        requestedCards?: string[],\r\n    ): Promise<void> {\r\n        const url = xmlElement.getAttribute(\"url\");\r\n        if (url === null) {\r\n            throw new Error(\"The url on a deck reference must not be null.\");\r\n        }\r\n\r\n        const referenceRequests: string[] = [];\r\n\r\n        const cardRefs = xmlElement.getElementsByTagName(\"CardRef\");\r\n        for (let i = 0; i < cardRefs.length; i++) {\r\n            const cardRef = cardRefs[i];\r\n\r\n            const idAttr = cardRef.getAttribute(\"id\");\r\n            if (idAttr === null) {\r\n                continue;\r\n            }\r\n\r\n            referenceRequests.push(idAttr);\r\n        }\r\n\r\n        let deckWhitelist: string[] | undefined;\r\n        if (referenceRequests.length === 0) {\r\n            deckWhitelist = requestedCards;\r\n        } else {\r\n            if (requestedCards !== undefined) {\r\n                deckWhitelist = [];\r\n\r\n                // only request cards that are in the superior list aswell as in the reference list\r\n                for (const cardId of requestedCards) {\r\n                    if (referenceRequests.indexOf(cardId) > -1) {\r\n                        deckWhitelist.push(cardId);\r\n                    }\r\n                }\r\n            } else {\r\n                deckWhitelist = referenceRequests;\r\n            }\r\n        }\r\n\r\n        return this.loadFile(url, result, deckWhitelist);\r\n    }\r\n}\r\n","export class PlayerSetting {\r\n    constructor(public playerIndex: number, public gender: GenderRequirement = \"None\") {}\r\n}\r\n\r\nexport type GenderRequirement = 'None' | 'Male' | 'Female' | 'Opposite' | 'Same';\r\n","import { GenderRequirement } from \"../cards/player-setting\";\r\n\r\nexport class ParserHelper {\r\n    /** parse a player tag, e. g. \"Player\" or \"Player2\" or \"Player5000\" and return the index (1 if none is specified) or undefined */\r\n    public static parsePlayerTag(s: string): number | undefined {\r\n        const tagName = \"Player\";\r\n\r\n        if (!s.startsWith(tagName)) {\r\n            return undefined;\r\n        }\r\n\r\n        if (s.length > tagName.length) {\r\n            const index = Number(s.substring(tagName.length));\r\n            return isNaN(index) ? undefined : index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    /** parse a gender requirement string, e. g. \"m\", \"male\", \"Male\", etc. */\r\n    public static parseGenderRequirement(s: string): GenderRequirement |undefined {\r\n        s = s.toLowerCase();\r\n\r\n        if (s in this.genderRequirementMap) {\r\n            return this.genderRequirementMap[s];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** parse a timespan in the format hh:mm:ss or mm:ss */\r\n    public static parseTimeSpanStringToSeconds(s: string): number | undefined {\r\n        const a = s.split(\":\");\r\n\r\n        if (a.length > 3) {\r\n            return undefined;\r\n        }\r\n\r\n        let result = 0;\r\n\r\n        for (let i = 0; i < a.length; i++) {\r\n            const p = Number(a[i]);\r\n            if (isNaN(p)) {\r\n                return undefined;\r\n            }\r\n\r\n            result += p * Math.pow(60, (a.length - i - 1));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static genderRequirementMap: { [id: string]: GenderRequirement } = {\r\n        m: \"Male\",\r\n        male: \"Male\",\r\n        f: \"Female\",\r\n        female: \"Female\",\r\n        o: \"Opposite\",\r\n        opposite: \"Opposite\",\r\n        s: \"Same\",\r\n        same: \"Same\",\r\n    };\r\n}\r\n","import { BaseCard } from \"../cards/base-card\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { CardParser } from \"./card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\n\r\nexport abstract class BaseCardParser<TCard extends BaseCard> implements CardParser {\r\n    public deserialize(xml: Element): Card {\r\n        const card = this.createCard();\r\n\r\n        const idAttr = xml.getAttribute(\"id\");\r\n        if (idAttr === null) {\r\n            throw new Error(\"The id of a card must not be null\");\r\n        }\r\n        card.id = idAttr;\r\n\r\n        card.willPower = Number(xml.getAttribute(\"willPower\"));\r\n        if (card.willPower < 1 || card.willPower > 10) {\r\n            card.willPower = undefined;\r\n        }\r\n\r\n        const tags = xml.getAttribute(\"tags\");\r\n\r\n        card.tags = tags\r\n            ? [...this.getDefaultAttributes(), ...tags.split(\",\")]\r\n            : this.getDefaultAttributes();\r\n\r\n        this.parseAttributes(xml, card);\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            if (element.tagName === `${xml.tagName}.players`) {\r\n                card.players = this.parsePlayers(element);\r\n                continue;\r\n            }\r\n\r\n            this.parseElement(element, card);\r\n        }\r\n\r\n        if (card.players === undefined) {\r\n            card.players = [];\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    protected getDefaultAttributes(): string[] {\r\n        return [];\r\n    }\r\n\r\n    protected abstract parseAttributes(rootXml: Element, card: TCard): void;\r\n    protected abstract parseElement(element: Element, card: TCard): boolean;\r\n\r\n    protected abstract createCard(): TCard;\r\n\r\n    private parsePlayers(xml: Element): PlayerSetting[] {\r\n        const players: PlayerSetting[] = [];\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            const player = this.parsePlayer(element);\r\n            if (player !== undefined) {\r\n                players.push(player);\r\n            }\r\n        }\r\n\r\n        return players;\r\n    }\r\n\r\n    private parsePlayer(xml: Element): PlayerSetting | undefined {\r\n        const index = ParserHelper.parsePlayerTag(xml.tagName);\r\n        if (index === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        let requiredGender: GenderRequirement = \"None\";\r\n\r\n        const genderAttr = xml.getAttribute(\"gender\");\r\n        if (genderAttr) {\r\n            const genderReq = ParserHelper.parseGenderRequirement(genderAttr);\r\n\r\n            if (genderReq !== undefined) {\r\n                requiredGender = genderReq;\r\n            }\r\n        }\r\n\r\n        return new PlayerSetting(index, requiredGender);\r\n    }\r\n}\r\n","import { TextTranslation } from \"./text-translation\";\r\n\r\nexport class TextElement {\r\n    public weight: number = 1;\r\n    public translations!: TextTranslation[];\r\n}","export class TextTranslation {\r\n    constructor(public lang: string, public content: string) {}\r\n}\r\n","import { TextElement } from \"../cards/text-element\";\r\nimport { TextTranslation } from \"../cards/text-translation\";\r\n\r\n/** parses the text content of an element */\r\nexport class TextContentParser {\r\n    public result: TextElement[];\r\n\r\n    private isConditionalElement: boolean | undefined = undefined;\r\n\r\n    constructor() {\r\n        this.result = [];\r\n    }\r\n\r\n    public addElement(xml: Element): boolean {\r\n        switch (xml.tagName) {\r\n            case \"Case\":\r\n                if (this.isConditionalElement === false) {\r\n                    return false;\r\n                }\r\n                this.isConditionalElement = true;\r\n\r\n                this.result.push(this.parseTextElement(xml));\r\n                return true;\r\n            case \"Text\":\r\n                if (this.isConditionalElement === true) {\r\n                    return false;\r\n                } else if (this.isConditionalElement === undefined) {\r\n                    this.result.push({ translations: [], weight: 1 });\r\n                }\r\n\r\n                this.isConditionalElement = false;\r\n                this.result[0].translations.push(this.parseTranslation(xml));\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private parseTextElement(element: Element): TextElement {\r\n        const translations: TextTranslation[] = [];\r\n        const textElement = new TextElement();\r\n\r\n        const weight = element.getAttribute(\"weight\");\r\n        if (weight !== null && !isNaN(Number(weight))) {\r\n            textElement.weight = Number(weight);\r\n        } else {\r\n            textElement.weight = 1;\r\n        }\r\n\r\n        const texts = element.getElementsByTagName(\"Text\");\r\n        for (let i = 0; i < texts.length; i++) {\r\n            const textXmlNode = texts[i];\r\n            translations.push(this.parseTranslation(textXmlNode));\r\n        }\r\n\r\n        textElement.translations = translations;\r\n        return textElement;\r\n    }\r\n\r\n    private parseTranslation(element: Element) {\r\n        const lang = element.getAttribute(\"lang\");\r\n        if (lang === null) {\r\n            throw new Error(\"lang attribute not found on element\");\r\n        }\r\n\r\n        if (element.textContent === null) {\r\n            throw new Error(\"The text content of the element is empty.\");\r\n        }\r\n\r\n        return new TextTranslation(lang, element.textContent);\r\n    }\r\n}\r\n","import { TextCard } from \"../cards/text-card\";\r\nimport { BaseCardParser } from \"./base-card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\nimport { TextContentParser } from \"./text-content-parser\";\r\n\r\nexport abstract class TextCardParser<TCard extends TextCard> extends BaseCardParser<TCard> {\r\n    private textContentParser = new TextContentParser();\r\n\r\n    protected parseAttributes(rootXml: Element, card: TCard): void {\r\n        const followUpAttr = rootXml.getAttribute(\"followUpProbability\");\r\n        if (followUpAttr !== null) {\r\n            const followUpProbability = Number(followUpAttr);\r\n            if (isNaN(followUpProbability)) {\r\n                throw new Error(\r\n                    `The follow up propability ${followUpAttr} could not be parsed as a number (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpPropability = followUpProbability;\r\n        }\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay !== null) {\r\n            const seconds = ParserHelper.parseTimeSpanStringToSeconds(followUpDelay);\r\n            if (seconds === undefined) {\r\n                throw new Error(\r\n                    `Could not parse followUpDelay ${followUpDelay} as a timespan (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpDelay = seconds;\r\n        } else {\r\n            card.followUpDelay = 0;\r\n        }\r\n    }\r\n\r\n    protected parseElement(element: Element, card: TCard): boolean {\r\n        switch (element.tagName) {\r\n            case \"Text\":\r\n            case \"Case\":\r\n                card.content = this.textContentParser.result;\r\n                return this.textContentParser.addElement(element);\r\n        }\r\n\r\n        if (element.tagName === `${card.type}.followUp`) {\r\n            const parser = new TextContentParser();\r\n\r\n            const subElements = element.getElementsByTagName(\"*\");\r\n            for (let i = 0; i < subElements.length; i++) {\r\n                const subElement = subElements[i];\r\n                if (subElement.parentElement !== element) {\r\n                    continue;\r\n                }\r\n\r\n                parser.addElement(subElement);\r\n            }\r\n\r\n            card.followUp = parser.result;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { BaseCard } from \"./base-card\";\r\nimport { TextElement } from \"./text-element\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport _ from \"lodash\";\r\n\r\nexport abstract class TextCard extends BaseCard {\r\n    /** the propability (0-1) that this card follows up */\r\n    public followUpPropability: number = 1;\r\n\r\n    /** the delay of the follow up in seconds */\r\n    public followUpDelay!: number;\r\n\r\n    public content!: TextElement[];\r\n    public followUp!: TextElement[];\r\n\r\n    public condition: (status: GameStatus) => boolean = status => {\r\n        return _.some(this.content, x => _.some(x.translations, y => y.lang === status.language));\r\n    };\r\n}\r\n","import { GameStatus } from \"../game-status\";\r\nimport { Card } from \"./card\";\r\nimport { PlayerSetting } from \"./player-setting\";\r\n\r\n/** A very basic implementation of Card  */\r\nexport abstract class BaseCard implements Card {\r\n  public id!: string;\r\n  public willPower!: number | undefined;\r\n  public players!: PlayerSetting[];\r\n  public tags!: string[];\r\n  public condition!: (status: GameStatus) => boolean;\r\n\r\n  public readonly abstract type: string;\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class FactCard extends TextCard {\r\n    public readonly type: string = \"FactCard\";\r\n    public isTrueFact: boolean = false;\r\n}\r\n","import { TextCardParser } from \"../../core/parsing/text-card-parser\";\r\nimport { FactCard } from \"../cards/fact-card\";\r\n\r\nexport class FactCardParser extends TextCardParser<FactCard> {\r\n    protected createCard(): FactCard {\r\n        return new FactCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: FactCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const attr = rootXml.getAttribute(\"is\");\r\n        card.isTrueFact = attr === null ? true : this.toBool(attr);\r\n    }\r\n\r\n    protected toBool(value?: string): boolean {\r\n        if (value === \"true\") {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined) {\r\n            return false;\r\n        }\r\n\r\n        return !!+value;\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class VirusCard extends TextCard {\r\n    public readonly type: string = \"VirusCard\";\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { VirusCard } from '../cards/virus-card';\r\n\r\nexport class VirusCardParser extends TextCardParser<VirusCard> {\r\n    protected createCard(): VirusCard {\r\n        return new VirusCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: VirusCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay === null) {\r\n            card.followUpDelay = 60 * 5; // 5 minutes default\r\n        }\r\n    }\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DefaultTextCardParser<T extends TextCard> extends TextCardParser<T> {\r\n    constructor(private factory: new () => T) {\r\n        super();\r\n    }\r\n\r\n    protected createCard(): T {\r\n        return new this.factory();\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DownCard extends TextCard {\r\n    public readonly type: string = \"DownCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NeverEverCard extends TextCard {\r\n    public readonly type: string = \"NeverEverCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class JokeCard extends TextCard {\r\n    public readonly type: string = \"JokeCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class QuestionCard extends TextCard {\r\n    public readonly type: string = \"QuestionCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class TaskCard extends TextCard {\r\n    public readonly type: string = \"TaskCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class WouldYouRatherCard extends TextCard {\r\n    public readonly type: string = \"WyrCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DrinkCard extends TextCard {\r\n    public readonly type: string = \"DrinkCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class GroupGameCard extends TextCard {\r\n    public readonly type: string = \"GroupGameCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NoIdeaLosesCard extends TextCard {\r\n    public readonly type: string = \"NoIdeaLosesCard\";\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { FactCardParser } from \"./parsing/fact-card-parser\";\r\nimport { VirusCardParser } from \"./parsing/virus-card-parser\";\r\nimport { DefaultTextCardParser } from \"./parsing/default-text-card-parser\";\r\nimport { DownCard } from \"./cards/down-card\";\r\nimport { NeverEverCard } from \"./cards/never-ever-card\";\r\nimport { JokeCard } from \"./cards/joke-card\";\r\nimport { QuestionCard } from \"./cards/question-card\";\r\nimport { TaskCard } from \"./cards/task-card\";\r\nimport { WouldYouRatherCard } from \"./cards/would-you-rather-card\";\r\nimport { DrinkCard } from \"./cards/drink-card\";\r\nimport { GroupGameCard } from \"./cards/group-game-card\";\r\nimport { NoIdeaLosesCard } from \"./cards/no-idea-loses-card\";\r\n\r\ntype ParserRegistration = { [type: string]: () => CardParser };\r\n\r\nexport const parsers: ParserRegistration = {\r\n    FactCard: () => new FactCardParser(),\r\n    VirusCard: () => new VirusCardParser(),\r\n    DownCard: () => new DefaultTextCardParser<DownCard>(DownCard),\r\n    NeverEverCard: () => new DefaultTextCardParser<NeverEverCard>(NeverEverCard),\r\n    JokeCard: () => new DefaultTextCardParser<JokeCard>(JokeCard),\r\n    QuestionCard: () => new DefaultTextCardParser<QuestionCard>(QuestionCard),\r\n    TaskCard: () => new DefaultTextCardParser<TaskCard>(TaskCard),\r\n    WyrCard: () => new DefaultTextCardParser<WouldYouRatherCard>(WouldYouRatherCard),\r\n    DrinkCard: () => new DefaultTextCardParser<DrinkCard>(DrinkCard),\r\n    GroupGameCard: () => new DefaultTextCardParser<GroupGameCard>(GroupGameCard),\r\n    NoIdeaLosesCard: () => new DefaultTextCardParser<NoIdeaLosesCard>(NoIdeaLosesCard),\r\n};\r\n","import axios from \"axios\";\r\nimport { CardsLoader } from \"../../core/cards-loader\";\r\nimport { Card } from \"../../core/cards/card\";\r\nimport { DefaultCardParserFactory } from \"../../impl/default-card-parser-factory\";\r\n\r\nconst parserFactory = new DefaultCardParserFactory();\r\nconst loader = new CardsLoader(requestFile, parserFactory);\r\n\r\nasync function requestFile(url: string) : Promise<string> {\r\n    if (url.startsWith(\"/\")) {\r\n        // relative url\r\n        url = url + `?version=${process.env.REACT_APP_GIT_COMMIT}`\r\n    }\r\n\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n}\r\n\r\nexport async function loadCards(url: string): Promise<Card[]> {\r\n    return loader.loadFromUrl(url);\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { CardParserFactory } from \"../core/parsing/card-parser-factory\";\r\nimport { parsers } from \"./registrations\";\r\n\r\nexport class DefaultCardParserFactory implements CardParserFactory {\r\n    private parsers: { [type: string]: () => CardParser };\r\n\r\n    constructor() {\r\n        this.parsers = parsers;\r\n    }\r\n\r\n    public createParser(cardType: string): CardParser | undefined {\r\n        if (cardType in this.parsers) {\r\n            return this.parsers[cardType]();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","import * as cardsLoader from \"./api/cards-loader\";\r\n\r\nexport default {\r\n    api: {\r\n        cardsLoader,\r\n    },\r\n};\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { from, of } from \"rxjs\";\r\nimport { catchError, filter, map, mergeMap, ignoreElements, tap } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport { loadSourceAsync, resetAll } from \"./actions\";\r\nimport { deleteSettings } from \"../../store/storage\";\r\n\r\nexport const loadSourceEpic: Epic<RootAction, RootAction, RootState, Services> = (\r\n    action$,\r\n    _state$,\r\n    { api },\r\n) =>\r\n    action$.pipe(\r\n        filter(isActionOf(loadSourceAsync.request)),\r\n        mergeMap(action =>\r\n            from(api.cardsLoader.loadCards(action.payload)).pipe(\r\n                map(cards => loadSourceAsync.success({ url: action.payload, cards })),\r\n                catchError((message: string) =>\r\n                    of(loadSourceAsync.failure({ url: action.payload, message })),\r\n                ),\r\n            ),\r\n        ),\r\n    );\r\n\r\nexport const resetAllEpic: Epic<RootAction, RootAction, RootState, Services> = (\r\n    action$, _state$, _services\r\n) => action$.pipe(\r\n    filter(isActionOf(resetAll)),\r\n    tap(() => deleteSettings()),\r\n    tap(() => window.location.reload()),\r\n    ignoreElements()\r\n)","import { RootState } from \"DrinctetTypes\";\r\nimport { SettingsState } from \"../features/settings/reducer\";\r\n\r\nexport function persistState(store: any) {\r\n    store.subscribe(() => {\r\n        const state: RootState = store.getState();\r\n        const toStore: SettingsState = {\r\n            ...state.settings,\r\n            sources: state.settings.sources.map(x => ({\r\n                url: x.url,\r\n                weight: x.weight,\r\n                isLoading: false,\r\n                cards: null,\r\n                errorMessage: null,\r\n                tags: []\r\n            })),\r\n        };\r\n        localStorage.setItem(\"settingsState\", JSON.stringify(toStore));\r\n    });\r\n}\r\n\r\nexport function loadState(): Partial<RootState> {\r\n    const settings = localStorage.getItem(\"settingsState\");\r\n    const state = settings !== null ? JSON.parse(settings) : {};\r\n    return { settings: state };\r\n}\r\n\r\nexport function deleteSettings(): void {\r\n    localStorage.clear();\r\n}\r\n","export abstract class TextFragment {}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RawTextFragment extends TextFragment {\r\n    constructor(public text: string) {\r\n        super();\r\n    }\r\n}","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport abstract class VariableFragment extends TextFragment {\r\n}","import { VariableFragment } from \"./variable-fragment\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\n\r\nexport class PlayerReferenceFragment extends VariableFragment {\r\n    constructor(public playerIndex: number = 1, public gender: GenderRequirement = \"None\") {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SipsFragment extends VariableFragment {\r\n    constructor(public minSips: number = 1, public sipsIndex: number = 1) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomNumberFragment extends TextFragment {\r\n    constructor(public numbers: RandomNumber[]) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport interface RandomNumber {\r\n    getCount(): number;\r\n}\r\n\r\nexport class NumberRange implements RandomNumber {\r\n    constructor(public min: number, public max: number) {}\r\n\r\n    getCount(): number {\r\n        return this.max - this.min;\r\n    }\r\n}\r\n\r\nexport class StaticNumber implements RandomNumber {\r\n    constructor(public i: number) {}\r\n\r\n    getCount(): number {\r\n        return 1;\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomTextFragment extends TextFragment {\r\n    constructor(public texts: string[]) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class GenderBasedSelectionFragment extends TextFragment {\r\n    constructor(\r\n        public femaleText: string,\r\n        public maleText?: string,\r\n        public referencedPlayerIndex?: number,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SocialMediaPlatformFragment extends VariableFragment {\r\n}","import { ParserHelper } from \"./../parser-helper\";\r\nimport { CardTextDecoder } from \"./card-text-decoder\";\r\nimport { TextFragment } from \"../../text-fragment\";\r\nimport * as Consts from \"./text-decoder-consts\";\r\nimport { RawTextFragment } from \"../../fragments/raw-text-fragment\";\r\nimport { PlayerReferenceFragment } from \"../../fragments/player-reference-fragment\";\r\nimport { SipsFragment } from \"../../fragments/sips-fragment\";\r\nimport {\r\n    RandomNumberFragment,\r\n    RandomNumber,\r\n    NumberRange,\r\n    StaticNumber,\r\n} from \"../../fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"../../fragments/random-text-fragment\";\r\nimport { GenderBasedSelectionFragment } from \"../../fragments/gender-based-selection-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\n\r\nexport class DefaultTextDecoder implements CardTextDecoder {\r\n    decode(s: string): TextFragment[] {\r\n        const result: TextFragment[] = [];\r\n\r\n        let index = 0;\r\n        let lastTokenIndex = 0;\r\n\r\n        do {\r\n            if (s[index] == Consts.VarStartChar) {\r\n                if (lastTokenIndex !== index) {\r\n                    result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                }\r\n\r\n                const token = this.readToken(s, index, Consts.VarEndChar);\r\n                index = token.index;\r\n\r\n                result.push(this.parseVariableFragment(token.value));\r\n            } else if (s[index] === Consts.SelectionStartChar) {\r\n                if (index > 1 && s[index - 1] === Consts.SelectionModifierStartChar) {\r\n                    // handle !{...}\r\n                    index--;\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    index++;\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseRandomSelectionFragment(content.value));\r\n                } else {\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseGenderSelectionFragment(content.value));\r\n                }\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            lastTokenIndex = index;\r\n        } while (++index < s.length);\r\n\r\n        if (lastTokenIndex !== s.length) {\r\n            result.push(new RawTextFragment(s.substring(lastTokenIndex)));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseVariableFragment(content: string): TextFragment {\r\n        content = content.toLowerCase();\r\n\r\n        if (content.startsWith(Consts.PlayerVariable)) {\r\n            // Samples:\r\n            // [Player1:f]\r\n            // [Player1]\r\n            // [Player]\r\n\r\n            const playerRef = new PlayerReferenceFragment();\r\n\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let playerTag: string;\r\n            if (parameterBegin === -1) {\r\n                playerTag = content;\r\n            } else {\r\n                playerTag = content.substring(0, parameterBegin);\r\n\r\n                const genderString = content.substring(parameterBegin + 1);\r\n                const gender = ParserHelper.parseGenderRequirement(genderString);\r\n                if (gender === undefined) {\r\n                    throw new Error(\r\n                        `Gender parameter of player tag could not be parsed: ${content}`,\r\n                    );\r\n                }\r\n\r\n                playerRef.gender = gender;\r\n            }\r\n\r\n            playerRef.playerIndex = this.parsePlayerIndex(playerTag);\r\n            return playerRef;\r\n        }\r\n\r\n        if (content.startsWith(Consts.SipsVariable)) {\r\n            const sipsFragment = new SipsFragment();\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let sipsTag: string;\r\n            if (parameterBegin === -1) {\r\n                sipsTag = content;\r\n            } else {\r\n                sipsTag = content.substring(0, parameterBegin);\r\n                sipsFragment.minSips = Number(content.substring(parameterBegin + 1));\r\n                if (isNaN(sipsFragment.minSips)) {\r\n                    throw new Error(`The sips amount of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            if (sipsTag.length > Consts.SipsVariable.length) {\r\n                sipsFragment.sipsIndex = Number(sipsTag.substring(Consts.SipsVariable.length));\r\n                if (isNaN(sipsFragment.sipsIndex)) {\r\n                    throw new Error(`The sips index of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            return sipsFragment;\r\n        }\r\n\r\n        if (content === Consts.SocialMediaVariable) {\r\n            return new SocialMediaPlatformFragment();\r\n        }\r\n\r\n        return new RawTextFragment(content);\r\n    }\r\n\r\n    public parseRandomSelectionFragment(content: string): TextFragment {\r\n        // Samples:\r\n        // 12,54,56-90\r\n        // 12,hello,not,19\r\n\r\n        const isNumericSelection = /^[0-9,-]+$/.test(content);\r\n        if (isNumericSelection) {\r\n            const numbers = this.parseNumberArray(content);\r\n            return new RandomNumberFragment(numbers);\r\n        }\r\n\r\n        const texts = this.splitQuoted(content, \",\");\r\n        return new RandomTextFragment(texts);\r\n    }\r\n\r\n    public parseNumberArray(content: string): RandomNumber[] {\r\n        const result: RandomNumber[] = [];\r\n        let currentNumber: RandomNumber | null = null;\r\n\r\n        let numberStart = 0;\r\n        let isRangeToken = false;\r\n\r\n        let i = 0;\r\n        while (true) {\r\n            for (; i < content.length; i++) {\r\n                const c = content[i];\r\n\r\n                if (!isNaN(Number(c))) {\r\n                    continue;\r\n                }\r\n\r\n                if (c === \"-\") {\r\n                    if (isRangeToken) {\r\n                        throw new Error(\"Can only have one range identifier per field\");\r\n                    }\r\n                    isRangeToken = true;\r\n\r\n                    currentNumber = new NumberRange(Number(content.substring(numberStart, i)), 0);\r\n                    numberStart = i + 1;\r\n                    continue;\r\n                }\r\n\r\n                if (c === \",\") {\r\n                    break;\r\n                }\r\n\r\n                throw new Error(\"Invalid character found: \" + c);\r\n            }\r\n\r\n            if (i === numberStart) {\r\n                throw new Error(`A number was expected at position ${i} in string \"${content}\"`);\r\n            }\r\n\r\n            const num = Number(content.substring(numberStart, i));\r\n            if (isRangeToken) {\r\n                (currentNumber as NumberRange).max = num;\r\n            } else {\r\n                currentNumber = new StaticNumber(num);\r\n            }\r\n\r\n            result.push(currentNumber!);\r\n\r\n            if (i === content.length) {\r\n                break;\r\n            }\r\n\r\n            currentNumber = null;\r\n            isRangeToken = false;\r\n            numberStart = ++i;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public splitQuoted(value: string, delimiter: string): string[] {\r\n        let tokenStart = 0;\r\n        let result: string[] = [];\r\n\r\n        while (value.length > tokenStart - 1) {\r\n            let withinQuotes = false;\r\n\r\n            if (value[tokenStart] === '\"') {\r\n                withinQuotes = true;\r\n                tokenStart++;\r\n            }\r\n\r\n            let i = tokenStart;\r\n            do {\r\n                if (value[i] === delimiter) {\r\n                    if (withinQuotes) continue;\r\n\r\n                    result.push(value.substring(tokenStart, i));\r\n                    tokenStart = i + 1;\r\n                    break;\r\n                }\r\n\r\n                if (value[i] == '\"') {\r\n                    if (!withinQuotes) {\r\n                        continue; //allow quotes in the middle\r\n                    }\r\n\r\n                    if (i == value.length - 1) {\r\n                        //if its the last char\r\n                        result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                        return result;\r\n                    }\r\n\r\n                    const nextChar = value[i + 1];\r\n                    if (nextChar == '\"') {\r\n                        i++;\r\n                        continue; //escaped quotes\r\n                    }\r\n\r\n                    if (nextChar != delimiter)\r\n                        throw new Error(\"The delimiter must come after the closing quotes.\");\r\n\r\n                    result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                    tokenStart = i + 2;\r\n                    break;\r\n                }\r\n\r\n                if (i == value.length - 1) {\r\n                    if (withinQuotes) {\r\n                        throw new Error(\"The text must end with a quote\");\r\n                    }\r\n\r\n                    result.push(value.substring(tokenStart, i + 1));\r\n                    return result;\r\n                }\r\n            } while (++i < value.length);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseGenderSelectionFragment(content: string): GenderBasedSelectionFragment {\r\n        const fragment = new GenderBasedSelectionFragment(\"\");\r\n\r\n        const splitterIndex = content.indexOf(Consts.SelectionSplitterChar);\r\n        const reference = content.indexOf(Consts.SelectionReferenceChar);\r\n\r\n        if (reference !== -1) {\r\n            fragment.referencedPlayerIndex = this.parsePlayerIndex(\r\n                content.substring(reference + 1),\r\n            );\r\n            content = content.substring(0, reference);\r\n        }\r\n\r\n        if (splitterIndex === -1) {\r\n            fragment.femaleText = content;\r\n        } else {\r\n            fragment.maleText = content.substring(0, splitterIndex);\r\n            fragment.femaleText = content.substring(splitterIndex + 1, content.length);\r\n        }\r\n\r\n        return fragment;\r\n    }\r\n\r\n    public parsePlayerIndex(value: string): number {\r\n        if (value.length > Consts.PlayerVariable.length) {\r\n            const index = Number(value.substring(Consts.PlayerVariable.length));\r\n            if (isNaN(index)) {\r\n                throw new Error(`The player index of \"${value}\" could not be parsed.`);\r\n            }\r\n\r\n            return index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    public readToken(\r\n        value: string,\r\n        index: number,\r\n        endChar: string,\r\n    ): { value: string; index: number } {\r\n        const length = value.length;\r\n        const tokenStart = index;\r\n\r\n        while (++index < length) {\r\n            const char = value[index];\r\n\r\n            if (char === Consts.EscapeChar) {\r\n                index++;\r\n                continue;\r\n            }\r\n\r\n            if (char === endChar) {\r\n                index++;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { index, value: value.substring(tokenStart + 1, index - 1) };\r\n    }\r\n}\r\n","export const VarStartChar: string = \"[\";\r\nexport const VarEndChar: string = \"]\";\r\nexport const EscapeChar: string = \"\\\\\";\r\nexport const SelectionStartChar: string = \"{\";\r\nexport const SelectionModifierStartChar: string = \"!\";\r\nexport const SelectionEndChar: string = \"}\";\r\n\r\nexport const PlayerVariable: string = \"player\";\r\nexport const SipsVariable: string = \"sips\";\r\nexport const VariableParametersStart: string = \":\";\r\nexport const SocialMediaVariable: string = \"socialmediaplatform\";\r\n\r\nexport const SelectionSplitterChar: string = \"/\";\r\nexport const SelectionReferenceChar: string = \"|\";\r\nexport const ArrayDelimiter: string = \",\";\r\n","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GenderBasedSelectionFragment } from \"@core/fragments/gender-based-selection-fragment\";\r\nimport { PlayerReferenceFragment } from \"@core/fragments/player-reference-fragment\";\r\nimport { NumberRange, RandomNumberFragment, StaticNumber } from \"@core/fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"@core/fragments/random-text-fragment\";\r\nimport { RawTextFragment } from \"@core/fragments/raw-text-fragment\";\r\nimport { SipsFragment } from \"@core/fragments/sips-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { RandomUtils } from \"@core/selection/selection-algorithm\";\r\nimport { TextFragment } from \"@core/text-fragment\";\r\nimport _ from \"lodash\";\r\n\r\nexport class TextFormatter {\r\n    public static getRequiredPlayers(fragments: TextFragment[], playerSettings: PlayerSetting[]) {\r\n        const requiredPlayers = new Array<PlayerSetting>();\r\n\r\n        const players = _.groupBy(\r\n            fragments\r\n                .filter(x => x instanceof PlayerReferenceFragment)\r\n                .map(x => x as PlayerReferenceFragment),\r\n            \"playerIndex\",\r\n        );\r\n\r\n        for (const key in players) {\r\n            if (players.hasOwnProperty(key)) {\r\n                const player = players[key][0];\r\n\r\n                let requiredGender = player.gender;\r\n\r\n                if (requiredGender === \"None\") {\r\n                    const rootSetting = playerSettings.find(\r\n                        x => x.playerIndex === player.playerIndex,\r\n                    );\r\n                    if (rootSetting !== undefined) {\r\n                        requiredGender = rootSetting.gender;\r\n                    }\r\n                }\r\n\r\n                requiredPlayers.push({ playerIndex: player.playerIndex, gender: requiredGender });\r\n            }\r\n        }\r\n\r\n        return requiredPlayers;\r\n    }\r\n\r\n    public static getRequiredSips(fragments: TextFragment[]): SipsFragment[] {\r\n        const sips = _.groupBy(\r\n            fragments.filter(x => x instanceof SipsFragment).map(x => x as SipsFragment),\r\n            \"sipsIndex\",\r\n        );\r\n        return Object.values(sips).map(x => x[0]);\r\n    }\r\n\r\n    public static format(\r\n        fragments: TextFragment[],\r\n        players: { [index: number]: PlayerInfo },\r\n        sips: { [index: number]: number },\r\n        socialMediaPlatform: string,\r\n        translate: (key: string) => string,\r\n        selection: RandomUtils,\r\n        options: Partial<FormatOptions>,\r\n    ): string {\r\n        let result = \"\";\r\n        let lastPlayerFragment: PlayerReferenceFragment | null = null;\r\n\r\n        for (const fragment of fragments) {\r\n            if (fragment instanceof RawTextFragment) {\r\n                result += fragment.text;\r\n            } else if (fragment instanceof PlayerReferenceFragment) {\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n                result += players[fragment.playerIndex].name;\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                lastPlayerFragment = fragment;\r\n            } else if (fragment instanceof SipsFragment) {\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                const sip = sips[fragment.sipsIndex];\r\n                if (sip === 1) {\r\n                    result += translate(\"oneSip\");\r\n                } else {\r\n                    result += `${sip} ${translate(\"sips\")}`;\r\n                }\r\n\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n            } else if (fragment instanceof GenderBasedSelectionFragment) {\r\n                let referencedPlayer: number;\r\n                if (fragment.referencedPlayerIndex !== undefined) {\r\n                    referencedPlayer = fragment.referencedPlayerIndex;\r\n                } else if (lastPlayerFragment !== null) {\r\n                    referencedPlayer = lastPlayerFragment.playerIndex;\r\n                } else {\r\n                    const playerKeys = Object.keys(players);\r\n                    if (playerKeys.length === 0) {\r\n                        continue;\r\n                    }\r\n\r\n                    referencedPlayer = Number(playerKeys[0]);\r\n                }\r\n\r\n                const player = players[referencedPlayer];\r\n                const text = player.gender === \"Female\" ? fragment.femaleText : fragment.maleText;\r\n                if (text !== undefined) {\r\n                    result += text;\r\n                }\r\n            } else if (fragment instanceof RandomTextFragment) {\r\n                const text = selection.selectRandomWeighted(fragment.texts, () => 1);\r\n                result += text;\r\n            } else if (fragment instanceof RandomNumberFragment) {\r\n                const number = selection.selectRandomWeighted(fragment.numbers, x => x.getCount());\r\n                if (number === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                if (number instanceof NumberRange) {\r\n                    const random =\r\n                        number.min + Math.round((number.max - number.min) * selection.getRandom());\r\n                    result += random;\r\n                } else if (number instanceof StaticNumber) {\r\n                    result += number.i;\r\n                }\r\n            } else if (fragment instanceof SocialMediaPlatformFragment) {\r\n                result += socialMediaPlatform;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport interface FormatOptions {\r\n    boldPlayerNames: boolean;\r\n    boldSips: boolean;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { DefaultTextDecoder } from \"@core/parsing/text-decoder/default-text-decoder\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { FollowUpSlide, SelectedPlayer, Translator } from \"GameModels\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../../../store\";\r\nimport * as actions from \"../../actions\";\r\nimport { TextFormatter } from \"../../formatter/text-formatter\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { CardPresenter } from \"./card-presenter\";\r\n\r\nexport interface TextSlideState {\r\n    markdownContent: string;\r\n}\r\n\r\nexport abstract class TextSlidePresenter<\r\n    TState extends TextSlideState,\r\n    TCard extends TextCard\r\n> extends CardPresenter<TCard> {\r\n    constructor(protected translator: Translator, cardType: string, slideType: string) {\r\n        super(cardType, slideType);\r\n    }\r\n\r\n    protected initializeCard(card: TCard, cardRef: CardRef): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const result = new Array<RootAction>();\r\n\r\n        const text = this.selectText(selection, card);\r\n        let formatted: string;\r\n        let players: SelectedPlayer[];\r\n\r\n        try {\r\n            const result = this.formatText(text, card, null, selection);\r\n            formatted = result.formatted;\r\n            players = result.players;\r\n        } catch (error) {\r\n            // likely not enough players\r\n            return [actions.requestSlideAsync.request(this.translator)];\r\n        }\r\n\r\n        const state = this.initializeState(formatted, card, players, selection);\r\n        result.push(\r\n            actions.setSlideState({\r\n                state,\r\n                insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n            }),\r\n        );\r\n\r\n        if (_.some(card.followUp)) {\r\n            // dont check for correct translation as the language may change\r\n            if (Math.random() <= card.followUpPropability) {\r\n                const due = new Date();\r\n                due.setSeconds(due.getSeconds() + card.followUpDelay);\r\n\r\n                result.push(actions.enqueueFollowUp(this.createFollowUp(cardRef, players, due)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected initializeFollowUpCard(card: TCard, param: any): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n\r\n        try {\r\n            const { text, players } = this.selectFollowUpText(selection, card, param);\r\n            const { formatted } = this.formatText(text, card, players || [], selection);\r\n\r\n            const state = this.initializeFollowUpState(formatted, card, selection, param);\r\n            return [\r\n                actions.setSlideState({\r\n                    state,\r\n                    insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n                }),\r\n            ];\r\n        } catch (error) {\r\n            //no follow up found\r\n            return [actions.requestSlideAsync.request(this.translator)];\r\n        }\r\n    }\r\n\r\n    protected abstract initializeState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): TState;\r\n\r\n    protected abstract initializeFollowUpState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        selection: SelectionAlgorithm,\r\n        param: any,\r\n    ): TState;\r\n\r\n    protected createFollowUp(\r\n        cardRef: CardRef,\r\n        players: SelectedPlayer[],\r\n        due: Date,\r\n    ): FollowUpSlide {\r\n        return {\r\n            due: due,\r\n            slideType: this.slideType,\r\n            selectedCard: cardRef,\r\n            param: { definedPlayers: players },\r\n        };\r\n    }\r\n\r\n    protected selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return selectText(selection, selectedCard, this.translator);\r\n    }\r\n\r\n    protected formatText(\r\n        text: string,\r\n        card: TCard,\r\n        definedPlayers: SelectedPlayer[] | null,\r\n        selection: SelectionAlgorithm,\r\n    ): { formatted: string; players: SelectedPlayer[] } {\r\n        return formatText(text, card, definedPlayers, selection, this.translator);\r\n    }\r\n\r\n    selectFollowUpText(\r\n        selection: SelectionAlgorithm,\r\n        selectedCard: TextCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const lang = this.translator.languageCode;\r\n\r\n        const followUps = selectedCard.followUp.filter(x =>\r\n            _.some(x.translations, y => y.lang.toLowerCase() === lang),\r\n        );\r\n        if (followUps.length === 0) {\r\n            throw new Error(\"No follow ups found\");\r\n        }\r\n\r\n        let players: SelectedPlayer[] | undefined;\r\n        if (\"definedPlayers\" in param) {\r\n            players = param.definedPlayers;\r\n        } else {\r\n            players = undefined;\r\n        }\r\n\r\n        const content = selection.selectRandomWeighted(followUps, x => x.weight)!;\r\n        const text = content.translations.find(x => x.lang === lang)!.content;\r\n        return { text, players };\r\n    }\r\n}\r\n\r\nexport function formatText<TCard extends TextCard>(\r\n    text: string,\r\n    card: TCard,\r\n    definedPlayers: SelectedPlayer[] | null,\r\n    selection: SelectionAlgorithm,\r\n    translator: Translator,\r\n): { formatted: string; players: SelectedPlayer[] } {\r\n    const fragments = new DefaultTextDecoder().decode(text);\r\n    const playerRequirements = TextFormatter.getRequiredPlayers(fragments, card.players);\r\n\r\n    const players = gameEngine.selectPlayers(\r\n        selection,\r\n        playerRequirements,\r\n        definedPlayers || [],\r\n        card.tags,\r\n    );\r\n\r\n    const requiredSips = TextFormatter.getRequiredSips(fragments);\r\n\r\n    const indexedPlayers: { [index: number]: PlayerInfo } = {};\r\n    for (const player of players) {\r\n        indexedPlayers[player.index] = player.player;\r\n    }\r\n\r\n    const sips: { [index: number]: number } = {};\r\n    for (const sipInfo of requiredSips) {\r\n        sips[sipInfo.sipsIndex] = selection.getSips(sipInfo.minSips);\r\n    }\r\n\r\n    const socialMediaPlatform = store.getState().settings.socialMediaPlatform;\r\n\r\n    const formatted = TextFormatter.format(\r\n        fragments,\r\n        indexedPlayers,\r\n        sips,\r\n        socialMediaPlatform,\r\n        x => translator.translate(`game.textFormatter.${x}`),\r\n        selection,\r\n        { boldPlayerNames: true, boldSips: true },\r\n    );\r\n\r\n    return { formatted: formatted, players };\r\n}\r\n\r\nexport function selectText(\r\n    selection: SelectionAlgorithm,\r\n    selectedCard: TextCard,\r\n    translator: Translator,\r\n): string {\r\n    const lang = translator.languageCode;\r\n\r\n    const viableContents = selectedCard.content.filter(x =>\r\n        _.some(x.translations, y => y.lang.toLocaleLowerCase() === lang),\r\n    );\r\n    const content = selection.selectRandomWeighted(viableContents, x => x.weight)!;\r\n    return content.translations.find(x => x.lang === lang)!.content;\r\n}\r\n","import { SlidePresenter } from \"./slide-presenter\";\r\nimport { Card } from \"@core/cards/card\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { ReactNode } from \"react\";\r\nimport * as actions from \"../../actions\";\r\nimport { ActionType } from \"typesafe-actions\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport abstract class CardPresenter<TCard extends Card> implements SlidePresenter {\r\n    abstract backgroundColor: string;\r\n    requiredCards: string[];\r\n\r\n    constructor(protected cardType: string, public slideType: string) {\r\n        this.requiredCards = [cardType];\r\n    }\r\n\r\n    initialize(): ActionType<any>[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const cardRef = selection.selectCard(this.cardType);\r\n\r\n        return [actions.applyCard(cardRef), ...this.initializeCard(cardRef.card as TCard, cardRef)];\r\n    }\r\n\r\n    initializeFollowUp(card: CardRef | null, param: any): ActionType<any>[] {\r\n        return this.initializeFollowUpCard(card!.card as TCard, param, card!);\r\n    }\r\n\r\n    abstract render(): ReactNode;\r\n    protected abstract initializeCard(card: TCard, cardRef: CardRef): ActionType<any>[];\r\n    protected abstract initializeFollowUpCard(card: TCard, param: any, cardRef: CardRef): ActionType<any>[];\r\n}\r\n","export default {\r\n    down: \"#c23616\", //pomegrenate (red)\r\n    drink: \"#2470A3\", //belize hole (blue)\r\n    fact: \"#D5880B\", //orange\r\n    groupGame: \"#664EDF\", //green sea\r\n    neverEver: \"#C75000\", //pumpkin\r\n    noIdeaLoses: \"#192a56\", //pico void (dark blue)\r\n    truthOrDare: \"#2c3e50\", //Midnight blue\r\n    virus: \"##219150\",\r\n    wouldYouRather: \"#273c75\",\r\n    task: \"##667293\",\r\n};","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { PlayerSelectionInsights } from \"@core/selection/insights\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    Button,\r\n    createStyles,\r\n    Paper,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport * as gameEngine from \"../game-engine\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { formatText, selectText } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TruthOrDareSlideState,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n    setState: actions.setSlideState,\r\n    applyCard: actions.applyCard,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...baseStyles.rootStyle(),\r\n            cursor: \"default\",\r\n        },\r\n        clickableRoot: {\r\n            ...baseStyles.rootStyle(),\r\n        },\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            marginBottom: 15,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                fontSize: \"1.5em\",\r\n            },\r\n        },\r\n        spaceHeader: {\r\n            visibility: \"hidden\",\r\n            marginTop: 15,\r\n        },\r\n        questionPaper: {\r\n            padding: theme.spacing.unit * 2,\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                width: theme.spacing.unit * 50,\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                width: \"80vw\",\r\n                margin: theme.spacing.unit,\r\n            },\r\n        },\r\n        questionButtonsContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: theme.spacing.unit,\r\n        },\r\n        refuseMessage: {\r\n            opacity: 0.8,\r\n            marginTop: 10,\r\n        },\r\n    });\r\n\r\ntype MappedActions = typeof dispatchProps;\r\n\r\ntype Props = MappedActions &\r\n    ReturnType<typeof mapStateToProps> &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction QuestionComponent(props: Props) {\r\n    const { state, players, nextSlide, classes } = props;\r\n    const player = players.find(x => x.id === state.selectedPlayer);\r\n    if (player === undefined) {\r\n        nextSlide(toTranslator(props));\r\n        return <div />;\r\n    }\r\n\r\n    const select = (decision: TruthOrDare) =>\r\n        new TruthOrDareSlide(toTranslator(props)).select(decision, props, player);\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"scale(1, 1)\",\r\n        from: { opacity: 0, transform: \"scale(2.5, 2.5)\" },\r\n    });\r\n\r\n    return (\r\n        <animated.div style={springProps}>\r\n            <Paper className={classes.questionPaper}>\r\n                <Typography style={{ fontSize: 17, fontWeight: 500 }}>\r\n                    <Translate\r\n                        id=\"slides.truthordare.playerTruthordare\"\r\n                        data={{ name: player.name }}\r\n                    />\r\n                </Typography>\r\n                <div className={classes.questionButtonsContainer}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: 15 }}\r\n                        onClick={() => select(\"Truth\")}\r\n                    >\r\n                        <Translate id=\"slides.truthordare.truth\" />\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => select(\"Dare\")}>\r\n                        <Translate id=\"slides.truthordare.dare\" />\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        </animated.div>\r\n    );\r\n}\r\n\r\nfunction DareComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h5\" color=\"inherit\">\r\n            <Translate id=\"slides.truthordare.truth\" /> <Translate id=\"slides.truthordare.or\" />{\" \"}\r\n            <b>\r\n                <Translate id=\"slides.truthordare.dare\" />\r\n            </b>\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={cardMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseDare\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\" color=\"inherit\">\r\n            <b>\r\n                <Translate id=\"slides.truthordare.truth\" />\r\n            </b>{\" \"}\r\n            <Translate id=\"slides.truthordare.or\" /> <Translate id=\"slides.truthordare.dare\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={cardMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseTruth\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthOrDareComponent(props: Props) {\r\n    const { classes, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    if (state.isDeciding) {\r\n        return <div className={classes.root}>{QuestionComponent(props)}</div>;\r\n    }\r\n\r\n    if (state.decision === \"Dare\") {\r\n        return DareComponent(props);\r\n    } else {\r\n        return TruthComponent(props);\r\n    }\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TruthOrDareComponent) as React.ComponentType;\r\n\r\ntype TruthOrDare = \"Truth\" | \"Dare\";\r\n\r\ninterface TruthOrDareSlideState {\r\n    selectedPlayer: string;\r\n    isDeciding: boolean;\r\n    decision?: TruthOrDare;\r\n    markdownContent?: string;\r\n}\r\n\r\nexport class TruthOrDareSlide implements SlidePresenter {\r\n    backgroundColor = colors.truthOrDare;\r\n\r\n    constructor(private translator: Translator) {}\r\n\r\n    public slideType = \"TruthOrDareSlide\";\r\n    public requiredCards = [\"TaskCard\", \"QuestionCard\"];\r\n\r\n    public select(decision: TruthOrDare, actions: MappedActions, player: PlayerInfo) {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const cardType = decision === \"Dare\" ? \"TaskCard\" : \"QuestionCard\";\r\n\r\n        let formatted: string | null = null;\r\n        let cardRef: CardRef;\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            cardRef = selection.selectCard(cardType);\r\n            const card = cardRef.card as TextCard;\r\n\r\n            const selectedText = selectText(selection, card, this.translator);\r\n            const text = `#### ${this.translator.translate(\r\n                \"slides.truthordare.instruction\",\r\n            )}\\n${selectedText}`;\r\n\r\n            try {\r\n                const result = formatText(\r\n                    text,\r\n                    card,\r\n                    [{ index: 99, player }],\r\n                    selection,\r\n                    this.translator,\r\n                );\r\n\r\n                formatted = result.formatted;\r\n            } catch (error) {\r\n                // likely not enough players\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (formatted === null) {\r\n            actions.nextSlide(this.translator);\r\n            return;\r\n        }\r\n\r\n        actions.applyCard(cardRef!);\r\n\r\n        const state: TruthOrDareSlideState = {\r\n            isDeciding: false,\r\n            selectedPlayer: player.id,\r\n            markdownContent: formatted,\r\n            decision,\r\n        };\r\n        actions.setState({ state, insights: selection.insights.playerSelection });\r\n    }\r\n\r\n    initialize(): RootAction[] {\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const player = gameEngine.selectPlayers(\r\n            selection,\r\n            [new PlayerSetting(1, \"None\")],\r\n            [],\r\n            [],\r\n        )[0].player;\r\n\r\n        return [\r\n            this.setState(\r\n                { isDeciding: true, selectedPlayer: player.id },\r\n                selection.insights.playerSelection,\r\n            ),\r\n        ];\r\n    }\r\n\r\n    private setState(\r\n        state: TruthOrDareSlideState,\r\n        insights: PlayerSelectionInsights | null = null,\r\n    ): RootAction {\r\n        return actions.setSlideState({ state, insights });\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not supported.\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spring, config } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport { DownCard } from \"src/impl/cards/down-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DownSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 15,\r\n        },\r\n        hidden: baseStyles.hidden()\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DownSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.down.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Spring\r\n                    config={config.wobbly}\r\n                    from={{ transform: \"translate(-100px, 0px)\" }}\r\n                    to={{ transform: \"translate(0px, 0px)\" }}\r\n                >\r\n                    {props => (\r\n                        <div style={props as any}>\r\n                            {header}\r\n                            <Markdown\r\n                                children={state.markdownContent}\r\n                                options={cardMarkdownOptions}\r\n                            />\r\n                            <div className={classes.hidden}>{header}</div>\r\n                        </div>\r\n                    )}\r\n                </Spring>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DownSlideComponent) as React.ComponentType;\r\n\r\ninterface DownSlideState extends TextSlideState {}\r\nexport class DownSlide extends TextSlidePresenter<DownSlideState, DownCard> {\r\n    backgroundColor = colors.down;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DownCard\", \"DownSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { FactCard } from \"src/impl/cards/fact-card\";\r\nimport * as actions from \"../actions\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as FactSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction FactSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\" color=\"inherit\">\r\n            <Translate id={`slides.fact.title${state.isFollowUp ? (state.isTrue ? \".true\" : \".false\") : \"\"}`} />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface FactSlideFollowUpParam {\r\n    mode: FactSlideMode;\r\n    players: SelectedPlayer[];\r\n    isTrue: boolean;\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize\r\n)(FactSlideComponent) as React.ComponentType;\r\n\r\ntype FactSlideMode = \"singleplayer\" | \"multiplayer\";\r\nconst availableFactSlideModes: FactSlideMode[] = [\"singleplayer\", \"multiplayer\"];\r\n\r\ninterface FactSlideState extends TextSlideState {\r\n    isFollowUp: boolean;\r\n    mode: FactSlideMode;\r\n    isTrue: boolean;\r\n}\r\n\r\nexport class FactSlide extends TextSlidePresenter<FactSlideState, FactCard> {\r\n    private selectedMode: FactSlideMode;\r\n    private players?: SelectedPlayer[];\r\n    backgroundColor = colors.fact;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"FactCard\", \"FactSlide\");\r\n\r\n        this.selectedMode =\r\n            availableFactSlideModes[Math.floor(availableFactSlideModes.length * Math.random())];\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        const cardText = super.selectText(selection, selectedCard);\r\n        const instruction = this.translator.translate(`slides.fact.${this.selectedMode}`);\r\n\r\n        return `#### ${instruction}\\n${cardText}`;\r\n    }\r\n\r\n    selectFollowUpText(\r\n        _selection: SelectionAlgorithm,\r\n        selectedCard: FactCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const { mode, players } = param as FactSlideFollowUpParam;\r\n        const { isTrueFact } = selectedCard;\r\n\r\n        const text = this.translator.translate(`slides.fact.${mode}.${isTrueFact}`);\r\n        return { text, players };\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        card: FactCard,\r\n        players: SelectedPlayer[],\r\n    ): FactSlideState {\r\n        this.players = players;\r\n\r\n        return {\r\n            isFollowUp: false,\r\n            markdownContent: markdownContent,\r\n            mode: this.selectedMode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string, card: FactCard,  param: any): FactSlideState {\r\n        const { mode } = param as FactSlideFollowUpParam;\r\n        return {\r\n            isFollowUp: true,\r\n            markdownContent: markdownContent,\r\n            mode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeCard(card: FactCard, cardRef: CardRef): RootAction[] {\r\n        return [...super.initializeCard(card, cardRef), actions.enqueueFollowUp({\r\n            due: new Date(),\r\n            selectedCard: cardRef,\r\n            slideType: \"FactSlide\",\r\n            param: {\r\n                mode: this.selectedMode,\r\n                players: this.players,\r\n            } as FactSlideFollowUpParam,\r\n        })];\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { compose } from \"redux\";\r\nimport { NeverEverCard } from \"src/impl/cards/never-ever-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as State,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: baseStyles.smallHeaderStyle(theme),\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NeverEverComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    if (state.isFollowUp) {\r\n        return (\r\n            <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n                <div className={classes.content}>\r\n                    <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h6\" color=\"inherit\">\r\n            <Translate id=\"slides.neverever.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"rotate(0deg)\",\r\n        from: { opacity: 0, transform: \"rotate(20deg)\" },\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <animated.div style={springProps} className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography style={{ marginTop: 20 }} color=\"inherit\" variant=\"subtitle1\">\r\n                        <Translate id=\"slides.neverever.instruction\" data={{ sips: state.sips }} />\r\n                    </Typography>\r\n                </div>\r\n            </animated.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NeverEverComponent) as React.ComponentType;\r\n\r\ninterface State extends TextSlideState {\r\n    sips: number;\r\n    isFollowUp: boolean;\r\n}\r\n\r\nexport class NeverEverSlide extends TextSlidePresenter<State, NeverEverCard> {\r\n    backgroundColor = colors.neverEver;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NeverEverCard\", \"NeverEverSlide\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: NeverEverCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n            isFollowUp: false,\r\n        };\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n            isFollowUp: true,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WouldYouRatherCard } from \"src/impl/cards/would-you-rather-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as WouldYouRatherSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: baseStyles.smallHeaderStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction WouldYouRatherSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    if (state.isFollowUp) {\r\n        return (\r\n            <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n                <div className={classes.content}>\r\n                    <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h6\" color=\"inherit\">\r\n            <Translate id=\"slides.wouldyourather.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography style={{ marginTop: 20 }} color=\"inherit\" variant=\"subtitle1\">\r\n                        <Translate\r\n                            id=\"slides.wouldyourather.instruction\"\r\n                            data={{ sips: state.sips }}\r\n                        />\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(WouldYouRatherSlideComponent) as React.ComponentType;\r\n\r\ninterface WouldYouRatherSlideState extends TextSlideState {\r\n    sips: number;\r\n    isFollowUp: boolean;\r\n}\r\n\r\nexport class WouldYouRatherSlide extends TextSlidePresenter<\r\n    WouldYouRatherSlideState,\r\n    WouldYouRatherCard\r\n> {\r\n    backgroundColor = colors.wouldYouRather;\r\n    constructor(translator: Translator) {\r\n        super(translator, \"WyrCard\", \"WouldYouRatherSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: WouldYouRatherCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n            isFollowUp: false,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n            isFollowUp: true,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { DrinkCard } from \"src/impl/cards/drink-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DrinkSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DrinkSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DrinkSlideComponent) as React.ComponentType;\r\n\r\ninterface DrinkSlideState extends TextSlideState {}\r\nexport class DrinkSlide extends TextSlidePresenter<DrinkSlideState, DrinkCard> {\r\n    backgroundColor = colors.drink;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DrinkCard\", \"DrinkSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { VirusCard } from \"src/impl/cards/virus-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as VirusSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction VirusSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.virus.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(VirusSlideComponent) as React.ComponentType;\r\n\r\ninterface VirusSlideState extends TextSlideState {}\r\nexport class VirusSlide extends TextSlidePresenter<VirusSlideState, VirusCard> {\r\n    backgroundColor = colors.virus;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"VirusCard\", \"VirusSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { NoIdeaLosesCard } from \"src/impl/cards/no-idea-loses-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as NoIdeaLosesSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NoIdeaLosesSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NoIdeaLosesSlideComponent) as React.ComponentType;\r\n\r\ninterface NoIdeaLosesSlideState extends TextSlideState {}\r\nexport class NoIdeaLosesSlide extends TextSlidePresenter<NoIdeaLosesSlideState, NoIdeaLosesCard> {\r\n    backgroundColor = colors.noIdeaLoses;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NoIdeaLosesCard\", \"NoIdeaLosesSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { GroupGameCard } from \"src/impl/cards/group-game-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as GroupGameSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction GroupGameSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.groupgame.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(GroupGameSlideComponent) as React.ComponentType;\r\n\r\ninterface GroupGameSlideState extends TextSlideState {}\r\nexport class GroupGameSlide extends TextSlidePresenter<GroupGameSlideState, GroupGameCard> {\r\n    backgroundColor = colors.groupGame;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"GroupGameCard\", \"GroupGameSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { TaskCard } from \"src/impl/cards/task-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TaskSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction TaskSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.task.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <Typography style={{ opacity: 0.8, marginTop: 10 }} color=\"inherit\">\r\n                    <Translate id=\"slides.task.instruction\" />\r\n                </Typography>\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TaskSlideComponent) as React.ComponentType;\r\n\r\ninterface TaskSlideState extends TextSlideState {}\r\nexport class TaskSlide extends TextSlidePresenter<TaskSlideState, TaskCard> {\r\n    backgroundColor = colors.task;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"TaskCard\", \"TaskSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        let task = super.selectText(selection, selectedCard);\r\n        if (/[A-Z-a-z]$/g.test(task)) {\r\n            task = task + \".\";\r\n        }\r\n\r\n        return \"[Player99]: \" + task;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport * as actions from \"../actions\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Typography, Fab, createStyles, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport * as baseStyles from \"./base/helper\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        button: {\r\n            minWidth: 200,\r\n        }\r\n    });\r\n\r\ntype Props = RouteComponentProps & WithStyles<typeof styles>;\r\n\r\nfunction GameFinishedComponent({ history, classes }: Props) {\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <Typography color=\"inherit\" variant=\"h2\" gutterBottom>\r\n                    <Translate id=\"slides.gamefinished.title\" />\r\n                </Typography>\r\n                <Fab className={classes.button} variant=\"extended\" color=\"primary\" onClick={() => history.push(\"/\")}>\r\n                    <Translate id=\"slides.gamefinished.goBack\" />\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = withRouter(withStyles(styles)(GameFinishedComponent));\r\n\r\nexport class GameFinishedSlide implements SlidePresenter {\r\n    slideType = \"GameFinishedSlide\";\r\n    requiredCards = [];\r\n    backgroundColor = \"#000000\";\r\n\r\n    initialize(): RootAction[] {\r\n        return [actions.setSlideState({ state: {}, insights: null })];\r\n    }\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    render(): React.ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","import { TruthOrDareSlide } from './slides/TruthOrDareSlide';\r\nimport { DownSlide } from \"./slides/DownSlide\";\r\nimport { SlidePresenter } from \"./slides/base/slide-presenter\";\r\nimport { FactSlide } from \"./slides/FactSlide\";\r\nimport { NeverEverSlide } from \"./slides/NeverEverSlide\";\r\nimport { Translator } from \"GameModels\";\r\nimport { WouldYouRatherSlide } from './slides/WouldYouRatherSlide';\r\nimport { DrinkSlide } from './slides/DrinkSlide';\r\nimport { VirusSlide } from './slides/VirusSlide';\r\nimport { NoIdeaLosesSlide } from './slides/NoIdeaLosesSlide';\r\nimport { GroupGameSlide } from './slides/GroupGameSlide';\r\nimport { TaskSlide } from './slides/TaskSlide';\r\nimport { OpeningSlide } from './slides/OpeningSlide';\r\nimport { GameFinishedSlide } from './slides/GameFinishedSlide';\r\n\r\nexport type SlideComponents = { [type: string]: new(translator: Translator) => SlidePresenter };\r\n\r\nexport const slideComponents: SlideComponents = {\r\n    DownSlide,\r\n    FactSlide,\r\n    NeverEverSlide,\r\n    TruthOrDareSlide,\r\n    WouldYouRatherSlide,\r\n    DrinkSlide,\r\n    VirusSlide,\r\n    NoIdeaLosesSlide,\r\n    GroupGameSlide,\r\n    TaskSlide,\r\n    OpeningSlide,\r\n    GameFinishedSlide\r\n};\r\n","import { MelinaAlgorithm } from \"./../../core/selection/melina-algorithm\";\r\nimport { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { filter, mergeMap, tap, ignoreElements } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../store/index\";\r\nimport * as actions from \"./actions\";\r\nimport { getRandomSelectionAlgorithm } from \"./game-engine\";\r\nimport { slideComponents } from \"./component-registry\";\r\nimport { of } from \"rxjs\";\r\nimport { Translator } from \"GameModels\";\r\nimport { getSlideRegistrations } from \"./slides-processor\";\r\n\r\nexport const nextSlideEpic: Epic<RootAction, RootAction, RootState, Services> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.requestSlideAsync.request)),\r\n        mergeMap(x => of(...nextSlide(x.payload))),\r\n    );\r\n\r\nexport const redirectOnGameStartedEpic: Epic<\r\n    RootAction,\r\n    RootAction,\r\n    RootState,\r\n    Services\r\n> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.startGame)),\r\n        tap(action => action.payload.push(\"/play/game\")),\r\n        ignoreElements(),\r\n    );\r\n\r\nfunction nextSlide(translator: Translator): RootAction[] {\r\n    const now = new Date();\r\n    let state = store.getState();\r\n\r\n    const dueFollowUps = state.game.followUp.filter(x => x.due < now);\r\n    if (dueFollowUps.length > 0) {\r\n        const followUp = _.sortBy(dueFollowUps, x => x.due.getSeconds())[0];\r\n\r\n        const factory = slideComponents[followUp.slideType];\r\n        const slideInitalizer = new factory(translator);\r\n        const slideActions = slideInitalizer.initializeFollowUp(\r\n            followUp.selectedCard,\r\n            followUp.param,\r\n        );\r\n\r\n        return [actions.activateFollowUp(followUp), ...slideActions];\r\n    }\r\n\r\n    let selection = getRandomSelectionAlgorithm(state);\r\n    const slides = getSlideRegistrations(slideComponents);\r\n\r\n    const { willPower, memory } = selection.recomputeWillPower(state.game.willPowerMemory);\r\n    const willPowerActions = new Array<RootAction>();\r\n\r\n    if (willPower !== state.game.currentWillPower) {\r\n        if (!state.game.isWillPowerLocked) {\r\n            willPowerActions.push(actions.setWillPower(willPower));\r\n            state = { ...state, game: { ...state.game, currentWillPower: willPower } };\r\n            selection = getRandomSelectionAlgorithm(state);\r\n        }\r\n    }\r\n\r\n    if (memory.length > 0) {\r\n        willPowerActions.push(actions.addWillPowerMemory(memory));\r\n    }\r\n\r\n    let slideType = selection.selectNextSlide(slides);\r\n    if (slideType === undefined) {\r\n        // TODO: end game\r\n        slideType = \"GameFinishedSlide\";\r\n    }\r\n\r\n    const factory = slideComponents[slideType];\r\n    const slideInitalizer = new factory(translator);\r\n    const slideActions = slideInitalizer.initialize();\r\n\r\n    return [\r\n        actions.requestSlideAsync.success({\r\n            slide: slideType,\r\n            insights: (selection as MelinaAlgorithm).insights.slideWeights!,\r\n        }),\r\n        ...slideActions,\r\n        ...willPowerActions\r\n    ];\r\n}\r\n","import { SlideComponents } from \"./component-registry\";\r\nimport { SlideRegistration } from \"@core/slide-registration\";\r\n\r\nexport function getSlideRegistrations(components: SlideComponents): SlideRegistration[] {\r\n    const result = new Array<SlideRegistration>();\r\n\r\n    for (const component in components) {\r\n        if (components.hasOwnProperty(component)) {\r\n            const element = components[component];\r\n            const slide = new element({ languageCode: \"en\", translate: () => \"\" });\r\n            result.push({ slideType: slide.slideType, requestedCards: slide.requiredCards });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","export class PlayerArrangement {\r\n    constructor(public p1: string, public p2: string) {}\r\n}\r\n","import { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { of } from \"rxjs\";\r\nimport { filter, mergeMap } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport { automaticArrangements } from \"../../preferences\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport const nextSlideEpic: Epic<RootAction, RootAction, RootState, Services> = (action$, state$) =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.addPlayer)),\r\n        mergeMap(action => {\r\n            const arrangements: PlayerArrangement[] = [];\r\n\r\n            for (const key in automaticArrangements) {\r\n                if (automaticArrangements.hasOwnProperty(key)) {\r\n                    const matches = automaticArrangements[key];\r\n\r\n                    // if the added player is listed as key in preferences\r\n                    if (action.payload.name.toUpperCase() == key.toUpperCase()) {\r\n                        for (const matchName of matches) {\r\n                            const matchedPlayer = state$.value.play.players.find(\r\n                                x => x.name.toUpperCase() === matchName.toUpperCase(),\r\n                            );\r\n                            if (matchedPlayer === undefined) {\r\n                                continue;\r\n                            }\r\n\r\n                            arrangements.push(\r\n                                new PlayerArrangement(matchedPlayer.id, action.payload.id),\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    // if the player is listed as value preferences\r\n                    const existingPlayer = state$.value.play.players.find(\r\n                        x => x.name.toUpperCase() === key.toUpperCase(),\r\n                    );\r\n                    if (existingPlayer !== undefined) {\r\n                        const addedMatch = matches.find(\r\n                            x => x.toUpperCase() === action.payload.name.toUpperCase(),\r\n                        );\r\n                        if (addedMatch !== undefined) {\r\n                            arrangements.push(\r\n                                new PlayerArrangement(action.payload.id, existingPlayer.id),\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const addActions = new Array<RootAction>();\r\n            for (const arrangement of arrangements) {\r\n                if (\r\n                    state$.value.play.arrangements.find(\r\n                        x =>\r\n                            (x.p1 === arrangement.p1 || x.p2 === arrangement.p2) ||\r\n                            (x.p1 === arrangement.p2 || x.p2 === arrangement.p1),\r\n                    ) !== undefined\r\n                ) {\r\n                    continue;\r\n                }\r\n\r\n                addActions.push(actions.addPlayerArrangment(arrangement));\r\n            }\r\n\r\n            return of(...addActions);\r\n        }),\r\n    );\r\n","import { combineEpics } from \"redux-observable\";\r\nimport * as settingsEpics from \"../features/settings/epics\";\r\nimport * as gameEpics from \"../features/game/epics\";\r\nimport * as playEpics from \"../features/play/epics\";\r\n\r\nexport default combineEpics(...Object.values(settingsEpics), ...Object.values(gameEpics), ...Object.values(playEpics));\r\n","import { compose } from \"redux\";\r\n\r\n// @ts-ignore\r\nexport const composeEnhancers =\r\n    (process.env.NODE_ENV === \"development\" &&\r\n        window &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n","import { PlayerSelectionInsights, SlideSelectionInsights } from \"./../../core/selection/insights\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { FollowUpSlide } from \"GameModels\";\r\nimport cuid from \"cuid\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport type GameState = Readonly<{\r\n    isStarted: boolean;\r\n\r\n    selectedSlide: string | null;\r\n    selectedCard: CardRef | null;\r\n\r\n    slideState: any | null;\r\n\r\n    currentWillPower: number;\r\n    isWillPowerLocked: boolean;\r\n    willPowerMemory: string[];\r\n\r\n    playerInsights: PlayerSelectionInsights | null;\r\n    slideInsights: SlideSelectionInsights | null;\r\n\r\n    startTime: Date | null;\r\n\r\n    cardsHistory: CardRef[];\r\n    slidesHistory: string[];\r\n    followUp: FollowUpSlide[];\r\n    activeFollowUp: FollowUpSlide | null;\r\n    currentSlideStatus: string;\r\n}>;\r\n\r\nexport default combineReducers<GameState, RootAction>({\r\n    cardsHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return [action.payload, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slidesHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return [action.payload.slide, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    isStarted: (state = false, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.startGame):\r\n                return true;\r\n            case getType(actions.cancelGame):\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedCard: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return action.payload;\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.selectedCard;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedSlide: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.slide;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.slideType;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideState: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n            case getType(actions.activateFollowUp):\r\n            case getType(actions.startGame):\r\n                return null;\r\n            case getType(actions.setSlideState):\r\n                return action.payload.state;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    followUp: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.enqueueFollowUp):\r\n                return [...state, action.payload];\r\n            case getType(actions.activateFollowUp):\r\n                return state.filter(x => x.due !== action.payload.due);\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    activeFollowUp: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    startTime: (state = null, action) => {\r\n        if (action.type === getType(actions.startGame)) {\r\n            return new Date();\r\n        }\r\n        return state;\r\n    },\r\n    isWillPowerLocked: (state = false, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setWillPowerLocked):\r\n                return action.payload;\r\n            case getType(actions.startGame):\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    currentWillPower: (state = 1, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setWillPower):\r\n                return action.payload;\r\n            case getType(actions.startGame):\r\n                return 1;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    willPowerMemory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addWillPowerMemory):\r\n                return [...state, ...action.payload];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    playerInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideState):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    currentSlideStatus: (state = \"\", action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return cuid();\r\n            case getType(actions.startGame):\r\n                return \"\";\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { slideWeights } from \"../../preferences\";\r\nimport _ from \"lodash\";\r\n\r\nexport type SettingsState = Readonly<{\r\n    preferOppositeGenders: boolean;\r\n    slides: Array<Weighted<string>>;\r\n    socialMediaPlatform: string;\r\n    sources: SourceInfo[];\r\n    tags: Array<Weighted<string>>;\r\n}>;\r\n\r\nexport default combineReducers<SettingsState, RootAction>({\r\n    sources: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addSource):\r\n                return [...state, action.payload];\r\n            case getType(actions.removeSource):\r\n                return state.filter(x => x.url !== action.payload);\r\n            case getType(actions.loadSourceAsync.request):\r\n                return state.map(item =>\r\n                    item.url === action.payload ? { ...item, isLoading: true } : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.success):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? {\r\n                              ...item,\r\n                              cards: action.payload.cards,\r\n                              errorMessage: null,\r\n                              isLoading: false,\r\n                              tags: _.uniq(\r\n                                  _.flatten(action.payload.cards.map(x => x.tags)).map(x =>\r\n                                      (x as string).toLowerCase(),\r\n                                  ),\r\n                              ),\r\n                          }\r\n                        : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.failure):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? { ...item, isLoading: false, errorMessage: action.payload.message }\r\n                        : item,\r\n                );\r\n            case getType(actions.setSourceWeight):\r\n                return state.map(item =>\r\n                    item.url === action.payload.value\r\n                        ? { ...item, weight: action.payload.weight }\r\n                        : item,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    preferOppositeGenders: (state = true, action) => {\r\n        if (action.type === getType(actions.setPreferOppositeGenders)) {\r\n            return action.payload;\r\n        }\r\n        return state;\r\n    },\r\n    slides: (state = GetSlideWeightedArray(), action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideWeight):\r\n                return state.map(x => (x.value === action.payload.value ? action.payload : x));\r\n            case getType(actions.resetWeights):\r\n                return GetSlideWeightedArray();\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    socialMediaPlatform: (state = \"Snapchat\", action) => {\r\n        if (action.type === getType(actions.setSocialMediaPlatform)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    tags: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setTagWeight):\r\n                const value = action.payload.value.toLowerCase();\r\n                const existingTag = state.find(x => x.value === value);\r\n                if (existingTag !== undefined) {\r\n                    return state.map(x =>\r\n                        x.value === value ? { value, weight: action.payload.weight } : x,\r\n                    );\r\n                } else {\r\n                    return [...state, action.payload];\r\n                }\r\n            case getType(actions.resetWeights):\r\n                return state.map(x => ({ ...x, weight: 0.5 }));\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n\r\nfunction GetSlideWeightedArray() {\r\n    const weightsList: Weighted<string>[] = [];\r\n    for (const key in slideWeights) {\r\n        if (slideWeights.hasOwnProperty(key)) {\r\n            const element = slideWeights[key];\r\n            weightsList.push({ value: key, weight: element });\r\n        }\r\n    }\r\n\r\n    return weightsList;\r\n}\r\n","import { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { combineReducers } from \"redux\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport * as actions from \"./actions\";\r\nimport { getType } from \"typesafe-actions\";\r\n\r\nexport type PlayState = Readonly<{\r\n    players: PlayerInfo[];\r\n    arrangements: PlayerArrangement[];\r\n}>;\r\n\r\nexport default combineReducers<PlayState, RootAction>({\r\n    players: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayer):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayer):\r\n                return state.filter(x => x.id !== action.payload);\r\n            case getType(actions.updatePlayer):\r\n                return state.map(player =>\r\n                    player.id === action.payload.id ? action.payload : player,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    arrangements: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayerArrangment):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayerArrangment):\r\n                return state.filter(x => x.p1 !== action.payload);\r\n            case getType(actions.removePlayer):\r\n                return state.filter(x => x.p1 !== action.payload && x.p2 !== action.payload);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport gameReducer from \"../features/game/reducer\";\r\nimport settingsReducer from \"../features/settings/reducer\";\r\nimport playReducer from \"../features/play/reducer\";\r\nimport { localizeReducer } from \"react-localize-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    play: playReducer,\r\n    game: gameReducer,\r\n    settings: settingsReducer,\r\n    localize: localizeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport services from \"../services\";\r\nimport rootEpic from \"./root-epic\";\r\nimport { composeEnhancers } from \"./utils\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport { loadState, persistState } from \"./storage\";\r\n\r\nexport const epicMiddleware = createEpicMiddleware<RootAction, RootAction, RootState, Services>({\r\n    dependencies: services,\r\n});\r\n\r\n// configure middlewares\r\nconst middlewares = [epicMiddleware];\r\n\r\n// compose enchancers\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n// rehydrate state on app start\r\nconst initialState = loadState();\r\n\r\n// create store\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\npersistState(store);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\n// export store singleton instance\r\nexport default store;\r\n","import { CardDeck } from \"@core/card-deck\";\r\nimport { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GameStatus } from \"@core/game-status\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer } from \"GameModels\";\r\nimport seedrandom from \"seedrandom\";\r\nimport store from \"../../store\";\r\n\r\nexport function selectPlayers(\r\n    selection: SelectionAlgorithm,\r\n    players: PlayerSetting[],\r\n    predefined: SelectedPlayer[],\r\n    tags: string[],\r\n): SelectedPlayer[] {\r\n    const result = selection.selectPlayers(\r\n        players.map(x => x.gender),\r\n        players.map(x => {\r\n            const p = predefined.find(y => y.index === x.playerIndex);\r\n            if (p === undefined) {\r\n                return null;\r\n            }\r\n\r\n            return p.player;\r\n        }),\r\n        tags,\r\n    );\r\n    const selected = result.map((x, i) => ({ index: players[i].playerIndex, player: x }));\r\n\r\n    return selected;\r\n}\r\n\r\nexport function getRandomSelectionAlgorithm(state?: RootState): SelectionAlgorithm {\r\n    if (state === undefined) {\r\n        state = store.getState();\r\n    }\r\n\r\n    const random = seedrandom();\r\n    return new MelinaAlgorithm(extractGameStatus(state), random);\r\n}\r\n\r\nfunction extractGameStatus(state: RootState): GameStatus {\r\n    const currentStatus: GameStatus = {\r\n        decks: state.settings.sources\r\n            .filter(x => x.cards !== undefined)\r\n            .map(item => {\r\n                const result: CardDeck = { ...item, cards: item.cards || [] };\r\n                return result;\r\n            }),\r\n        cardsHistory: state.game.cardsHistory,\r\n        language: state.localize.languages.find(x => x.active)!.code,\r\n        players: state.play.players,\r\n        slides: state.settings.slides,\r\n        tags: state.settings.tags,\r\n        arrangements: state.play.arrangements,\r\n        preferOppositeGenders: state.settings.preferOppositeGenders,\r\n        slidesHistory: state.game.slidesHistory,\r\n        startTime: state.game.startTime!,\r\n        willPower: state.game.currentWillPower,\r\n    };\r\n\r\n    return currentStatus;\r\n}\r\n","import { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    createStyles,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n    FormControl,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\nimport { toFixedEnd } from \"@utils/string-extensions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Cell,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { compose } from \"redux\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { parsers } from \"../../../impl/registrations\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n});\r\n\r\nconst styles = createStyles({\r\n    chart: {\r\n        width: 200,\r\n        height: 300,\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & LocalizeContextProps;\r\ntype State = { selectedCardType: string | null };\r\n\r\nclass InsightsCards extends Component<Props, State> {\r\n    readonly state = { selectedCardType: null };\r\n\r\n    setSelectedCardType = (type: string) => {\r\n        this.setState({ selectedCardType: type === \"\" ? null : type });\r\n    };\r\n\r\n    render() {\r\n        const { translate, currentWillPower } = this.props;\r\n        const { selectedCardType } = this.state;\r\n\r\n        const cardTypes = [\"\", ...Object.keys(parsers)];\r\n\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const insights = selection.getAllCardDeckStatistics(selectedCardType);\r\n\r\n        const decksStatistics = percentageFixedTotal(insights.decks, x => x.weight, 1000).map(\r\n            x => ({\r\n                value: x.part / 10,\r\n                name: x.value.value.url,\r\n            }),\r\n        );\r\n\r\n        const willPowerStatistics = percentageFixedTotal(\r\n            insights.willPower,\r\n            x => x.weight,\r\n            1000,\r\n        ).map(x => ({\r\n            value: x.part / 10,\r\n            name: x.value.value.willPower || translate(\"insights.universal\"),\r\n            info: x.value.value,\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.cardsDist\" />\r\n                </Typography>\r\n                <Grid container alignItems=\"flex-end\" spacing={16}>\r\n                    <Grid item>\r\n                        <FormControl>\r\n                            <Select\r\n                                style={{ width: 200, marginTop: 10 }}\r\n                                value={selectedCardType || \"\"}\r\n                                displayEmpty={true}\r\n                                renderValue={x => x || translate(\"insights.allCards\")}\r\n                                onChange={ev => this.setSelectedCardType(ev.target.value)}\r\n                                input={<Input />}\r\n                            >\r\n                                {cardTypes.map(x => (\r\n                                    <MenuItem key={x} value={x}>\r\n                                        {x || translate(\"insights.allCards\")}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography>{`${translate(\"insights.cards\")}: ${insights.totalCards}`}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={decksStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" tickFormatter={x => toFixedEnd(x, 18)} />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={x => x + \"%\"}\r\n                            labelFormatter={url =>\r\n                                translate(\"insights.cardDeckName\", {\r\n                                    url,\r\n                                    cards: insights.decks.find(x => x.value.url === url)!.value\r\n                                        .cards.length,\r\n                                })\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            name={translate(\"insights.part\") as string}\r\n                            dataKey=\"value\"\r\n                            fill=\"#8884d8\"\r\n                            maxBarSize={20}\r\n                        />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.willPowerDist\" />\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={willPowerStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={(x, _, e) =>\r\n                                `${x}% (${e.payload.info.count} ${translate(\"insights.cards\")})`\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            dataKey=\"value\"\r\n                            maxBarSize={20}\r\n                            name={translate(\"insights.part\") as string}\r\n                        >\r\n                            {willPowerStatistics.map((entry, index) => (\r\n                                <Cell\r\n                                    fill={\r\n                                        entry.info.willPower === currentWillPower\r\n                                            ? \"#e74c3c\"\r\n                                            : \"#8884d8\"\r\n                                    }\r\n                                    key={index}\r\n                                />\r\n                            ))}\r\n                        </Bar>\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(InsightsCards) as React.ComponentType;\r\n","import React, { Component } from \"react\";\r\nimport InsightsCurrentSlide from \"./InsightsCurrentSlide\";\r\nimport InsightsWillPowerView from \"./InsightsWillPowerView\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport InsightsCards from \"./InsightsCards\";\r\n\r\nexport default class InsightsView extends Component {\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <InsightsWillPowerView />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 10}}>\r\n                    <InsightsCurrentSlide />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 20}}>\r\n                    <InsightsCards />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport {\r\n    AppBar,\r\n    Slide,\r\n    createStyles,\r\n    WithStyles,\r\n    withStyles,\r\n    Toolbar,\r\n    Button,\r\n    Typography,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport InsightsView from \"./InsightsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing.unit,\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction InsightsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.goBack()}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.insights\" />\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <InsightsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(InsightsDialog) as React.ComponentType;\r\n","import { AppBar, Tab, Tabs, Theme } from \"@material-ui/core\";\r\nimport { createStyles, withStyles, WithStyles, WithTheme } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../../play/components/PlayerArrangementsDialog\";\r\nimport ConfigurationRoute from \"../../../routes/ConfigurationRoute\";\r\nimport PlayRoute from \"../../../routes/PlayRoute\";\r\nimport SourcesRoute from \"../../../routes/SourcesRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n        },\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        firstChildMargins: {\r\n            marginTop: 24,\r\n            marginLeft: 24,\r\n            marginRight: 24,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme & LocalizeContextProps;\r\n\r\ninterface State {\r\n    value: number;\r\n}\r\n\r\nclass SettingsView extends React.Component<Props, State> {\r\n    readonly state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (_event: any, value: number) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleChangeIndex = (index: number) => {\r\n        this.setState({ value: index });\r\n    };\r\n\r\n    render() {\r\n        const { classes, translate } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab label={translate(\"settings.players\")} />\r\n                        <Tab label={translate(\"settings.sources\")} />\r\n                        <Tab label={translate(\"settings.configuration\")} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && <PlayRoute />}\r\n                {value === 1 && <SourcesRoute />}\r\n                {value === 2 && <ConfigurationRoute />}\r\n\r\n                <Route path=\"/play/game/settings/arrangements\" component={PlayerArrangementsDialog} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withStyles(styles, { withTheme: true }),\r\n)(SettingsView) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport SettingsView from \"./SettingsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n    },\r\n    dialogPaper: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            height: \"80vh\",\r\n        }\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction SettingsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.goBack()}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                classes={{\r\n                    paperScrollPaper: classes.dialogPaper,\r\n                }}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.settings\" />\r\n                        </Typography>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={() => history.push(\"/play/game/settings/arrangements\")}\r\n                        >\r\n                            <PeopleIcon />\r\n                        </IconButton>\r\n                        <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <SettingsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(SettingsDialog) as React.ComponentType;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { slideComponents } from \"../component-registry\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & LocalizeContextProps;\r\n\r\nfunction SlideWrapper(props: Props) {\r\n    const { selectedSlide } = props;\r\n\r\n    if (selectedSlide === null) {\r\n        return <Typography variant=\"h3\">Loading game...</Typography>;\r\n    }\r\n\r\n    const factory = slideComponents[selectedSlide];\r\n    const slideInitalizer = new factory(toTranslator(props));\r\n    const springProps = useSpring({backgroundColor: slideInitalizer.backgroundColor, height: \"100%\"});\r\n\r\n    return <animated.div style={springProps}>{slideInitalizer.render()}</animated.div>;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(SlideWrapper) as React.ComponentType;\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect, DispatchProp } from \"react-redux\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { OpeningSlide } from \"../slides/OpeningSlide\";\r\nimport GameOptions from \"./GameOptions\";\r\nimport InsightsDialog from \"./InsightsDialog\";\r\nimport SettingsDialog from \"./SettingsDialog\";\r\nimport SlideWrapper from \"./SlideWrapper\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    current: state.game.currentSlideStatus,\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & DispatchProp;\r\n\r\nclass GameComponent extends Component<Props> {\r\n    public componentDidMount() {\r\n        if (this.props.selectedSlide !== null) {\r\n            return;\r\n        }\r\n        const openingSlide = new OpeningSlide();\r\n        const slideActions = openingSlide.initialize();\r\n\r\n        this.props.dispatch(\r\n            actions.requestSlideAsync.success({\r\n                slide: openingSlide.slideType,\r\n                insights: null,\r\n            }),\r\n        );\r\n\r\n        for (const action of slideActions) {\r\n            this.props.dispatch(action);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div\r\n                style={{ width: \"100%\", height: \"100%\", position: \"relative\", overflow: \"hidden\" }}\r\n            >\r\n                <SlideWrapper />\r\n                <div style={{ top: 10, right: 10, position: \"absolute\", zIndex: 100 }}>\r\n                    <GameOptions />\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/play/game/settings\" component={SettingsDialog} />\r\n                    <Route path=\"/play/game/insights\" component={InsightsDialog} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(GameComponent) as React.ComponentType;\r\n","import { CircularProgress, createStyles, Fade, Paper, Theme, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { markdownOptions } from \"@utils/material-markdown\";\r\nimport Axios from \"axios\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { DrinkingGame } from \"./registrations\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    paper: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n        margin: theme.spacing.unit * 2,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\ninterface Props extends RouteComponentProps, LocalizeContextProps, WithStyles<typeof styles> {\r\n    game: DrinkingGame;\r\n}\r\n\r\ninterface State {\r\n    isLoadingLang: string | null;\r\n    content: string | null;\r\n}\r\n\r\nclass DrinkingGameComponent extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        isLoadingLang: null,\r\n        content: null,\r\n    };\r\n\r\n    getLang(): string | null {\r\n        const { history, activeLanguage, game } = this.props;\r\n\r\n        const path = history.location.pathname;\r\n        if (path !== `/drinkingGames/${game.name}`) {\r\n            return null;\r\n        }\r\n\r\n        const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n\r\n        return translation.lang;\r\n    }\r\n\r\n    render() {\r\n        const { content, isLoadingLang } = this.state;\r\n        const { game, classes } = this.props;\r\n\r\n        const lang = this.getLang();\r\n        if (lang === null) {\r\n            return null;\r\n        }\r\n\r\n        if (content !== null && isLoadingLang === lang) {\r\n            return (\r\n                <Paper className={classes.paper}>\r\n                    <Markdown children={content} options={markdownOptions} />\r\n                </Paper>\r\n            );\r\n        }\r\n\r\n        if (isLoadingLang !== lang) {\r\n            Axios.get(`${process.env.PUBLIC_URL}/explanations/${game.name}.${lang}.md`).then(response => {\r\n                const currentLang = this.getLang();\r\n\r\n                if (currentLang !== lang) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    content: response.data,\r\n                    isLoadingLang: currentLang\r\n                });\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Fade\r\n                in={true}\r\n                style={{\r\n                    transitionDelay: \"800ms\",\r\n                    margin: 20,\r\n                }}\r\n                unmountOnExit\r\n            >\r\n                <CircularProgress />\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withLocalize(withStyles(styles)(DrinkingGameComponent)));\r\n","import React from \"react\";\r\nimport DrinkingGame from \"../features/drinking-games/DrinkingGame\";\r\nimport game from \"../features/drinking-games/registrations\";\r\n\r\nexport default function DrinkingGameRoute() {\r\n    return (\r\n        <div>\r\n            {game.map(x => (\r\n                <DrinkingGame key={x.name} game={x} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    createStyles,\r\n    Theme,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Translate } from \"react-localize-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: theme.spacing.unit * 2,\r\n            maxWidth: theme.spacing.unit * 100,\r\n        },\r\n        header: {\r\n            marginTop: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction AboutRoute({ classes }: Props) {\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                                <Translate id=\"about.title\" />\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                Drinctet - Drink That!\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                <Translate id=\"about.aboutText\" />\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" className={classes.header}>\r\n                                <Translate id=\"about.installation\" />\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                <Translate id=\"about.installationText\" />\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" className={classes.header}>\r\n                                <Translate id=\"about.version\" />\r\n                            </Typography>\r\n                            <Typography inline>{process.env.REACT_APP_GIT_COMMIT}</Typography>\r\n                            <Typography inline color=\"textSecondary\">\r\n                                {process.env.REACT_APP_GIT_INFO}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AboutRoute);\r\n","import {\r\n    createStyles,\r\n    CssBaseline,\r\n    WithStyles,\r\n    withStyles,\r\n    WithTheme,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport AppDrawerContainer from \"./AppDrawerContainer\";\r\nimport PlayRoute from \"../routes/PlayRoute\";\r\nimport SourcesRoute from \"../routes/SourcesRoute\";\r\nimport ConfigurationRoute from \"../routes/ConfigurationRoute\";\r\nimport GameComponent from \"../features/game/components/GameComponent\";\r\nimport DrinkingGameRoute from \"../routes/DrinkingGameRoute\";\r\nimport AboutRoute from \"../routes/AboutRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        root: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n        },\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            flex: \"0 1 auto\",\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isStarted: state.game.isStarted,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & WithTheme;\r\n\r\nfunction App(props: Props) {\r\n    const { classes, isStarted } = props;\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div className={classes.root}>\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/play/game\"\r\n                        render={() => (!isStarted ? <Redirect to=\"/play\" /> : <GameComponent />)}\r\n                    />\r\n                    <Route\r\n                        path=\"/\"\r\n                        render={() => (\r\n                            <React.Fragment>\r\n                                <CssBaseline />\r\n                                <AppDrawerContainer />\r\n                                <main className={classes.content}>\r\n                                    <div className={classes.toolbar} />\r\n                                    <div style={{ flex: \"1 1 auto\" }}>\r\n                                        <Switch>\r\n                                            <Route\r\n                                                exact\r\n                                                path=\"/\"\r\n                                                render={() => <Redirect to=\"/play\" />}\r\n                                            />\r\n                                            <Route path=\"/play\" component={PlayRoute} />\r\n                                            <Route path=\"/sources\" component={SourcesRoute} />\r\n                                            <Route\r\n                                                path=\"/configuration\"\r\n                                                component={ConfigurationRoute}\r\n                                            />\r\n                                            <Route\r\n                                                path=\"/drinkingGames\"\r\n                                                component={DrinkingGameRoute}\r\n                                            />\r\n                                            <Route path=\"/about\" component={AboutRoute} />\r\n                                        </Switch>\r\n                                    </div>\r\n                                </main>\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles, { withTheme: true }),\r\n)(App) as React.ComponentType;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"tslib\";\r\nimport \"typeface-roboto\";\r\nimport App from \"./app/App\";\r\nimport \"./env\";\r\nimport { addSource, loadSourceAsync } from \"./features/settings/actions\";\r\nimport { addPlayer } from \"./features/play/actions\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport { initialize, LocalizeProvider, NamedLanguage } from \"react-localize-redux\";\r\nimport drinctetTranslations from \"./loc/drinctet.json\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { defaultSources } from \"./preferences\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst state = store.getState();\r\n\r\nif (state.settings.sources.length === 0) {\r\n    for (const src of defaultSources) {\r\n        const url = `${process.env.PUBLIC_URL}/${src}`;\r\n        store.dispatch(addSource(url));\r\n        store.dispatch(loadSourceAsync.request(url));\r\n    }\r\n}\r\nelse {\r\n    for (const src of state.settings.sources) {\r\n        store.dispatch(loadSourceAsync.request(src.url));\r\n    }\r\n}\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n    store.dispatch(addPlayer({ name: \"Vincent\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Melina\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Bursod\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Larny\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Sven\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Hufeld\", gender: \"Male\" }));\r\n}\r\n\r\nvar userLang = (navigator.language || ((navigator as any).userLanguage as string) || \"en\").split(\r\n    \"-\",\r\n)[0];\r\n\r\nconst languages: NamedLanguage[] = [\r\n    { code: \"en\", name: \"English\" },\r\n    { code: \"de\", name: \"Deutsch\" },\r\n];\r\nstore.dispatch(\r\n    initialize({\r\n        languages,\r\n        translation: drinctetTranslations,\r\n        options: { renderToStaticMarkup, defaultLanguage: userLang },\r\n    }),\r\n);\r\n\r\nconst Root = () => (\r\n    <div style={{ height: \"100%\" }}>\r\n        <Provider store={store}>\r\n            <LocalizeProvider store={store}>\r\n                <App />\r\n            </LocalizeProvider>\r\n        </Provider>\r\n    </div>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}