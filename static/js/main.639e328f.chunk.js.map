{"version":3,"sources":["env.ts","features/drinking-games/registrations.ts","features/drinking-games/DrinkingGameItems.tsx","app/AppDrawer.tsx","utils/path.ts","features/game/actions.ts","app/MainAppBar.tsx","app/AppDrawerContainer.tsx","features/play/actions.ts","features/play/components/AddPlayerForm.tsx","core/player-info.ts","features/play/selectors.ts","features/play/components/PlayerListItem.tsx","features/play/components/PlayerList.tsx","features/play/components/PlayerArrangements.tsx","features/play/components/PlayerArrangementsDialog.tsx","routes/PlayRoute.tsx","features/settings/actions.ts","features/settings/selectors.ts","features/settings/components/AddSourceForm.tsx","features/settings/components/SourcesListItem.tsx","features/settings/components/SourcesList.tsx","routes/SourcesRoute.tsx","features/settings/components/configuration/ChangeLanguage.tsx","features/settings/components/configuration/PlayerPairing.tsx","preferences.ts","features/settings/components/configuration/SocialMediaPlatform.tsx","features/settings/components/configuration/ItemPreferences.tsx","utils/statistics.ts","features/settings/components/configuration/SlidePreferences.tsx","features/settings/components/configuration/TagsPerferences.tsx","features/settings/components/Configuration.tsx","routes/ConfigurationRoute.tsx","utils/material-markdown.tsx","features/game/utils.ts","features/game/slides/base/helper.tsx","features/game/slides/OpeningSlide.tsx","utils/fullscreen.ts","features/game/components/GameOptions.tsx","features/game/components/InsightsCurrentSlide.tsx","features/game/components/InsightsWillPowerView.tsx","core/selection/insights.ts","core/selection/utils.ts","core/selection/selection-algorithm-base.ts","core/selection/melina-algorithm.ts","core/cards-loader.ts","core/cards/player-setting.ts","core/parsing/parser-helper.ts","core/parsing/base-card-parser.ts","core/cards/text-element.ts","core/cards/text-translation.ts","core/parsing/text-content-parser.ts","core/parsing/text-card-parser.ts","core/cards/text-card.ts","core/cards/base-card.ts","impl/cards/fact-card.ts","impl/parsing/fact-card-parser.ts","impl/cards/virus-card.ts","impl/parsing/virus-card-parser.ts","impl/parsing/default-text-card-parser.ts","impl/cards/down-card.ts","impl/cards/never-ever-card.ts","impl/cards/joke-card.ts","impl/cards/question-card.ts","impl/cards/task-card.ts","impl/cards/would-you-rather-card.ts","impl/cards/drink-card.ts","impl/cards/group-game-card.ts","impl/cards/no-idea-loses-card.ts","impl/registrations.tsx","services/api/cards-loader.ts","impl/default-card-parser-factory.ts","services/index.ts","features/settings/epics.ts","core/text-fragment.ts","core/fragments/raw-text-fragment.ts","core/fragments/variable-fragment.ts","core/fragments/player-reference-fragment.ts","core/fragments/sips-fragment.ts","core/fragments/random-number-fragment.ts","core/fragments/random-text-fragment.ts","core/fragments/gender-based-selection-fragment.ts","core/fragments/social-media-platform-fragment.ts","core/parsing/text-decoder/default-text-decoder.ts","core/parsing/text-decoder/text-decoder-consts.ts","features/game/formatter/text-formatter.ts","features/game/slides/base/text-slide-presenter.ts","features/game/slides/base/card-presenter.ts","features/game/slides/colors.ts","features/game/slides/TruthOrDareSlide.tsx","features/game/slides/DownSlide.tsx","features/game/slides/FactSlide.tsx","features/game/slides/NeverEverSlide.tsx","features/game/slides/WouldYouRatherSlide.tsx","features/game/slides/DrinkSlide.tsx","features/game/slides/VirusSlide.tsx","features/game/slides/NoIdeaLosesSlide.tsx","features/game/slides/GroupGameSlide.tsx","features/game/slides/TaskSlide.tsx","features/game/component-registry.ts","features/game/epics.ts","features/game/slides-processor.ts","store/root-epic.ts","store/utils.ts","features/game/reducer.ts","features/settings/reducer.ts","features/play/reducer.ts","store/root-reducer.ts","store/index.ts","store/storage.ts","features/game/game-engine.ts","features/game/components/InsightsCards.tsx","utils/string-extensions.ts","features/game/components/InsightsView.tsx","features/game/components/InsightsDialog.tsx","features/game/components/SettingsView.tsx","features/game/components/SettingsDialog.tsx","features/game/components/SlideWrapper.tsx","features/game/components/GameComponent.tsx","features/drinking-games/DrinkingGame.tsx","routes/DrinkingGameRoute.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["process","LOCAL_STORAGE_VERSION","games","name","translations","lang","compose","withLocalize","withRouter","_ref","activeLanguage","history","undefined","code","map","game","translation","find","x","path","concat","react_default","a","createElement","index_es","key","button","onClick","push","selected","location","pathname","primary","drinctetRoutes","icon","FlightTakeoff_default","Layers_default","Settings_default","secondaryRoutes","Person_default","renderRoutes","routes","translate","route","startsWith","substring","DrinkingGamesMenu","state","isOpen","handleClick","event","_this","setState","stopPropagation","this","props","_this$props","classes","Fragment","Receipt_default","ExpandLess_default","ExpandMore_default","in","timeout","unmountOnExit","disablePadding","className","nested","DrinkingGameItems","React","Component","withStyles","theme","createStyles","toolbar","Object","objectSpread","mixins","paddingLeft","display","alignItems","spacing","unit","variant","AppDrawer_DrinkingGamesMenu","getRootPath","match","exec","length","startGame","createStandardAction","cancelGame","requestSlideAsync","createAsyncAction","applyCard","setSlideState","enqueueFollowUp","activateFollowUp","setWillPowerLocked","setWillPower","addWillPowerMemory","dispatchProps","actions","menuButton","defineProperty","marginLeft","marginRight","breakpoints","up","grow","flexGrow","appbar","connect","sources","settings","players","play","handleToggleDrawer","arePlayersSelected","areSourcesAdded","filter","cards","areSourcesLoading","isLoading","canPlay","position","color","aria-label","Menu_default","noWrap","react_localize_redux_es","id","es_Route","render","disabled","People_default","AppDrawerContainer","mobileOpen","handleDrawerToggle","setDrawerOpen","_this2","app_MainAppBar","appBar","drawer","mdUp","implementation","anchor","direction","open","onClose","onOpen","paper","drawerPaper","tabIndex","role","onKeyDown","AppDrawer","smDown","width","flexShrink","withTheme","addPlayer","playerInfo","payload","gender","cuid","updatePlayer","removePlayer","addPlayerArrangment","removePlayerArrangment","AddPlayerForm","handlePlayerNameChange","ev","currentTarget","value","handleAddClick","endsWith","handleFormKeyDown","e","preventDefault","react","style","Input_default","type","placeholder","onChange","Button_default","PlayerInfo","classCallCheck","getPlayers","getIconButtonStyle","margin","height","onRemoveClick","onSwapGenderClick","onNameChanged","IconButton_default","react_fontawesome_index_es","faMars","faVenus","error","onBlur","Delete_default","fontSize","selectors","List_default","player","ListItem_default","components_PlayerListItem","arrangements","arrangmentItem","borderBottom","paddingBottom","arrangementSelect","down","container","findIndex","p2","arrangment","p1","arrangedPlayerId","item","xs","lg","htmlFor","target","input","y","Transition","assign","withMobileDialog","breakpoint","flex","content","padding","overflowX","dialogPaper","fullscreenPaper","fullScreen","Dialog_default","goBack","TransitionComponent","fullWidth","maxWidth","paperScrollPaper","paperFullScreen","components_PlayerArrangements","tabContainer","flexDirection","headerMargin","paddingTop","paddingRight","fillRemaining","overflowY","components_AddPlayerForm","components_PlayerList","Route","component","PlayerArrangementsDialog","addSource","url","errorMessage","weight","tags","removeSource","loadSourceAsync","setSourceWeight","setPreferOppositeGenders","setSocialMediaPlatform","setSlideWeight","setTagWeight","getSources","loadSource","request","AddSourceForm","handleUrlChange","sourceExists","LoadingItem","LoadingFailedItem","onReloadClick","WeightSlider","_ref2","onChangeWeight","lab_index_es","max","min","step","_","n","root","backgroundColor","palette","background","title","textOverflow","wordBreak","overflow","_ref3","cardsCount","badgeContent","showZero","avatar","checked","b","titleTypographyProps","action","subheader","source","components_SourcesListItem","components_AddSourceForm","components_SourcesList","languages","setActiveLanguage","sm","md","inputProps","preferOppositeGenders","control","c","label","socialMediaPlatforms","slideWeights","FactSlide","DownSlide","NeverEverSlide","TruthOrDareSlide","WouldYouRatherSlide","DrinkSlide","VirusSlide","NoIdeaLosesSlide","GroupGameSlide","TaskSlide","higherArrangementPropabilityTags","platform","socialMediaPlatform","gutterBottom","marginTop","ItemPreferences","items","opacity","v","percentageFixedTotal","values","getPercentage","percentageValues","percent","total","reduce","result","Array","sum","prevBaseline","i","_percentageValues$i","sumRounded","Math","round","part","slides","slidePercentages","configuration_ItemPreferences","data","count","fontWeight","decks","weights","uniq","flatMap","Configuration","marginBottom","configuration_ChangeLanguage","PlayerPairing","SocialMediaPlatform","configuration_SlidePreferences","TagsPerferences","components_Configuration","Header","children","objectWithoutProperties","SizedHeader","markdownOptions","overrides","p","marginBlockStart","marginBlockEnd","h1","h2","h3","h4","cardMarkdownOptions","_ref4","h5","h6","blockquote","_ref5","borderLeft","toTranslator","localize","languageCode","contentStyle","textAlign","headerStyle","smallHeaderStyle","progressColor","nextSlide","slideState","justifyContent","cursor","-webkit-tap-highlight-color","rootProgress","top","left","bottom","zIndex","baseStyles","header","continuationDate","remaining","abs","Date","now","Container","Keyframes","Spring","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","from","config","duration","stop","_x","apply","arguments","tapToContinueProps","useSpring","delay","native","renderprops","div","esm","options","web","OpeningSlide","slideType","requiredCards","createClass","date","setSeconds","getSeconds","Error","insights","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","webkit","moz","ms","document","window","vendor","keys","Fullscreen","element","handler","addEventListener","removeEventListener","bind","Boolean","toLowerCase","styles","GameOptions","anchorEl","isFullscreen","handleMenuOpenClick","handleClose","handleNavigate","toggleFullscreen","documentElement","handleExit","onfullscreenchange","_this3","_this$state","MoreVert_default","PaperProps","DonutLarge_default","FullscreenExit_default","Fullscreen_default","Close_default","selectedSlide","activeFollowUp","selectedCard","section","scrollableTable","tableCellNoBreak","whiteSpace","renderPlayerInsights","playerInsights","predefined","join","renderPredefinedPlayers","rounds","statistics","number","playerId","conditionalBold","chosen","isBold","InsightsCurrentSlide","cardRef","slideInsights","card","wp","willPower","deckUrl","slide","renderSlideWeights","toggleContainer","currentWillPower","isLocked","isWillPowerLocked","exclusive","row","Insights","playerSelection","defaultRandomGenerator","random","selectRandomWeighted","getWeight","totalWeight","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","randomWeight","_i","MelinaAlgorithm","_SelectionAlgorithmBa","_getPrototypeOf2","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","deckExhaustionLimit","inherits","cardType","weightedDecks","weightCards","status","deckWeights","willPowerWeights","willPowerCounter","allCards","_loop","deck","toConsumableArray","boostWillPower","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_loop2","willPowerWeightsArray","propName","Number","totalCards","playerSettings","definedPlayers","forArrangement","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop4","arrangement","_iterator3","resultCounter","_loop3","sourceList","includes","malesCount","femalesCount","selectionRoundInsights","some","dominant","changed","_this4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop5","_iterator4","_loop6","_i4","_this5","perfectCards","unplayedCards","cardsHistory","percentage","unplayedWeight","console","log","factor","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","perfectCard","availableSlides","_this6","uniqueCardTypes","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_loop7","_iterator8","requestedCards","cardTypeRatings","_i5","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","cardDeck","weightedSlides","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_loop8","slideSettings","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iterator7","slidesHistory","lastSlideType","lastSlide","floor","getRandom","_this7","filtered","weightedTag","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_loop9","cardsPlayed","exhaustionFactor","pow","weightedCards","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","rateWillPower","getHistoryFactor","getTagsFactor","_iterator11","memory","addedMemory","getHours","slidesCount","tagWeights","historyPosition","cardWillPower","filteredDecks","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","verifyPlayerSpecification","weightedZero","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","tag","checkIfWeightedZero","condition","specification","specificationMales","actualMales","specificationFemales","actualFemales","SelectionAlgorithmBase","selectRandomFromWeightedList","CardsLoader","requestFile","parserFactory","domParser","DOMParser","_loadFromUrl","loadFile","abrupt","_loadFile","_callee2","xml","xmlDoc","cardElements","xmlElement","parser","_context2","sent","parseFromString","getElementsByTagName","parentElement","nodeName","parseDeckReference","createParser","deserialize","indexOf","_x2","_x3","_x4","getAttribute","deckWhitelist","referenceRequests","cardRefs","idAttr","cardId","PlayerSetting","playerIndex","ParserHelper","s","index","isNaN","genderRequirementMap","split","m","male","f","female","o","opposite","same","BaseCardParser","createCard","getDefaultAttributes","parseAttributes","subElements","tagName","parseElement","parsePlayers","parsePlayer","parsePlayerTag","requiredGender","genderAttr","genderReq","parseGenderRequirement","TextElement","TextTranslation","TextContentParser","isConditionalElement","parseTextElement","parseTranslation","textElement","texts","textXmlNode","textContent","TextCardParser","_BaseCardParser","textContentParser","rootXml","followUpAttr","followUpProbability","followUpPropability","followUpDelay","seconds","parseTimeSpanStringToSeconds","addElement","subElement","followUp","TextCard","_BaseCard","language","BaseCard","FactCard","_TextCard","isTrueFact","FactCardParser","_TextCardParser","get","prototype","attr","toBool","VirusCard","VirusCardParser","DefaultTextCardParser","factory","DownCard","NeverEverCard","JokeCard","QuestionCard","TaskCard","WouldYouRatherCard","DrinkCard","GroupGameCard","NoIdeaLosesCard","parsers","WyrCard","loader","DefaultCardParserFactory","response","axios","loadCards","_loadCards","loadFromUrl","services","api","cardsLoader","loadSourceEpic","action$","_state$","pipe","isActionOf","mergeMap","success","catchError","message","of","failure","TextFragment","RawTextFragment","_TextFragment","text","VariableFragment","PlayerReferenceFragment","_VariableFragment","SipsFragment","minSips","sipsIndex","RandomNumberFragment","numbers","NumberRange","StaticNumber","RandomTextFragment","GenderBasedSelectionFragment","femaleText","maleText","referencedPlayerIndex","SocialMediaPlatformFragment","DefaultTextDecoder","lastTokenIndex","token","readToken","parseVariableFragment","parseRandomSelectionFragment","parseGenderSelectionFragment","playerTag","playerRef","parameterBegin","genderString","parsePlayerIndex","sipsTag","sipsFragment","test","parseNumberArray","splitQuoted","currentNumber","numberStart","isRangeToken","num","delimiter","tokenStart","withinQuotes","replace","nextChar","fragment","splitterIndex","reference","endChar","char","TextFormatter","fragments","requiredPlayers","groupBy","hasOwnProperty","rootSetting","sips","selection","lastPlayerFragment","boldPlayerNames","boldSips","sip","referencedPlayer","playerKeys","getCount","TextSlidePresenter","_CardPresenter","translator","gameEngine","selectText","_this$formatText","formatText","formatted","initializeState","due","createFollowUp","param","_this$selectFollowUpT","selectFollowUpText","initializeFollowUpState","followUps","CardPresenter","selectCard","initializeCard","initializeFollowUpCard","decode","getRequiredPlayers","requiredSips","getRequiredSips","indexedPlayers","sipInfo","getSips","store","getState","format","viableContents","toLocaleLowerCase","colors","drink","fact","groupGame","neverEver","noIdeaLoses","truthOrDare","virus","wouldYouRather","task","clickableRoot","spaceHeader","visibility","questionPaper","questionButtonsContainer","refuseMessage","isDeciding","selectedPlayer","select","decision","springProps","transform","QuestionComponent","markdownContent","DareComponent","TruthComponent","selectedText","getRandomSelectionAlgorithm","TruthOrDareSlide_Component","hidden","wobbly","to","_TextSlidePresenter","DownSlide_Component","isFollowUp","isTrue","availableFactSlideModes","selectedMode","FactSlide_Component","cardText","instruction","_selection","mode","NeverEverSlide_Component","_card","_players","WouldYouRatherSlide_Component","DrinkSlide_Component","VirusSlide_Component","NoIdeaLosesSlide_Component","GroupGameSlide_Component","slideComponents","TaskSlide_Component","nextSlideEpic","dueFollowUps","sortBy","slideInitalizer","slideActions","initializeFollowUp","components","getSlideRegistrations","_selection$recomputeW","recomputeWillPower","willPowerMemory","willPowerActions","selectNextSlide","initialize","redirectOnGameStartedEpic","tap","ignoreElements","combineEpics","settingsEpics","gameEpics","composeEnhancers","combineReducers","getType","isStarted","startTime","currentSlideStatus","flatten","weightsList","GetSlideWeightedArray","rootReducer","playReducer","gameReducer","settingsReducer","localizeReducer","epicMiddleware","createEpicMiddleware","dependencies","middlewares","enhancer","applyMiddleware","initialState","localStorage","getItem","JSON","parse","loadState","createStore","subscribe","toStore","setItem","stringify","run","rootEpic","selectPlayers","seedrandom","active","extractGameStatus","chart","InsightsCards","selectedCardType","setSelectedCardType","cardTypes","getAllCardDeckStatistics","decksStatistics","willPowerStatistics","info","displayEmpty","renderValue","es6","dataKey","tickFormatter","formatter","labelFormatter","fill","maxBarSize","entry","InsightsView","components_InsightsWillPowerView","components_InsightsCurrentSlide","components_InsightsCards","InsightsView_InsightsView","SettingsView","handleChange","_event","handleChangeIndex","indicatorColor","textColor","PlayRoute","SourcesRoute","ConfigurationRoute","firstChildMargins","minHeight","components_SettingsView","GameComponent","openingSlide","dispatch","components_SlideWrapper","right","components_GameOptions","Switch","SettingsDialog","InsightsDialog","current","DrinkingGameComponent","isLoadingLang","_this$props2","getLang","Axios","then","currentLang","transitionDelay","gutters","DrinkingGameRoute","DrinkingGame","flexFlow","BrowserRouter","basename","components_GameComponent","Redirect","app_AppDrawerContainer","exact","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","src_iteratorNormalCompletion","src_didIteratorError","src_iteratorError","src_step","src_iterator","src","src_iteratorNormalCompletion2","src_didIteratorError2","src_iteratorError2","src_step2","src_iterator2","userLang","userLanguage","drinctetTranslations","renderToStaticMarkup","defaultLanguage","es","app_App","getElementById","URL","href","origin","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.639e328f.chunk.js","sourcesContent":["// @ts-ignore\r\nprocess.env.LOCAL_STORAGE_VERSION = 1;","export interface DrinkingGame {\r\n    name: string;\r\n    translations: DrinkingGameExplanation[];\r\n}\r\n\r\ninterface DrinkingGameExplanation {\r\n    name: string;\r\n    lang: string;\r\n}\r\n\r\nconst games: DrinkingGame[] = [\r\n    {\r\n        name: \"drinking-driving\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Drink & Drive\" },\r\n            { lang: \"en\", name: \"Drink & Drive\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"horse-racing\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pferderennen\" },\r\n            { lang: \"en\", name: \"Horse Racing\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"image-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Image Game\" },\r\n            { lang: \"en\", name: \"Image Game\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"pizza-box\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Pizza Karton\" },\r\n            { lang: \"en\", name: \"Pizza Box\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"weird-talk\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Weird Talk\" },\r\n            { lang: \"en\", name: \"Weird Talk\" },\r\n        ],\r\n    },\r\n    {\r\n        name: \"whisper-game\",\r\n        translations: [\r\n            { lang: \"de\", name: \"Flüsterspiel\" },\r\n            { lang: \"en\", name: \"Whisper Game\" },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default games;","import React from \"react\";\r\nimport games from \"./registrations\";\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\n\r\ntype Props = LocalizeContextProps & RouteComponentProps;\r\n\r\nfunction MenuItems({ activeLanguage, history }: Props) {\r\n    const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n    return games.map(game => {\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n        const path = `/drinkingGames/${game.name}`;\r\n\r\n        return (\r\n            <ListItem\r\n                key={game.name}\r\n                button\r\n                onClick={() => history.push(path)}\r\n                selected={history.location.pathname === path}\r\n            >\r\n                <ListItemText primary={translation.name} />\r\n            </ListItem>\r\n        );\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withRouter,\r\n)(MenuItems) as React.ComponentType;\r\n","import {\r\n    Collapse,\r\n    createStyles,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Theme,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport DrinkingGameItems from \"../features/drinking-games/DrinkingGameItems\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            paddingLeft: 20,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing.unit * 4,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & RouteComponentProps & LocalizeContextProps;\r\n\r\ninterface Route {\r\n    path: string;\r\n    icon: JSX.Element;\r\n}\r\n\r\nconst drinctetRoutes: Route[] = [\r\n    {\r\n        path: \"/play\",\r\n        icon: <FlightTakeoffIcon />,\r\n    },\r\n    {\r\n        path: \"/sources\",\r\n        icon: <LayersIcon />,\r\n    },\r\n    {\r\n        path: \"/configuration\",\r\n        icon: <SettingsIcon />,\r\n    },\r\n];\r\n\r\nconst secondaryRoutes: Route[] = [\r\n    {\r\n        path: \"/about\",\r\n        icon: <PersonIcon />,\r\n    },\r\n];\r\n\r\nfunction renderRoutes({ translate, history }: Props, routes: Route[]) {\r\n    return routes.map(route => (\r\n        <ListItem\r\n            key={route.path}\r\n            button\r\n            selected={history.location.pathname.startsWith(route.path)}\r\n            onClick={() => history.push(route.path)}\r\n        >\r\n            <ListItemIcon>{route.icon}</ListItemIcon>\r\n            <ListItemText primary={translate(`menu.${route.path.substring(1)}`)} />\r\n        </ListItem>\r\n    ));\r\n}\r\n\r\ninterface ExpandableItemState {\r\n    isOpen: boolean;\r\n}\r\n\r\nclass DrinkingGamesMenu extends React.Component<Props, ExpandableItemState> {\r\n    readonly state = { isOpen: false };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.pathname.startsWith(\"/drinkingGames\")) {\r\n            this.setState({ isOpen: true });\r\n        }\r\n    }\r\n\r\n    handleClick = (event: React.SyntheticEvent) => {\r\n        this.setState(state => ({ isOpen: !state.isOpen }));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { translate, classes } = this.props;\r\n        const { isOpen } = this.state;\r\n        const name = \"drinkingGames\";\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button onClick={this.handleClick} selected={false}>\r\n                    <ListItemIcon>\r\n                        <ReceiptIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={translate(`menu.${name}`)} />\r\n                    {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                </ListItem>\r\n                <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                    <List disablePadding>\r\n                        <div className={classes.nested}>\r\n                            <DrinkingGameItems />\r\n                        </div>\r\n                    </List>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction MainDrawer(props: Props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n                <div>\r\n                    <Typography variant=\"h6\">Drinctet</Typography>\r\n                    <Typography>The goal is to drink that!</Typography>\r\n                </div>\r\n            </div>\r\n            <Divider />\r\n            <List>{renderRoutes(props, drinctetRoutes)}</List>\r\n            <Divider />\r\n            <List>\r\n                <DrinkingGamesMenu {...props} />\r\n                <List>{renderRoutes(props, secondaryRoutes)}</List>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n    withLocalize,\r\n)(MainDrawer) as React.ComponentType;\r\n","export function getRootPath(path: string): string | null {\r\n    const match = /[a-zA-Z]+/g.exec(path);\r\n    return match !== null && match.length > 0 ? match[0] : null;\r\n}\r\n","import { PlayerSelectionInsights } from './../../core/selection/insights';\r\nimport { createStandardAction, createAsyncAction } from \"typesafe-actions\";\r\nimport { FollowUpSlide, Translator } from 'GameModels';\r\nimport { History } from 'history';\r\nimport { SlideSelectionInsights } from '@core/selection/insights';\r\nimport { CardRef } from '@core/cards/card-ref';\r\n\r\nexport const startGame = createStandardAction(\"START_GAME\")<History>();\r\n\r\nexport const cancelGame = createStandardAction(\"CANCEL_GAME\")();\r\n\r\nexport const requestSlideAsync = createAsyncAction(\r\n    \"NEXT_SLIDE_REQUEST\",\r\n    \"NEXT_SLIDE_SUCCESS\",\r\n    \"NEXT_SLIDE_FAILURE\",\r\n)<Translator, {slide: string, insights: SlideSelectionInsights | null}, string>();\r\n\r\nexport const applyCard = createStandardAction(\"APPLY_CARD\")<CardRef>();\r\n\r\nexport const setSlideState = createStandardAction(\"SET_SLIDE_STATE\")<{state: any, insights: PlayerSelectionInsights | null}>();\r\n\r\nexport const enqueueFollowUp = createStandardAction(\"ADD_FOLLOW_UP\")<FollowUpSlide>();\r\nexport const activateFollowUp = createStandardAction(\"ACTIVATE_FOLLOW_UP\")<FollowUpSlide>();\r\n\r\nexport const setWillPowerLocked = createStandardAction(\"SET_WILL_POWER_LOCKED\")<boolean>();\r\nexport const setWillPower = createStandardAction(\"SET_WILL_POWER\")<number>();\r\nexport const addWillPowerMemory = createStandardAction(\"ADD_WILL_POWER_MEMORY\")<string[]>();\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Theme,\r\n    Toolbar,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { Route, RouteComponentProps, withRouter } from \"react-router\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { getRootPath } from \"@utils/path\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as actions from \"../features/game/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                display: \"none\",\r\n            },\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        appbar: {},\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: state.settings.sources,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    startGame: actions.startGame,\r\n};\r\n\r\ninterface HandlerProps {\r\n    handleToggleDrawer(): void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> &\r\n    HandlerProps &\r\n    LocalizeContextProps &\r\n    RouteComponentProps &\r\n    ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps;\r\n\r\nfunction MainAppBar({ classes, handleToggleDrawer, history, sources, players, startGame }: Props) {\r\n    const arePlayersSelected = players.length > 1;\r\n    const areSourcesAdded = sources.filter(x => x.cards !== undefined).length > 0;\r\n    const areSourcesLoading = sources.filter(x => x.isLoading).length > 0;\r\n\r\n    const canPlay = arePlayersSelected && areSourcesAdded && !areSourcesLoading;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                    onClick={handleToggleDrawer}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} noWrap>\r\n                    <Translate id={`menu.${getRootPath(history.location.pathname)}`} />\r\n                </Typography>\r\n                <Route\r\n                    path=\"/play\"\r\n                    render={() => (\r\n                        <React.Fragment>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                disabled={players.length < 3}\r\n                                onClick={() => history.push(\"/play/arrangements\")}\r\n                            >\r\n                                <PeopleIcon />\r\n                            </IconButton>\r\n                            <Button color=\"inherit\" disabled={!canPlay} onClick={() => startGame(history)}>\r\n                                <Translate id=\"play.start\" />\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    )}\r\n                />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(\r\n    withLocalize(\r\n        withRouter(\r\n            connect(\r\n                mapStateToProps,\r\n                dispatchProps,\r\n            )(MainAppBar),\r\n        ),\r\n    ),\r\n);\r\n","import React from \"react\";\r\nimport {\r\n    createStyles,\r\n    WithStyles,\r\n    WithTheme,\r\n    Theme,\r\n    Hidden,\r\n    Drawer,\r\n    withStyles,\r\n    SwipeableDrawer,\r\n} from \"@material-ui/core\";\r\nimport MainDrawer from \"./AppDrawer\";\r\nimport MainAppBar from \"./MainAppBar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        appBar: {\r\n            marginLeft: drawerWidth,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n            },\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme;\r\ninterface State {\r\n    mobileOpen: boolean;\r\n}\r\n\r\nclass AppDrawerContainer extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        mobileOpen: false,\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    setDrawerOpen = (isOpen: boolean) => {\r\n        this.setState({ mobileOpen: isOpen });\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n        const { mobileOpen } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <MainAppBar\r\n                    classes={{ appbar: classes.appBar }}\r\n                    handleToggleDrawer={this.handleDrawerToggle}\r\n                />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden mdUp implementation=\"css\">\r\n                        <SwipeableDrawer\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                            open={mobileOpen}\r\n                            onClose={() => this.setDrawerOpen(false)}\r\n                            onOpen={() => this.setDrawerOpen(true)}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                tabIndex={0}\r\n                                role=\"button\"\r\n                                onClick={() => this.setDrawerOpen(false)}\r\n                                onKeyDown={() => this.setDrawerOpen(false)}\r\n                            >\r\n                                <MainDrawer />\r\n                            </div>\r\n                        </SwipeableDrawer>\r\n                    </Hidden>\r\n                    <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open\r\n                        >\r\n                            <MainDrawer />\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(AppDrawerContainer);\r\n","import { Gender, PlayerInfo } from \"@core/player-info\";\r\nimport cuid from \"cuid\";\r\nimport { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { createStandardAction } from \"typesafe-actions\";\r\n\r\nexport const addPlayer = createStandardAction(\"ADD_PLAYER\").map(\r\n    (playerInfo: { name: string; gender: Gender }): { payload: PlayerInfo } => ({\r\n        payload: {\r\n            name: playerInfo.name,\r\n            gender: playerInfo.gender,\r\n            id: cuid(),\r\n        },\r\n    }),\r\n);\r\n\r\nexport const updatePlayer = createStandardAction(\"UPDATE_PLAYER\")<PlayerInfo>();\r\nexport const removePlayer = createStandardAction(\"REMOVE_PLAYER\")<string>();\r\n\r\nexport const addPlayerArrangment = createStandardAction(\"ADD_PLAYER_ARRANGEMENT\")<\r\n    PlayerArrangement\r\n>();\r\nexport const removePlayerArrangment = createStandardAction(\"REMOVE_PLAYER_ARRANGEMENT\")<string>();\r\n","import * as React from \"react\";\r\nimport { addPlayer } from \"../actions\";\r\nimport { Gender } from \"@core/player-info\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\n\r\nconst dispatchProps = {\r\n    addPlayer,\r\n};\r\n\r\ntype Props = typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    name: string;\r\n};\r\n\r\nclass AddPlayerForm extends React.Component<Props, State> {\r\n    readonly state = { name: \"\" };\r\n\r\n    handlePlayerNameChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ name: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        let gender: Gender = \"Male\";\r\n        if (this.state.name.endsWith(\"a\"))\r\n            //sorry Luca\r\n            gender = \"Female\";\r\n\r\n        this.props.addPlayer({ name: this.state.name, gender });\r\n        this.setState({ name: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.name) this.handleAddClick();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        const { translate } = this.props;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={name}\r\n                        placeholder={translate(\"settings.players.playerName\") as string}\r\n                        onChange={this.handlePlayerNameChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!name}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    dispatchProps,\r\n)(withLocalize(AddPlayerForm));\r\n","export class PlayerInfo {\r\n    constructor(public id: string, public name: string, public gender: Gender) {}\r\n}\r\n\r\nexport type Gender = \"Male\" | \"Female\";\r\n","import { PlayState } from './reducer';\r\n\r\nexport const getPlayers = (state: PlayState) => state.players;","import { Gender } from \"../../../core/player-info\";\r\nimport React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVenus, faMars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withLocalize, LocalizeContextProps } from \"react-localize-redux\";\r\n\r\ninterface Props extends LocalizeContextProps {\r\n    name: string;\r\n    gender: Gender;\r\n    onRemoveClick: () => void;\r\n    onSwapGenderClick: () => void;\r\n    onNameChanged: (name: string) => void;\r\n}\r\n\r\nconst getIconButtonStyle = (): React.CSSProperties => ({\r\n    margin: -10,\r\n    width: 48,\r\n    height: 48,\r\n});\r\n\r\nfunction PlayerListItem({ name, gender, onRemoveClick, onSwapGenderClick, onNameChanged, translate }: Props) {\r\n    return (\r\n        <div style={{ display: \"flex\" }}>\r\n            <IconButton\r\n                aria-label=\"Swap Gender\"\r\n                onClick={onSwapGenderClick}\r\n                style={{ ...getIconButtonStyle(), marginRight: 0 }}\r\n            >\r\n                <Icon>\r\n                    <FontAwesomeIcon icon={gender === \"Male\" ? faMars : faVenus} />\r\n                </Icon>\r\n            </IconButton>\r\n            <Input\r\n                error={!name}\r\n                onBlur={() => {\r\n                    if (!name) onRemoveClick();\r\n                }}\r\n                style={{ flexGrow: 1, marginLeft: 5, marginRight: 5 }}\r\n                placeholder={translate(\"settings.willBeRemoved\") as string}\r\n                value={name}\r\n                onChange={ev => onNameChanged(ev.currentTarget.value)}\r\n            />\r\n            <IconButton\r\n                aria-label=\"Delete\"\r\n                onClick={onRemoveClick}\r\n                style={{ ...getIconButtonStyle(), marginLeft: 0 }}\r\n                tabIndex={-1}\r\n            >\r\n                <DeleteIcon fontSize=\"default\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withLocalize(PlayerListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { removePlayer, updatePlayer } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport PlayerListItem from \"./PlayerListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  players: selectors.getPlayers(state.play),\r\n});\r\n\r\nconst dispatchProps = {\r\n  removePlayer,\r\n  updatePlayer,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction PlayerList({ players, removePlayer, updatePlayer }: Props) {\r\n  return (\r\n    <List>\r\n      {players.map(player => (\r\n        <ListItem key={player.id}>\r\n          <ListItemText>\r\n            <PlayerListItem\r\n              name={player.name}\r\n              gender={player.gender}\r\n              onRemoveClick={() => removePlayer(player.id)}\r\n              onNameChanged={name =>\r\n                updatePlayer(new PlayerInfo(player.id, name, player.gender))\r\n              }\r\n              onSwapGenderClick={() =>\r\n                updatePlayer(\r\n                  new PlayerInfo(\r\n                    player.id,\r\n                    player.name,\r\n                    player.gender === \"Female\" ? \"Male\" : \"Female\",\r\n                  ),\r\n                )\r\n              }\r\n            />\r\n          </ListItemText>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  dispatchProps,\r\n)(PlayerList);\r\n","import React from \"react\";\r\nimport {\r\n    Typography,\r\n    WithStyles,\r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { addPlayerArrangment, removePlayerArrangment } from \"../actions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        arrangmentItem: {\r\n            borderBottom: \"1px solid #d8d8d8\",\r\n            paddingBottom: 5,\r\n        },\r\n        arrangementSelect: {\r\n            width: 200,\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                width: \"100%\",\r\n            },\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    players: state.play.players,\r\n    arrangements: state.play.arrangements,\r\n});\r\n\r\nconst dispatchProps = {\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles>;\r\n\r\nfunction PlayerArrangements({\r\n    classes,\r\n    players,\r\n    arrangements,\r\n    addPlayerArrangment,\r\n    removePlayerArrangment,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle2\">\r\n                <Translate id=\"settings.configuration.arrangements\" />\r\n            </Typography>\r\n            <Typography>\r\n                <Translate id=\"settings.configuration.arrangements.description\" />\r\n            </Typography>\r\n            <Grid container>\r\n                {players\r\n                    .filter(player => arrangements.findIndex(x => x.p2 === player.id) === -1)\r\n                    .map(player => {\r\n                        const arrangment = arrangements.find(x => x.p1 === player.id);\r\n                        const arrangedPlayerId = arrangment === undefined ? \"\" : arrangment.p2;\r\n                        return (\r\n                            <Grid\r\n                                item\r\n                                container\r\n                                alignItems=\"flex-end\"\r\n                                className={classes.arrangmentItem}\r\n                                key={player.id}\r\n                            >\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <Typography variant=\"subtitle1\">{player.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6} lg={4}>\r\n                                    <FormControl className={classes.arrangementSelect}>\r\n                                        <InputLabel htmlFor=\"player-selection\">\r\n                                            <Translate id=\"settings.configuration.arrangements.pairWith\" />\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            value={arrangedPlayerId}\r\n                                            onChange={ev => {\r\n                                                const value = ev.target.value;\r\n                                                if (value === \"\") {\r\n                                                    removePlayerArrangment(player.id);\r\n                                                } else {\r\n                                                    addPlayerArrangment({\r\n                                                        p1: player.id,\r\n                                                        p2: value,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            input={<Input id=\"player-selection\" />}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>\r\n                                                    <Translate id=\"settings.configuration.arrangements.none\" />\r\n                                                </em>\r\n                                            </MenuItem>\r\n                                            {players\r\n                                                .filter(\r\n                                                    x =>\r\n                                                        x.id !== player.id &&\r\n                                                        arrangements.findIndex(\r\n                                                            y =>\r\n                                                                (y.p1 === x.id || y.p2 === x.id) &&\r\n                                                                y.p1 !== player.id,\r\n                                                        ) === -1,\r\n                                                )\r\n                                                .map(x => (\r\n                                                    <MenuItem key={x.id} value={x.id}>\r\n                                                        {x.name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(PlayerArrangements) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangements from \"./PlayerArrangements\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: \"relative\",\r\n        },\r\n        flex: {\r\n            flex: 1,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing.unit * 2,\r\n            overflowX: \"auto\",\r\n        },\r\n        dialogPaper: {\r\n            height: \"80vh\",\r\n        },\r\n        fullscreenPaper: {\r\n            height: \"100vh\",\r\n        },\r\n    });\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction PlayerArrangementsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClose={() => history.goBack()}\r\n            TransitionComponent={Transition}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            classes={{\r\n                paperScrollPaper: classes.dialogPaper,\r\n                paperFullScreen: classes.fullscreenPaper,\r\n            }}\r\n        >\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                        <Translate id=\"play.playerArrangements\" />\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                        <Translate id=\"close\" />\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.content}>\r\n                <PlayerArrangements />\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(PlayerArrangementsDialog) as React.ComponentType;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddPlayerForm from \"../features/play/components/AddPlayerForm\";\r\nimport PlayerList from \"../features/play/components/PlayerList\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../features/play/components/PlayerArrangementsDialog\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            maxWidth: 800,\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction PlayComponent({ classes }: Props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid className={classes.tabContainer}>\r\n                <div className={classes.headerMargin}>\r\n                    <AddPlayerForm />\r\n                </div>\r\n                <div className={classes.fillRemaining}>\r\n                    <PlayerList />\r\n                </div>\r\n            </Grid>\r\n\r\n            <Route path=\"/play/arrangements\" component={PlayerArrangementsDialog} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withRouter,\r\n)(PlayComponent) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { createAsyncAction, createStandardAction } from \"typesafe-actions\";\r\nimport { Card } from \"@core/cards/card\";\r\n\r\nexport const addSource = createStandardAction(\"ADD_SOURCE\").map(\r\n    (url: string): { payload: SourceInfo } => ({\r\n        payload: {\r\n            url,\r\n            isLoading: false,\r\n            errorMessage: null,\r\n            cards: null,\r\n            weight: 0.5,\r\n            tags: []\r\n        },\r\n    }),\r\n);\r\nexport const removeSource = createStandardAction(\"REMOVE_SOURCE\")<string>();\r\n\r\nexport const loadSourceAsync = createAsyncAction(\r\n    \"LOAD_SOURCE_REQUEST\",\r\n    \"LOAD_SOURCE_SUCCESS\",\r\n    \"LOAD_SOURCE_FAILURE\",\r\n)<string, { url: string; cards: Card[] }, { url: string; message: string }>();\r\n\r\nexport const setSourceWeight = createStandardAction(\"SET_SOURCE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setPreferOppositeGenders = createStandardAction(\"SET_PREFER_OPPOSITE_GENDERS\")<\r\n    boolean\r\n>();\r\n\r\nexport const setSocialMediaPlatform = createStandardAction(\"SET_SOCIAL_MEDIA_PLATFORM\")<string>();\r\n\r\nexport const setSlideWeight = createStandardAction(\"SET_SLIDE_WEIGHT\")<Weighted<string>>();\r\n\r\nexport const setTagWeight = createStandardAction(\"SET_TAG_WEIGHT\")<Weighted<string>>();\r\n","import {SettingsState} from \"./reducer\";\r\n\r\nexport const getSources = (state: SettingsState) => state.sources;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSource, loadSourceAsync } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    addSource,\r\n    loadSource: loadSourceAsync.request,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\ntype State = {\r\n    url: string;\r\n};\r\n\r\nclass AddSourceForm extends React.Component<Props, State> {\r\n    readonly state = { url: \"\" };\r\n\r\n    handleUrlChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ url: ev.currentTarget.value });\r\n    };\r\n\r\n    handleAddClick = () => {\r\n        if (!this.state.url || this.props.sources.findIndex(x => x.url === this.state.url) > -1) {\r\n            return;\r\n        }\r\n\r\n        this.props.addSource(this.state.url);\r\n        this.props.loadSource(this.state.url);\r\n        this.setState({ url: \"\" });\r\n    };\r\n\r\n    handleFormKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n\r\n            if (this.state.url) {\r\n                this.handleAddClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { url } = this.state;\r\n        const { translate } = this.props;\r\n        const sourceExists = this.props.sources.findIndex(x => x.url === this.state.url) > -1;\r\n\r\n        return (\r\n            <form onKeyDown={this.handleFormKeyDown}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Input\r\n                        style={{ flexGrow: 1 }}\r\n                        type=\"text\"\r\n                        value={url}\r\n                        placeholder={translate(\"settings.sources.sourceUrl\") as string}\r\n                        error={sourceExists}\r\n                        onChange={this.handleUrlChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        disabled={!url || sourceExists}\r\n                        onClick={this.handleAddClick}\r\n                    >\r\n                        <Translate id=\"add\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(AddSourceForm));\r\n","import {\r\n    Card,\r\n    CardHeader,\r\n    Typography,\r\n    Link,\r\n    Checkbox,\r\n    withStyles,\r\n    Theme,\r\n    createStyles,\r\n    LinearProgress,\r\n    Badge,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport React from \"react\";\r\nimport { Slider } from \"@material-ui/lab\";\r\n\r\ninterface LoadingFailedItemProps {\r\n    errorMessage: string | null;\r\n    onReloadClick: () => void;\r\n}\r\n\r\ninterface WeightProps {\r\n    weight: number;\r\n    onChangeWeight: (value: number) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n        },\r\n        title: {\r\n            textOverflow: \"elipsis\",\r\n            wordBreak: \"break-all\",\r\n            overflow: \"hidden\",\r\n        },\r\n        fullWidth: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ninterface Props extends LoadingFailedItemProps, WeightProps, WithStyles<typeof styles> {\r\n    url: string;\r\n    isLoading: boolean;\r\n    cardsCount: number;\r\n    weight: number;\r\n    onRemoveClick: () => void;\r\n}\r\n\r\nfunction LoadingItem() {\r\n    return <LinearProgress />;\r\n}\r\n\r\nfunction LoadingFailedItem({ errorMessage, onReloadClick }: LoadingFailedItemProps) {\r\n    return (\r\n        <Typography color=\"secondary\" variant=\"body1\" component=\"small\">\r\n            {`${errorMessage}`}\r\n            <Link\r\n                style={{ marginLeft: 15 }}\r\n                component=\"button\"\r\n                variant=\"body1\"\r\n                onClick={onReloadClick}\r\n            >\r\n                Reload\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction WeightSlider({ weight, onChangeWeight }: WeightProps) {\r\n    return (\r\n        <Slider\r\n            max={1}\r\n            min={0}\r\n            step={0.05}\r\n            style={{ margin: 10, padding: '4px 0px' }}\r\n            value={weight}\r\n            onChange={(_, n) => onChangeWeight(n)}\r\n        />\r\n    );\r\n}\r\n\r\nfunction SourcesListItem({\r\n    url,\r\n    classes,\r\n    isLoading,\r\n    errorMessage,\r\n    cardsCount,\r\n    weight,\r\n    onRemoveClick,\r\n    onReloadClick,\r\n    onChangeWeight,\r\n}: Props) {\r\n    return (\r\n        <Badge\r\n            badgeContent={cardsCount}\r\n            color=\"primary\"\r\n            max={9999}\r\n            className={classes.fullWidth}\r\n            showZero={false}\r\n        >\r\n            <Card className={classes.fullWidth}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Checkbox\r\n                            checked={weight !== 0}\r\n                            style={{ margin: -10 }}\r\n                            onChange={(_, b) => (b ? onChangeWeight(0.5) : onChangeWeight(0))}\r\n                        />\r\n                    }\r\n                    titleTypographyProps={{ className: classes.title }}\r\n                    title={url}\r\n                    action={\r\n                        <IconButton onClick={onRemoveClick}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    }\r\n                    subheader={\r\n                        isLoading ? (\r\n                            <LoadingItem />\r\n                        ) : errorMessage ? (\r\n                            <LoadingFailedItem\r\n                                errorMessage={errorMessage}\r\n                                onReloadClick={onReloadClick}\r\n                            />\r\n                        ) : (\r\n                            <WeightSlider weight={weight} onChangeWeight={onChangeWeight} />\r\n                        )\r\n                    }\r\n                />\r\n            </Card>\r\n        </Badge>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SourcesListItem);\r\n","import { ListItemText } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadSourceAsync, removeSource, setSourceWeight } from \"../actions\";\r\nimport * as selectors from \"../selectors\";\r\nimport SourcesListItem from \"./SourcesListItem\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    sources: selectors.getSources(state.settings),\r\n});\r\n\r\nconst dispatchProps = {\r\n    loadSource: loadSourceAsync.request,\r\n    removeSource,\r\n    setSourceWeight,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SourcesList({ sources, removeSource, loadSource, setSourceWeight }: Props) {\r\n    return (\r\n        <List>\r\n            {sources.map(source => (\r\n                <ListItem key={source.url}>\r\n                    <ListItemText>\r\n                        <SourcesListItem\r\n                            url={source.url}\r\n                            isLoading={source.isLoading}\r\n                            errorMessage={source.errorMessage}\r\n                            cardsCount={(source.cards && source.cards.length) || 0}\r\n                            weight={source.weight}\r\n                            onChangeWeight={weight =>\r\n                                setSourceWeight({ value: source.url, weight })\r\n                            }\r\n                            onRemoveClick={() => removeSource(source.url)}\r\n                            onReloadClick={() => loadSource(source.url)}\r\n                        />\r\n                    </ListItemText>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(SourcesList);\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddSourceForm from \"../features/settings/components/AddSourceForm\";\r\nimport SourcesList from \"../features/settings/components/SourcesList\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n        },\r\n        headerMargin: {\r\n            paddingTop: theme.spacing.unit * 2,\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            paddingRight: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction SourcesComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.headerMargin}>\r\n                <AddSourceForm />\r\n            </div>\r\n            <div className={classes.fillRemaining}>\r\n                <SourcesList />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(SourcesComponent);\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    createStyles,\r\n    withStyles,\r\n    Grid,\r\n    WithStyles,\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nconst styles = () =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n\r\ntype Props = LocalizeContextProps & WithStyles<typeof styles>;\r\n\r\nfunction ChangeLanguage({ activeLanguage, languages, setActiveLanguage, classes }: Props) {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={10} md={8} lg={6}>\r\n                <FormControl className={classes.root}>\r\n                    <InputLabel htmlFor=\"language-input\">\r\n                        <Translate id=\"settings.configuration.language\" />\r\n                    </InputLabel>\r\n                    <Select\r\n                        inputProps={{\r\n                            id: \"language-input\",\r\n                        }}\r\n                        style={{ width: \"100%\" }}\r\n                        value={activeLanguage === undefined ? \"en\" : activeLanguage.code}\r\n                        onChange={ev => setActiveLanguage(ev.target.value)}\r\n                    >\r\n                        {languages.map(lang => (\r\n                            <MenuItem key={lang.code} value={lang.code}>{lang.name}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(withLocalize(ChangeLanguage));\r\n","import { FormControlLabel, Switch, Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setPreferOppositeGenders } from \"../../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    preferOppositeGenders: state.settings.preferOppositeGenders,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setPreferOppositeGenders,\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & LocalizeContextProps;\r\n\r\nfunction PlayerSettings({ preferOppositeGenders, setPreferOppositeGenders }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.playerSettings\" />\r\n            </Typography>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={preferOppositeGenders}\r\n                        onChange={(_, c) => setPreferOppositeGenders(c)}\r\n                    />\r\n                }\r\n                label={<Translate id=\"settings.configuration.playerSettings.pairOppositeGenders\" />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n)(PlayerSettings) as React.ComponentType;\r\n","export const socialMediaPlatforms = [\"Snapchat\", \"Instagram\", \"Facebook\"];\r\n\r\nexport const defaultSources = [\r\n    \"cards/ichundderalkohol.xml\",\r\n    \"cards/bullshitfact.xml\",\r\n    \"cards/ConversationStartersWorld.NeverHaveIEver.xml\",\r\n    \"cards/Bevil.xml\",\r\n    \"cards/ConversationStartersWorld.TruthOrDareDare.xml\",\r\n    \"cards/ConversationStartersWorld.TruthOrDareTruth.xml\",\r\n    \"cards/ConversationStartersWorld.Wyr.xml\",\r\n    \"cards/common.xml\",\r\n    \"cards/picolo/Picolo.xml\",\r\n    \"cards/picolo/Picolo.Silly.xml\",\r\n    \"cards/realfacts.xml\",\r\n];\r\n\r\nexport const slideWeights: { [key: string]: number } = {\r\n    FactSlide: 0.4,\r\n    DownSlide: 0.2,\r\n    NeverEverSlide: 0.5,\r\n    TruthOrDareSlide: 0.35,\r\n    WouldYouRatherSlide: 0.5,\r\n    DrinkSlide: 0.5,\r\n    VirusSlide: 0.25,\r\n    NoIdeaLosesSlide: 0.5,\r\n    GroupGameSlide: 0.4,\r\n    TaskSlide: 0.2,\r\n};\r\n\r\n// if a card has one of these tags and an arranged player is selected\r\n// the propability that their counterpart is selected is increased further\r\nexport const higherArrangementPropabilityTags = [\"sexual\"];\r\n","import { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport * as React from \"react\";\r\nimport { Typography, FormControl, Select, Input, MenuItem } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { setSocialMediaPlatform } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { socialMediaPlatforms } from \"../../../../preferences\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    platform: state.settings.socialMediaPlatform,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSocialMediaPlatform,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction ChangeLanguage({ platform, setSocialMediaPlatform }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                <Translate id=\"settings.configuration.socialMediaPlatform\" />\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n                <Translate id=\"settings.configuration.socialMediaPlatform.description\" />\r\n            </Typography>\r\n            <FormControl>\r\n                <Select style={{width: 200, marginTop: 10}}\r\n                    value={platform}\r\n                    onChange={ev => setSocialMediaPlatform(ev.target.value)}\r\n                    input={<Input />}\r\n                >\r\n                    {socialMediaPlatforms.map(x => (\r\n                        <MenuItem key={x} value={x}>\r\n                            {x}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(ChangeLanguage));\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Slider } from \"@material-ui/lab\";\r\nimport * as React from \"react\";\r\n\r\ninterface Props {\r\n    items: Weighted<string>[];\r\n    onChangeWeight: (item: Weighted<string>) => void;\r\n}\r\n\r\nclass ItemPreferences extends React.Component<Props> {\r\n    render() {\r\n        const { items, onChangeWeight } = this.props;\r\n\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {items.map(x => \r\n                        <tr key={x.value}>\r\n                            <td>\r\n                                <Typography\r\n                                    style={{\r\n                                        opacity: x.weight === 0 ? 0.5 : 1,\r\n                                    }}\r\n                                >\r\n                                    {x.value}\r\n                                </Typography>\r\n                            </td>\r\n                            <td style={{width: \"100%\"}}>\r\n                                <Slider\r\n                                    max={1}\r\n                                    min={0}\r\n                                    style={{ padding: \"20px 0 20px 5px\", width: \"100%\" }}\r\n                                    step={0.05}\r\n                                    value={x.weight}\r\n                                    onChange={(_, v) =>\r\n                                        onChangeWeight({ value: x.value, weight: v })\r\n                                    }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n\r\n        // return (\r\n        //     <Grid container>\r\n        //         {items.map(x => (\r\n        //             <Grid key={x.value} item container alignItems=\"center\">\r\n        //                 <Grid item>\r\n        //                     <Typography\r\n        //                         style={{\r\n        //                             opacity: x.weight === 0 ? 0.5 : 1,\r\n        //                         }}\r\n        //                     >\r\n        //                         {x.value}\r\n        //                     </Typography>\r\n        //                 </Grid>\r\n        //                 <Grid item xs={8} lg={9}>\r\n        //                     <Slider\r\n        //                         max={1}\r\n        //                         min={0}\r\n        //                         style={{ padding: \"20px 0\" }}\r\n        //                         step={0.05}\r\n        //                         value={x.weight}\r\n        //                         onChange={(_, v) => onChangeWeight({ value: x.value, weight: v })}\r\n        //                     />\r\n        //                 </Grid>\r\n        //             </Grid>\r\n        //         ))}\r\n        //     </Grid>\r\n        // );\r\n    }\r\n}\r\n\r\nexport default ItemPreferences;\r\n","export function percentageFixedTotal<T>(\r\n    values: T[],\r\n    getPercentage: (x: T) => number,\r\n    target: number,\r\n): Array<{ value: T; part: number }> {\r\n    // https://stackoverflow.com/a/13483486\r\n    const percentageValues = values.map(value => ({ value, percent: getPercentage(value) }));\r\n    const total = percentageValues.reduce((x, y) => x + y.percent, 0);\r\n\r\n    const result = new Array<{ value: T; part: number }>();\r\n    let sum = 0;\r\n    let prevBaseline = 0;\r\n\r\n    for (let i = 0; i < percentageValues.length; i++) {\r\n        const {value, percent} = percentageValues[i];\r\n\r\n        sum += percent / total * target;\r\n        const sumRounded = Math.round(sum);\r\n\r\n        result.push({ value, part: sumRounded - prevBaseline });\r\n        prevBaseline = sumRounded;\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setSlideWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slides: state.settings.slides,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setSlideWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction SlidePreferences({ slides, setSlideWeight }: Props) {\r\n    const totalCards = 50;\r\n    const slidePercentages = percentageFixedTotal(slides, x => x.weight, totalCards);\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.slides\" />\r\n            </Typography>\r\n            <ItemPreferences items={slides} onChangeWeight={x => setSlideWeight(x)} />\r\n            <Typography>\r\n                <Translate\r\n                    id=\"settings.configuration.slidesProjection\"\r\n                    data={{ count: totalCards }}\r\n                />\r\n                {slidePercentages.map((x, i) => (\r\n                    <React.Fragment key={x.value.value}>\r\n                        <b style={{fontWeight: \"bolder\"}}>{x.value.value}</b>: {x.part}\r\n                        {i < slidePercentages.length - 1 ? \", \" : null}\r\n                    </React.Fragment>\r\n                ))}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(SlidePreferences));\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { setTagWeight } from \"../../actions\";\r\nimport { LocalizeContextProps, withLocalize, Translate } from \"react-localize-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ItemPreferences from \"./ItemPreferences\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    tags: state.settings.tags,\r\n    decks: state.settings.sources,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setTagWeight,\r\n};\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & typeof dispatchProps;\r\n\r\nfunction TagPreferences({ tags, decks, setTagWeight }: Props) {\r\n    const allTags = _.uniq(decks.flatMap(x => x.tags));\r\n    const weights = allTags.map(x => tags.find(y => y.value === x) || { value: x, weight: 0.5 });\r\n\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                <Translate id=\"settings.configuration.tags\" />\r\n            </Typography>\r\n            <ItemPreferences items={weights} onChangeWeight={x => setTagWeight(x)} />\r\n            {weights.length === 0 ? (\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    <Translate id=\"settings.configuration.tags.none\" />\r\n                </Typography>\r\n            ) : (\r\n                undefined\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    dispatchProps,\r\n)(withLocalize(TagPreferences));\r\n","import * as React from \"react\";\r\nimport ChangeLanguage from \"./configuration/ChangeLanguage\";\r\nimport PlayerPairing from \"./configuration/PlayerPairing\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SocialMediaPlatform from \"./configuration/SocialMediaPlatform\";\r\nimport SlidePreferences from \"./configuration/SlidePreferences\";\r\nimport TagsPerferences from \"./configuration/TagsPerferences\";\r\n\r\nclass Configuration extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid style={{ maxWidth: 800 }}>\r\n                <Grid container spacing={32} direction=\"column\">\r\n                    <Grid item style={{ marginBottom: 20 }}>\r\n                        <ChangeLanguage />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <PlayerPairing />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SocialMediaPlatform />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <SlidePreferences />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TagsPerferences />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Configuration;\r\n","import { createStyles, Grid, WithStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Configuration from \"../features/settings/components/Configuration\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            padding: theme.spacing.unit * 2,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles>;\r\n\r\nfunction ConfigurationComponent({ classes }: Props) {\r\n    return (\r\n        <Grid className={classes.tabContainer}>\r\n            <div className={classes.fillRemaining} style={{ overflowX: \"hidden\" }}>\r\n                <Configuration />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ConfigurationComponent);\r\n","import { ParsingOptions } from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { ThemeStyle } from \"@material-ui/core/styles/createTypography\";\r\n\r\nconst Header = (style: ThemeStyle) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant={style}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst SizedHeader = (fontSize: string) => ({ children, ...props }: any) => {\r\n    return (\r\n        <Typography color=\"inherit\" {...props} variant=\"h6\" style={{ fontSize }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nfunction Paragraph({ children, ...props }: any) {\r\n    return (\r\n        <Typography {...props} color=\"inherit\" style={{ marginBlockStart: 5, marginBlockEnd: 5 }}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst SizedBlock = (fontSize: string) => ({ children, ...props }: any) => (\r\n        <Typography\r\n            color=\"inherit\"\r\n            {...props}\r\n            style={{ marginBlockStart: 5, marginBlockEnd: 5, fontSize }}\r\n        >\r\n            {children}\r\n        </Typography>)\r\n;\r\n\r\nconst BlockQuote = ({children, ...props}: any) => <div {...props} style={{borderLeft: \"1px solid white\", paddingLeft: 5}}>{children}</div>\r\n\r\nexport const markdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: Paragraph,\r\n            props: {},\r\n        },\r\n        h1: {\r\n            component: Header(\"h5\"),\r\n            props: {},\r\n        },\r\n        h2: {\r\n            component: Header(\"h6\"),\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: SizedHeader(\"1.2em\"),\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: SizedHeader(\"1.1em\"),\r\n            props: {},\r\n        },\r\n    },\r\n};\r\n\r\nexport const cardMarkdownOptions: ParsingOptions = {\r\n    overrides: {\r\n        p: {\r\n            component: SizedBlock(\"1em\"),\r\n            props: {},\r\n        },\r\n        h1: {\r\n            component: Header(\"h5\"),\r\n            props: {},\r\n        },\r\n        h2: {\r\n            component: Header(\"h6\"),\r\n            props: {},\r\n        },\r\n        h3: {\r\n            component: SizedHeader(\"1.2em\"),\r\n            props: {},\r\n        },\r\n        h4: {\r\n            component: SizedHeader(\"1.1em\"),\r\n            props: {},\r\n        },\r\n        h5: {\r\n            component: SizedHeader(\"1.08em\"),\r\n            props: {},\r\n        },\r\n        h6: {\r\n            component: SizedHeader(\"1.05em\"),\r\n            props: {},\r\n        },\r\n        blockquote: {\r\n            component: BlockQuote,\r\n            props: {},\r\n        },\r\n    },\r\n};\r\n","import { LocalizeContextProps } from \"react-localize-redux\";\r\nimport { Translator } from \"GameModels\";\r\n\r\nexport function toTranslator(localize: LocalizeContextProps): Translator {\r\n    return {\r\n        languageCode: localize.activeLanguage.code,\r\n        translate: x => localize.translate(x) as string,\r\n    }\r\n}","import { Theme } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\nexport function rootStyle(): CSSProperties {\r\n    return {\r\n        backgroundColor: \"transparent\",\r\n        height: \"100%\",\r\n        fontSize: 22,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        \"-webkit-tap-highlight-color\": \"rgba(255, 255, 255, 0)\",\r\n    };\r\n}\r\n\r\nexport function contentStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            width: \"100%\",\r\n            marginLeft: 30,\r\n            marginRight: 30,\r\n            fontSize: 18,\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"80%\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"60%\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function headerStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"2em\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function smallHeaderStyle(theme: Theme): CSSProperties {\r\n    return {\r\n        color: \"white\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"1.5em\",\r\n        },\r\n    };\r\n}\r\n\r\nexport function hidden(): CSSProperties {\r\n    return {\r\n        visibility: \"hidden\",\r\n    };\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated as animatedDom, useSpring } from \"react-spring\";\r\nimport { animated, Keyframes } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\n\r\nconst color = \"#2980b9\";\r\nconst progressColor = \"#3498db\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as OpeningSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...baseStyles.rootStyle(),\r\n            backgroundColor: color,\r\n            position: \"relative\",\r\n        },\r\n        rootProgress: {\r\n            height: \"100%\",\r\n            backgroundColor: progressColor,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            zIndex: 5,\r\n        },\r\n        content: {\r\n            ...baseStyles.contentStyle(theme),\r\n            zIndex: 10,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                width: \"100%\",\r\n                marginLeft: 30,\r\n                marginRight: 30,\r\n                fontSize: 16,\r\n            },\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction OpeningSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state, translate } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const { continuationDate } = state;\r\n    const remaining = Math.abs(+continuationDate - Date.now());\r\n\r\n    const Container = Keyframes.Spring(async (next: any) => {\r\n        await next({\r\n            from: { width: \"0%\" },\r\n            width: \"100%\",\r\n            config: {\r\n                duration: remaining,\r\n            },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: progressColor },\r\n            backgroundColor: color,\r\n            config: { duration: 200 },\r\n        });\r\n        await next({\r\n            from: { backgroundColor: color },\r\n            backgroundColor: progressColor,\r\n            config: { duration: 200 },\r\n        });\r\n    }) as any;\r\n\r\n    const tapToContinueProps = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        delay: remaining,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            onClick={() =>\r\n                (new Date() > continuationDate || process.env.NODE_ENV === \"development\") &&\r\n                nextSlide(toTranslator(props))\r\n            }\r\n        >\r\n            <Container native>\r\n                {(props: any) => <animated.div className={classes.rootProgress} style={props} />}\r\n            </Container>\r\n            <div className={classes.content}>\r\n                <Typography variant=\"h5\" color=\"inherit\" className={classes.header} gutterBottom>\r\n                    <Translate id=\"game.welcome\" />\r\n                </Typography>\r\n                <Markdown\r\n                    children={translate(\"game.openingInfo\") as string}\r\n                    options={cardMarkdownOptions}\r\n                />\r\n                <animatedDom.div style={tapToContinueProps}>\r\n                    <Typography style={{ color: \"white\", marginTop: 20 }} variant=\"h6\">\r\n                        <Translate id=\"game.tapToContinue\" />\r\n                    </Typography>\r\n                </animatedDom.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(OpeningSlideComponent) as React.ComponentType;\r\n\r\ninterface OpeningSlideState {\r\n    continuationDate: Date;\r\n}\r\n\r\nexport class OpeningSlide implements SlidePresenter {\r\n    slideType = \"OpeningSlide\";\r\n    requiredCards = [];\r\n    backgroundColor = color;\r\n\r\n    initialize(): RootAction[] {\r\n        const date = new Date();\r\n        date.setSeconds(date.getSeconds() + 5);\r\n\r\n        return [\r\n            this.setSlideState({\r\n                continuationDate: date,\r\n            }),\r\n        ];\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setSlideState(state: OpeningSlideState): RootAction {\r\n        return actions.setSlideState({ state, insights: null });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","// Source: https://github.com/vasilevich/react-fullscreen-crossbrowser (MIT)\r\n\r\nconst key: any = {\r\n    fullscreenEnabled: 0,\r\n    fullscreenElement: 1,\r\n    requestFullscreen: 2,\r\n    exitFullscreen: 3,\r\n    fullscreenchange: 4,\r\n    fullscreenerror: 5,\r\n};\r\n\r\nconst webkit = [\r\n    \"webkitFullscreenEnabled\",\r\n    \"webkitFullscreenElement\",\r\n    \"webkitRequestFullscreen\",\r\n    \"webkitExitFullscreen\",\r\n    \"webkitfullscreenchange\",\r\n    \"webkitfullscreenerror\",\r\n];\r\n\r\nconst moz = [\r\n    \"mozFullScreenEnabled\",\r\n    \"mozFullScreenElement\",\r\n    \"mozRequestFullScreen\",\r\n    \"mozCancelFullScreen\",\r\n    \"mozfullscreenchange\",\r\n    \"mozfullscreenerror\",\r\n];\r\n\r\nconst ms = [\r\n    \"msFullscreenEnabled\",\r\n    \"msFullscreenElement\",\r\n    \"msRequestFullscreen\",\r\n    \"msExitFullscreen\",\r\n    \"MSFullscreenChange\",\r\n    \"MSFullscreenError\",\r\n];\r\n\r\n// so it doesn't throw if no window or document\r\nconst document: any =\r\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\" ? window.document : {};\r\n\r\nconst vendor =\r\n    (\"fullscreenEnabled\" in document && Object.keys(key)) ||\r\n    (webkit[0] in document && webkit) ||\r\n    (moz[0] in document && moz) ||\r\n    (ms[0] in document && ms) ||\r\n    [];\r\n\r\nexport default class Fullscreen {\r\n    static requestFullscreen(element: any) {\r\n        return element[vendor[key.requestFullscreen]]();\r\n    }\r\n    static requestFullscreenFunction(element: any) {\r\n        return element[vendor[key.requestFullscreen]];\r\n    }\r\n    static get exitFullscreen() {\r\n        return document[vendor[key.exitFullscreen]].bind(document);\r\n    };\r\n    static addEventListener(type: any, handler: any, options: any) {\r\n        return document.addEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static removeEventListener(type: any, handler: any, options: any) {\r\n        return document.removeEventListener(vendor[key[type]], handler, options);\r\n    }\r\n    static get fullscreenEnabled() {\r\n        return Boolean(document[vendor[key.fullscreenEnabled]]);\r\n    }\r\n    static get fullscreenElement() {\r\n        return document[vendor[key.fullscreenElement]];\r\n    }\r\n    static get onfullscreenchange() {\r\n        return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenchange(handler) {\r\n        document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler;\r\n    }\r\n    static get onfullscreenerror() {\r\n        return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()];\r\n    }\r\n    static set onfullscreenerror(handler) {\r\n        document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler;\r\n    }\r\n}\r\n","import { createStyles, IconButton, ListItemIcon, Menu, MenuItem, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport Fullscreen from \"@utils/fullscreen\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component, ComponentType } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\n\r\nconst styles = createStyles({\r\n    button: {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    LocalizeContextProps &\r\n    WithStyles<typeof styles> &\r\n    RouteComponentProps;\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n    activeFollowUp: state.game.activeFollowUp,\r\n    selectedCard: state.game.selectedCard,\r\n});\r\n\r\nconst dispatchProps = {};\r\n\r\ninterface State {\r\n    anchorEl: HTMLElement | null;\r\n    isFullscreen: boolean;\r\n}\r\n\r\nclass GameOptions extends Component<Props, State> {\r\n    readonly state: State = {\r\n        anchorEl: null,\r\n        isFullscreen: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        Fullscreen.onfullscreenchange = () => {\r\n            this.setState(state => ({ ...state, isFullscreen: Fullscreen.fullscreenElement }));\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Fullscreen.onfullscreenchange = null;\r\n    }\r\n\r\n    handleMenuOpenClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleNavigate = (path: string) => {\r\n        this.handleClose();\r\n        this.props.history.push(`/play/game/${path}`);\r\n    };\r\n\r\n    toggleFullscreen = () => {\r\n        const { isFullscreen } = this.state;\r\n        if (isFullscreen) {\r\n            Fullscreen.exitFullscreen();\r\n        } else {\r\n            Fullscreen.requestFullscreen(window.document.documentElement);\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n    \r\n    handleExit = () => {\r\n        this.handleClose();\r\n        this.props.history.push(\"/play\");\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl, isFullscreen } = this.state;\r\n        const isOpen = anchorEl !== null;\r\n\r\n        return (\r\n            <div>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={this.handleMenuOpenClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={isOpen}\r\n                    onClose={this.handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => this.handleNavigate(\"settings\")}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.settings\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => this.handleNavigate(\"insights\")}>\r\n                        <ListItemIcon>\r\n                            <DonutLargeIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.insights\" />\r\n                    </MenuItem>\r\n                    {/* <MenuItem onClick={this.handleClose} disabled={selectedCard === null}>\r\n                        <ListItemIcon>\r\n                            <FeedbackIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.reportCard\" />\r\n                    </MenuItem> */}\r\n                    <MenuItem onClick={this.toggleFullscreen}>\r\n                        <ListItemIcon>\r\n                            {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\r\n                        </ListItemIcon>\r\n                        <Translate id={isFullscreen ? \"game.options.exitFullscreen\" : \"game.options.fullscreen\"} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleExit}>\r\n                        <ListItemIcon>\r\n                            <CloseIcon />\r\n                        </ListItemIcon>\r\n                        <Translate id=\"game.options.exit\" />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withLocalize,\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withRouter,\r\n)(GameOptions) as ComponentType;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, createStyles, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    slide: state.game.selectedSlide,\r\n    slideInsights: state.game.slideInsights,\r\n    playerInsights: state.game.playerInsights,\r\n    players: state.play.players,\r\n    cardRef: state.game.selectedCard,\r\n});\r\n\r\nconst styles = createStyles({\r\n    section: {\r\n        marginTop: 10,\r\n    },\r\n    scrollableTable: {\r\n        overflow: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    tableCellNoBreak: {\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles>;\r\n\r\nfunction renderPredefinedPlayers({ playerInsights, players }: Props) {\r\n    return (\r\n        <div>\r\n            <Typography>\r\n                <Translate id=\"insights.predefinedPlayers\" />\r\n                {\": \"}\r\n                {playerInsights!.predefined\r\n                    .map(x => players.find(y => y.id === x))\r\n                    .filter(x => x != null)\r\n                    .map(x => x!.name)\r\n                    .join(\", \")}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderPlayerInsights(props: Props) {\r\n    const { playerInsights, players, classes } = props;\r\n    return (\r\n        <div className={classes.scrollableTable}>\r\n            {playerInsights!.predefined.length > 0 ? renderPredefinedPlayers(props) : null}\r\n            {playerInsights!.rounds.map((x, i) => {\r\n                const statistics = percentageFixedTotal(x, x => x.weight, 1000);\r\n                return (\r\n                    <table key={i}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className={classes.tableCellNoBreak}>\r\n                                    <Typography>\r\n                                        <Translate id=\"insights.player\" data={{ number: i + 1 }} />:\r\n                                    </Typography>\r\n                                </td>\r\n                                {statistics.map(y => {\r\n                                    const player = players.find(p => p.id === y.value.playerId);\r\n                                    let element: JSX.Element;\r\n                                    if (player === undefined) {\r\n                                        element = (\r\n                                            <span>\r\n                                                <i>\r\n                                                    <Translate id=\"insights.playerRemoved\" />\r\n                                                </i>{\" \"}\r\n                                                ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    } else {\r\n                                        element = (\r\n                                            <span>\r\n                                                {player.name} ({y.part / 10}%)\r\n                                            </span>\r\n                                        );\r\n                                    }\r\n\r\n                                    return (\r\n                                        <td key={y.value.playerId} style={{ paddingLeft: 10 }}>\r\n                                            <Typography>\r\n                                                {conditionalBold(element, y.value.chosen)}\r\n                                            </Typography>\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction conditionalBold(element: JSX.Element, isBold: boolean): JSX.Element {\r\n    if (isBold) {\r\n        return <b>{element}</b>;\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nfunction renderSlideWeights({ slide, slideInsights }: Props) {\r\n    const slides = slideInsights!.weights;\r\n    const statistics = percentageFixedTotal(slides, x => x.weight, 1000);\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {statistics.map(x => (\r\n                    <tr key={x.value.value}>\r\n                        <td>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.value.value}</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                        <td style={{ paddingLeft: 10 }}>\r\n                            <Typography>\r\n                                {conditionalBold(\r\n                                    <span>{x.part / 10}%</span>,\r\n                                    x.value.value === slide,\r\n                                )}\r\n                            </Typography>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nclass InsightsCurrentSlide extends Component<Props> {\r\n    render() {\r\n        const { playerInsights, classes, cardRef, slideInsights } = this.props;\r\n        if (slideInsights === null) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.currentSlide\" />\r\n                </Typography>\r\n                <Typography>\r\n                    <Translate id=\"insights.currentCard\" />\r\n                    {\": \"}\r\n                    {cardRef === null ? (\r\n                        <i>\r\n                            <Translate id=\"insights.noCard\" />\r\n                        </i>\r\n                    ) : (\r\n                        <span>\r\n                            <Translate\r\n                                id=\"insights.cardInfo\"\r\n                                data={{\r\n                                    name: cardRef.card.type,\r\n                                    id: cardRef.card.id,\r\n                                    wp:\r\n                                        cardRef.card.willPower === undefined ? (\r\n                                            <Translate id=\"insights.universal\" />\r\n                                        ) : (\r\n                                            cardRef.card.willPower\r\n                                        ),\r\n                                    url: cardRef.deckUrl,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    )}\r\n                </Typography>\r\n                {renderSlideWeights(this.props)}\r\n\r\n                <Typography variant=\"h6\" className={classes.section}>\r\n                    <Translate id=\"insights.playerSelection\" />\r\n                </Typography>\r\n                {playerInsights === null ? (\r\n                    <Typography>\r\n                        <i>\r\n                            <Translate id=\"insights.noPlayers\" />\r\n                        </i>\r\n                    </Typography>\r\n                ) : (\r\n                    renderPlayerInsights(this.props)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsCurrentSlide) as React.ComponentType;\r\n","import { createStyles, FormControlLabel, FormGroup, Switch, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport * as React from \"react\";\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setWillPower, setWillPowerLocked } from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n    isLocked: state.game.isWillPowerLocked,\r\n});\r\n\r\nconst dispatchProps = {\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n};\r\n\r\nconst styles = \r\n    createStyles({\r\n        toggleContainer: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof dispatchProps & WithStyles<typeof styles>;\r\n\r\nfunction InsightsWillPowerView({\r\n    currentWillPower,\r\n    isLocked,\r\n    setWillPower,\r\n    setWillPowerLocked,\r\n    classes,\r\n}: Props) {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                <Translate id=\"insights.willPower\" />\r\n            </Typography>\r\n            <div className={classes.toggleContainer}>\r\n                <ToggleButtonGroup\r\n                    exclusive\r\n                    value={currentWillPower}\r\n                    onChange={(_, y) => setWillPower(y)}\r\n                    children={[1, 2, 3, 4, 5].map(x => (\r\n                        <ToggleButton key={x} value={x}>\r\n                            {x}\r\n                        </ToggleButton>\r\n                    ))}\r\n                />\r\n            </div>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch checked={isLocked} onChange={(_, x) => setWillPowerLocked(x)} />\r\n                    }\r\n                    label={<Translate id=\"insights.lockWillPower\" />}\r\n                />\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withLocalize,\r\n    withStyles(styles),\r\n)(InsightsWillPowerView) as React.ComponentType;\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { CardDeck } from \"@core/card-deck\";\r\n\r\nexport class Insights {\r\n    public playerSelection: PlayerSelectionInsights | null = null;\r\n    public slideWeights: SlideSelectionInsights | null  = null;\r\n}\r\n\r\nexport interface PlayerSelectionInsights {\r\n    predefined: string[];\r\n    rounds: Array<PlayerSelection[]>;\r\n}\r\n\r\nexport interface SlideSelectionInsights {\r\n    weights: Weighted<string>[];\r\n}\r\n\r\nexport interface PlayerSelection {\r\n    chosen: boolean;\r\n    weight: number;\r\n    playerId: string;\r\n}\r\n\r\nexport interface CardsInsight {\r\n    decks: Weighted<CardDeck>[];\r\n    willPower: Weighted<{willPower: number | null, count: number}>[];\r\n    totalCards: number;\r\n}\r\n","import { Weighted } from \"./../weighted\";\r\n\r\nexport type RNG = () => number;\r\nconst defaultRandomGenerator: RNG = () => Math.random();\r\n\r\nexport function selectRandomWeighted<T>(\r\n    items: T[],\r\n    getWeight: (item: T) => number,\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    if (items.length === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    const weights: Array<{ item: T; weight: number }> = [];\r\n    let totalWeight: number = 0;\r\n    for (const item of items) {\r\n        const weight = getWeight(item);\r\n        weights.push({ item, weight });\r\n\r\n        totalWeight += weight;\r\n    }\r\n\r\n    let randomWeight = totalWeight * random();\r\n    for (const { item, weight } of weights) {\r\n        if (weight === 0) {\r\n            continue;\r\n        }\r\n        randomWeight -= weight;\r\n\r\n        if (randomWeight <= 0) {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function selectRandomFromWeightedList<T>(\r\n    items: Weighted<T>[],\r\n    random: RNG = defaultRandomGenerator,\r\n): T | undefined {\r\n    const result = selectRandomWeighted(items, item => item.weight, random);\r\n    if (result === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    return result.value;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { Weighted } from \"@core/weighted\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { SelectionAlgorithm } from \"./selection-algorithm\";\r\nimport { RNG, selectRandomFromWeightedList, selectRandomWeighted } from \"./utils\";\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport abstract class SelectionAlgorithmBase implements SelectionAlgorithm {\r\n    protected readonly random: RNG;\r\n\r\n    constructor(protected readonly status: GameStatus, random: RNG) {\r\n        this.random = random;\r\n    }\r\n\r\n    public abstract selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[];\r\n    public abstract selectNextSlide(availableSlides: SlideRegistration[]): string | undefined;\r\n    public abstract selectCard(cardType: string): CardRef;\r\n    public abstract getSips(min: number): number;\r\n    public abstract recomputeWillPower(memory: string[]): { willPower: number; memory: string[] };\r\n\r\n    public getRandom(): number {\r\n        return this.random();\r\n    }\r\n\r\n    public selectRandomWeighted<T>(items: T[], getWeight: (item: T) => number): T | undefined {\r\n        return selectRandomWeighted(items, getWeight, () => this.random());\r\n    }\r\n\r\n    protected selectRandomFromWeightedList<T>(items: Weighted<T>[]): T | undefined {\r\n        return selectRandomFromWeightedList(items, () => this.random());\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport _ from \"lodash\";\r\nimport { higherArrangementPropabilityTags } from \"../../preferences\";\r\nimport { CardDeck } from \"../card-deck\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { Gender, PlayerInfo } from \"../player-info\";\r\nimport { SlideRegistration } from \"../slide-registration\";\r\nimport { Weighted } from \"../weighted\";\r\nimport { CardsInsight, Insights, PlayerSelection, PlayerSelectionInsights } from \"./insights\";\r\nimport { SelectionAlgorithmBase } from \"./selection-algorithm-base\";\r\n\r\nexport class MelinaAlgorithm extends SelectionAlgorithmBase {\r\n    /** the percentage of cards that were played from one deck once the cards get weighted much lower */\r\n    private readonly deckExhaustionLimit = 0.1;\r\n\r\n    public readonly insights: Insights = new Insights();\r\n\r\n    public getAllCardDeckStatistics(cardType: string | null = null): CardsInsight {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n        const deckWeights: { [deckUrl: string]: number } = {};\r\n        const willPowerWeights: { [willPower: number]: number } = {};\r\n        const willPowerCounter: { [willPower: number]: number } = {};\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const deck of this.status.decks) {\r\n            deckWeights[deck.url] = 0;\r\n        }\r\n\r\n        for (const card of allCards) {\r\n            const { value, weight } = card;\r\n\r\n            const deck = this.status.decks.find(x => x.url === value.deckUrl)!;\r\n\r\n            deckWeights[value.deckUrl] += weight * deck.weight;\r\n\r\n            const willPower = value.card.willPower || 0;\r\n            if (willPowerCounter[willPower] === undefined) {\r\n                willPowerWeights[willPower] = 0;\r\n                willPowerCounter[willPower] = 0;\r\n            }\r\n\r\n            willPowerWeights[willPower] += weight * deck.weight;\r\n            willPowerCounter[willPower] += 1;\r\n        }\r\n        \r\n        const willPowerWeightsArray: Weighted<{\r\n            willPower: number | null;\r\n            count: number;\r\n        }>[] = Object.keys(willPowerWeights).map(propName => {\r\n            const willPower = Number(propName);\r\n            return ({\r\n                value: {\r\n                    willPower: willPower === 0 ? null : willPower,\r\n                    count: willPowerCounter[willPower],\r\n                },\r\n                weight: willPowerWeights[willPower],\r\n            });\r\n        });\r\n\r\n        const decksArray = Object.keys(deckWeights).map(url => {\r\n            const deck = this.status.decks.find(x => x.url === url)!;\r\n            return { value: deck, weight: deckWeights[url] * deck.weight };\r\n        });\r\n\r\n        return { decks: decksArray, willPower: willPowerWeightsArray, totalCards: allCards.length };\r\n    }\r\n\r\n    public selectPlayers(\r\n        playerSettings: GenderRequirement[],\r\n        definedPlayers: (PlayerInfo | null)[],\r\n        tags: string[],\r\n    ): PlayerInfo[] {\r\n        if (playerSettings.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (playerSettings.length > this.status.players.length) {\r\n            throw new Error(\"More players were requested than available.\");\r\n        }\r\n\r\n        const forArrangement = new Array<string>();\r\n        const result: (PlayerInfo | null)[] = playerSettings.map((_, i) =>\r\n            definedPlayers.length > i ? definedPlayers[i] : null,\r\n        );\r\n\r\n        for (const player of definedPlayers.filter(x => x !== null).map(x => x!)) {\r\n            const arrangement = this.status.arrangements.find(\r\n                x => x.p1 === player.id || x.p2 === player.id,\r\n            );\r\n\r\n            if (arrangement !== undefined) {\r\n                if (arrangement.p1 === player.id) {\r\n                    forArrangement.push(arrangement.p2);\r\n                } else {\r\n                    forArrangement.push(arrangement.p1);\r\n                }\r\n            }\r\n        }\r\n\r\n        let resultCounter = 0;\r\n        const insights: PlayerSelectionInsights = {\r\n            predefined: definedPlayers.filter(x => x != null).map(x => x!.id),\r\n            rounds: [],\r\n        };\r\n\r\n        while (result.findIndex(x => x === null) !== -1) {\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                if (result[i] !== null) {\r\n                    continue;\r\n                }\r\n\r\n                const gender = playerSettings[i];\r\n                let sourceList: PlayerInfo[];\r\n\r\n                switch (gender) {\r\n                    case \"None\":\r\n                        sourceList = this.status.players;\r\n                        break;\r\n                    case \"Male\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Male\");\r\n                        break;\r\n                    case \"Female\":\r\n                        sourceList = this.status.players.filter(x => x.gender === \"Female\");\r\n                        break;\r\n                    default:\r\n                        continue;\r\n                }\r\n\r\n                const source = sourceList.filter(x => !_.includes(result, x));\r\n                const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n                const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n\r\n                const selectionRoundInsights = new Array<PlayerSelection>();\r\n                const player = this.selectRandomWeighted(source, p => {\r\n                    let weight = 1;\r\n\r\n                    if (_.some(forArrangement, x => x === p.id)) {\r\n                        if (\r\n                            _.some(higherArrangementPropabilityTags, x =>\r\n                                _.some(tags, y => x === y.toLowerCase()),\r\n                            )\r\n                        ) {\r\n                            weight += source.length;\r\n                        } else {\r\n                            // everyone has ~ the weight 1\r\n                            weight += source.length * 0.5;\r\n                        }\r\n                    }\r\n\r\n                    if (gender === \"None\" && this.status.preferOppositeGenders) {\r\n                        if (malesCount > femalesCount) {\r\n                            if (p.gender === \"Female\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        } else if (femalesCount > malesCount) {\r\n                            if (p.gender === \"Male\") {\r\n                                weight += 0.5;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    selectionRoundInsights.push({ playerId: p.id, weight, chosen: false });\r\n                    return weight;\r\n                })!;\r\n\r\n                selectionRoundInsights.find(x => x.playerId === player.id)!.chosen = true;\r\n                insights.rounds.push(selectionRoundInsights);\r\n\r\n                result[i] = player;\r\n                resultCounter++;\r\n\r\n                const arrangement = this.status.arrangements.find(\r\n                    x => x.p1 === player.id || x.p2 === player.id,\r\n                );\r\n                if (arrangement !== undefined) {\r\n                    if (arrangement.p1 === player.id) {\r\n                        forArrangement.push(arrangement.p2);\r\n                    } else {\r\n                        forArrangement.push(arrangement.p1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultCounter === result.length) {\r\n                break;\r\n            }\r\n\r\n            // here we have to handle Same/Opposite genders\r\n\r\n            const malesCount = result.filter(x => x !== null && x.gender === \"Male\").length;\r\n            const femalesCount = result.filter(x => x !== null && x.gender === \"Female\").length;\r\n            let dominant: Gender | null = null;\r\n\r\n            if (malesCount > femalesCount) dominant = \"Male\";\r\n            else if (femalesCount > malesCount) dominant = \"Female\";\r\n\r\n            if (dominant === null) {\r\n                // we try to change a 'Same' gender, so Same and opposite stay on different sites\r\n                // because the player gender will become dominant and opposite is always against dominant\r\n\r\n                let changed = false;\r\n                for (let i = 0; i < playerSettings.length; i++) {\r\n                    if (playerSettings[i] === \"Same\") {\r\n                        playerSettings[i] = \"None\";\r\n                        changed = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!changed) {\r\n                    // we have the problem here that we only have opposite genders left but we have no dominant gender.\r\n                    // We change the first opposite to none (so it gets filled) and all other to Same, so they will get\r\n                    // the same gender like the first item that was changed to Same\r\n\r\n                    for (let i = 0; i < playerSettings.length; i++) {\r\n                        if (playerSettings[i] === \"Opposite\") {\r\n                            if (!changed) {\r\n                                playerSettings[i] = \"None\";\r\n                                changed = true;\r\n                            } else {\r\n                                playerSettings[i] = \"Same\";\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < playerSettings.length; i++) {\r\n                const gender = playerSettings[i];\r\n\r\n                switch (gender) {\r\n                    case \"Opposite\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Male\";\r\n                        } else {\r\n                            playerSettings[i] = \"Female\";\r\n                        }\r\n                        break;\r\n                    case \"Same\":\r\n                        if (dominant === \"Female\") {\r\n                            playerSettings[i] = \"Female\";\r\n                        } else {\r\n                            playerSettings[i] = \"Male\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.insights.playerSelection = insights;\r\n        return result.map(x => x!);\r\n    }\r\n\r\n    public selectCard(cardType: string): CardRef {\r\n        const weightedDecks = this.weightCards(this.status.decks, cardType);\r\n\r\n        const allCards = new Array<Weighted<CardRef>>();\r\n        for (const deck of weightedDecks) {\r\n            allCards.push(\r\n                ...deck.cards.map(x => ({\r\n                    value: { card: x.value, deckUrl: deck.deck.url },\r\n                    weight: x.weight * deck.deck.weight,\r\n                })),\r\n            );\r\n        }\r\n\r\n        this.boostWillPower(allCards);\r\n\r\n        for (const card of allCards) {\r\n            const deck = this.status.decks.find(x => x.url === card.value.deckUrl)!;\r\n            card.weight *= deck.weight;\r\n        }\r\n\r\n        const selected = this.selectRandomWeighted(allCards, x => x.weight);\r\n        if (selected === undefined) {\r\n            throw new Error(\"That should not actually happen\");\r\n        }\r\n\r\n        return selected.value;\r\n    }\r\n\r\n    private boostWillPower(cards: Weighted<CardRef>[]): void {\r\n        const willPower = this.status.willPower;\r\n\r\n        const perfectCards = cards.filter(\r\n            x => x.value.card.willPower === willPower || x.value.card.willPower === willPower - 1,\r\n        );\r\n        const unplayedCards = perfectCards.filter(\r\n            x =>\r\n                this.status.cardsHistory.findIndex(\r\n                    y => y.deckUrl === x.value.deckUrl && y.card.id === x.value.card.id,\r\n                ) === -1,\r\n        );\r\n\r\n        // played cards / all cards\r\n        const percentage = (perfectCards.length - unplayedCards.length) / perfectCards.length;\r\n\r\n        // console.log(\r\n        //     `wp: ${willPower}, perfect: ${perfectCards.length}, unplayed: ${\r\n        //         unplayedCards.length\r\n        //     }, percentage: ${percentage}`,\r\n        // );\r\n\r\n        // we don't boost if we already played 10% (deckExhaustionLimit) of the cards\r\n        if (this.deckExhaustionLimit > percentage && unplayedCards.length > 50) {\r\n            const totalWeight = cards.reduce((x, y) => x + y.weight, 0);\r\n            const unplayedWeight = unplayedCards.reduce((x, y) => x + y.weight, 0);\r\n\r\n            console.log(`total: ${totalWeight}, unplayed: ${unplayedWeight}`);\r\n\r\n            const targetPercentage = 0.7;\r\n            if (totalWeight * targetPercentage > unplayedWeight) {\r\n                const factor =\r\n                    totalWeight * targetPercentage -\r\n                    unplayedWeight +\r\n                    unplayedWeight / unplayedWeight;\r\n\r\n                // const diff = (totalWeight * targetPercentage - unplayedWeight);\r\n                // const add = diff / unplayedCards.length;\r\n                console.log(\"factor: \" + factor);\r\n\r\n                // const add = (totalWeight - unplayedWeight) / perfectCards.length;\r\n                for (const perfectCard of unplayedCards) {\r\n                    perfectCard.weight = perfectCard.weight * factor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public selectNextSlide(availableSlides: SlideRegistration[]): string | undefined {\r\n        const uniqueCardTypes: string[] = [];\r\n        for (const slide of availableSlides) {\r\n            for (const cardType of slide.requestedCards) {\r\n                if (uniqueCardTypes.findIndex(x => x === cardType) === -1) {\r\n                    uniqueCardTypes.push(cardType);\r\n                }\r\n            }\r\n        }\r\n\r\n        const cardTypeRatings: { [type: string]: number } = {};\r\n        for (const cardType of uniqueCardTypes) {\r\n            const weightedDecks = this.weightCards(\r\n                this.status.decks.filter(x => x.weight !== 0),\r\n                cardType,\r\n            );\r\n\r\n            const allCards: Array<Weighted<Card>> = [];\r\n            for (const cardDeck of weightedDecks) {\r\n                allCards.push(...cardDeck.cards);\r\n            }\r\n\r\n            if (allCards.length === 0) {\r\n                cardTypeRatings[cardType] = 0;\r\n            } else {\r\n                cardTypeRatings[cardType] =\r\n                    0.75 + (0.25 * allCards.reduce((x, y) => x + y.weight, 0)) / allCards.length;\r\n            }\r\n        }\r\n\r\n        const weightedSlides: Array<Weighted<SlideRegistration>> = [];\r\n        for (const slide of availableSlides) {\r\n            const slideSettings = this.status.slides.find(x => x.value === slide.slideType);\r\n\r\n            if (slideSettings === undefined || slideSettings.weight === 0) {\r\n                continue;\r\n            }\r\n\r\n            let factor = 1;\r\n            for (const cardType of slide.requestedCards) {\r\n                factor = Math.min(cardTypeRatings[cardType], factor);\r\n            }\r\n\r\n            weightedSlides.push({ weight: factor * slideSettings.weight, value: slide });\r\n        }\r\n\r\n        if (weightedSlides.length > 2 && this.status.slidesHistory.length > 0) {\r\n            const lastSlideType = this.status.slidesHistory[0];\r\n            const lastSlide = weightedSlides.find(x => x.value.slideType === lastSlideType);\r\n            if (lastSlide !== undefined) {\r\n                lastSlide.weight = 0;\r\n            }\r\n        }\r\n        \r\n        this.insights.slideWeights = {\r\n            weights: weightedSlides.map(x => ({ weight: x.weight, value: x.value.slideType })),\r\n        };\r\n\r\n        const selected = this.selectRandomWeighted(weightedSlides, slide => slide.weight);\r\n        if (selected === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return selected.value.slideType;\r\n    }\r\n\r\n    public getSips(min: number): number {\r\n        min = Math.max(min, 1);\r\n\r\n        return Math.max(min,  Math.floor(this.getRandom() * 4) + 1);\r\n    }\r\n\r\n    protected weightCards(\r\n        decks: CardDeck[],\r\n        type: string | null,\r\n    ): Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> {\r\n        const filtered: CardDeck[] = decks.map(x => ({\r\n            cards: x.cards.filter(card => {\r\n                if (type !== null && card.type !== type) {\r\n                    return false;\r\n                }\r\n                return (\r\n                    card.tags.length === 0 ||\r\n                    card.tags.findIndex(x => {\r\n                        const weightedTag = this.status.tags.find(y => y.value === x);\r\n                        return weightedTag !== undefined && weightedTag.weight === 0;\r\n                    }) === -1\r\n                );\r\n            }),\r\n            url: x.url,\r\n            weight: x.weight,\r\n        }));\r\n\r\n        // cards are now of the correct type and playable\r\n\r\n        const totalCards = filtered.reduce((x, y) => x + y.cards.length, 0);\r\n\r\n        // every card should be rated by x when 0 < x <= 1\r\n        const result: Array<{ cards: Array<Weighted<Card>>; deck: CardDeck }> = [];\r\n\r\n        const willPower = this.status.willPower;\r\n\r\n        for (const deck of filtered) {\r\n            // cards from this deck that were already played\r\n            const cardsPlayed = this.status.cardsHistory.filter(x => x.deckUrl === deck.url);\r\n\r\n            // compute the deck exhaustion factor\r\n            let exhaustionFactor: number;\r\n\r\n            const percentage = cardsPlayed.length / deck.cards.length;\r\n            if (percentage > this.deckExhaustionLimit) {\r\n                // cubic reduction\r\n                exhaustionFactor = Math.pow(Math.max(1.1 - percentage, 0.1), 2) * 0.5;\r\n            } else {\r\n                exhaustionFactor = 1;\r\n            }\r\n\r\n            const weightedCards: Array<Weighted<Card>> = [];\r\n            for (const card of deck.cards) {\r\n                const willPowerRating = this.rateWillPower(card.willPower, willPower);\r\n                const historyFactor = this.getHistoryFactor(card.id, cardsPlayed, totalCards);\r\n                const tagsFactor = this.getTagsFactor(card.tags, this.status.tags);\r\n                const weight = exhaustionFactor * willPowerRating * historyFactor * tagsFactor;\r\n                if (weight === 0) {\r\n                    continue;\r\n                }\r\n\r\n                weightedCards.push({\r\n                    value: card,\r\n                    weight: weight,\r\n                });\r\n            }\r\n\r\n            result.push({ deck, cards: weightedCards });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public recomputeWillPower(memory: string[]): { willPower: number; memory: string[] } {\r\n        const addedMemory = new Array<string>();\r\n        const now = new Date();\r\n        let result = this.status.willPower;\r\n\r\n        if (!_.includes(memory, \"AFTER_10\") && (now.getHours() > 22 || now.getHours() < 8)) {\r\n            result++;\r\n            addedMemory.push(\"AFTER_10\");\r\n        }\r\n\r\n        const slidesCount = this.status.slidesHistory.length;\r\n        if (slidesCount % 12 === 0 && slidesCount !== 0) {\r\n            const id = slidesCount / 12;\r\n            if (!_.includes(memory, `SLIDES_${id}`)) {\r\n                result++;\r\n                addedMemory.push(`SLIDES_${id}`);\r\n            }\r\n        }\r\n\r\n        if (result > 5) {\r\n            result = 5;\r\n        }\r\n\r\n        return { willPower: result, memory: addedMemory };\r\n    }\r\n\r\n    protected getTagsFactor(tags: string[], tagWeights: Array<Weighted<string>>) {\r\n        const weights = tags\r\n            .map(x => tagWeights.find(y => y.value === x))\r\n            .filter(x => x !== undefined)\r\n            .map(x => x!.weight);\r\n        if (weights.length > 0) {\r\n            return Math.min(...weights);\r\n        }\r\n        return 0.5;\r\n    }\r\n\r\n    /** return a value between 0 and 1 that returns 1 if the card was never played and a smaller number if the card was played recently */\r\n    protected getHistoryFactor(id: string, history: CardRef[], totalCards: number) {\r\n        const historyPosition = history.findIndex(x => x.card.id === id);\r\n        if (historyPosition === -1) {\r\n            return 1;\r\n        }\r\n\r\n        if (historyPosition > totalCards) {\r\n            return 0;\r\n        }\r\n\r\n        return historyPosition / totalCards;\r\n    }\r\n\r\n    /** return a value between 0 and 1 for the given will power */\r\n    protected rateWillPower(cardWillPower: number | undefined, willPower: number) {\r\n        if (cardWillPower === undefined) {\r\n            return 0.75;\r\n        }\r\n\r\n        // --- --- --- ||| --- --- --- ---\r\n        // 0.5 .75 .75  1  .15  0   0   0\r\n\r\n        if (cardWillPower === willPower) {\r\n            return 1;\r\n        }\r\n\r\n        if (cardWillPower > willPower) {\r\n            const result = 0.15 - (cardWillPower - willPower) * 0.1;\r\n            return result < 0 ? 0 : result;\r\n        }\r\n\r\n        return 0.5;\r\n    }\r\n\r\n    protected filterDecks(decks: CardDeck[]): CardDeck[] {\r\n        const filteredDecks: CardDeck[] = [];\r\n\r\n        for (const deck of decks) {\r\n            // remove disabled decks\r\n            if (deck.weight <= 0) {\r\n                continue;\r\n            }\r\n\r\n            const cards: Card[] = [];\r\n            for (const card of deck.cards) {\r\n                if (!this.verifyPlayerSpecification(this.status.players, card.players)) {\r\n                    continue;\r\n                }\r\n\r\n                let weightedZero = false;\r\n                for (const tag of card.tags) {\r\n                    if (this.checkIfWeightedZero(tag, this.status.tags)) {\r\n                        weightedZero = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (weightedZero) {\r\n                    continue;\r\n                }\r\n\r\n                if (!card.condition(this.status)) {\r\n                    continue;\r\n                }\r\n\r\n                cards.push(card);\r\n            }\r\n\r\n            if (cards.length > 0) {\r\n                filteredDecks.push({ cards, weight: deck.weight, url: deck.url });\r\n            }\r\n        }\r\n\r\n        return filteredDecks;\r\n    }\r\n\r\n    protected checkIfWeightedZero<T>(value: T, weights: Array<Weighted<T>>): boolean {\r\n        return weights.findIndex(x => x.value === value && x.weight <= 0) > -1;\r\n    }\r\n\r\n    protected verifyPlayerSpecification(\r\n        players: PlayerInfo[],\r\n        specification: PlayerSetting[],\r\n    ): boolean {\r\n        if (specification.length > players.length) {\r\n            return false;\r\n        }\r\n\r\n        const specificationMales = specification.filter(x => x.gender === \"Male\").length;\r\n        const actualMales = players.filter(x => x.gender === \"Male\").length;\r\n\r\n        if (specificationMales > actualMales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationFemales = specification.filter(x => x.gender === \"Female\").length;\r\n        const actualFemales = players.filter(x => x.gender === \"Female\").length;\r\n        if (specificationFemales > actualFemales) {\r\n            return false;\r\n        }\r\n\r\n        const specificationOpposite = specification.filter(x => x.gender === \"Opposite\").length;\r\n        if (specificationOpposite > Math.min(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        const specificationSame = specification.filter(x => x.gender === \"Same\").length;\r\n        if (specificationSame + 1 > Math.max(actualFemales, actualMales)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Card } from \"./cards/card\";\r\nimport { CardParserFactory } from \"./parsing/card-parser-factory\";\r\n\r\nexport class CardsLoader {\r\n    private readonly domParser = new DOMParser();\r\n\r\n    constructor(\r\n        private requestFile: (url: string) => Promise<string>,\r\n        private parserFactory: CardParserFactory,\r\n    ) {}\r\n\r\n    public async loadFromUrl(url: string): Promise<Card[]> {\r\n        const result: Card[] = [];\r\n\r\n        await this.loadFile(url, result, undefined);\r\n        return result;\r\n    }\r\n\r\n    private async loadFile(url: string, result: Card[], requestedCards?: string[]): Promise<void> {\r\n        const xml = await this.requestFile(url);\r\n        \r\n        // the DOMParser doesn't like XML docs without a Root element\r\n        const xmlDoc = this.domParser.parseFromString(\"<Root>\" + xml + \"</Root>\", \"text/xml\");\r\n\r\n        const cardElements = xmlDoc.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < cardElements.length; i++) {\r\n            const xmlElement = cardElements[i];\r\n\r\n            if (xmlElement.parentElement !== xmlDoc.documentElement) {\r\n                continue;\r\n            }\r\n\r\n            if (xmlElement.nodeName === \"DeckReference\") {\r\n                await this.parseDeckReference(xmlElement, result, requestedCards);\r\n                continue;\r\n            }\r\n\r\n            const parser = this.parserFactory.createParser(xmlElement.nodeName);\r\n            if (parser === undefined) {\r\n                console.error(\r\n                    `The card ${xmlElement.nodeName} could not be parsed. No parser found.`,\r\n                );\r\n                continue;\r\n            }\r\n\r\n            const card = parser.deserialize(xmlElement);\r\n            if (requestedCards !== undefined && requestedCards.indexOf(card.id) === -1) {\r\n                continue;\r\n            }\r\n\r\n            result.push(card);\r\n        }\r\n    }\r\n\r\n    private parseDeckReference(\r\n        xmlElement: Element,\r\n        result: Card[],\r\n        requestedCards?: string[],\r\n    ): Promise<void> {\r\n        const url = xmlElement.getAttribute(\"url\");\r\n        if (url === null) {\r\n            throw new Error(\"The url on a deck reference must not be null.\");\r\n        }\r\n\r\n        const referenceRequests: string[] = [];\r\n\r\n        const cardRefs = xmlElement.getElementsByTagName(\"CardRef\");\r\n        for (let i = 0; i < cardRefs.length; i++) {\r\n            const cardRef = cardRefs[i];\r\n\r\n            const idAttr = cardRef.getAttribute(\"id\");\r\n            if (idAttr === null) {\r\n                continue;\r\n            }\r\n\r\n            referenceRequests.push(idAttr);\r\n        }\r\n\r\n        let deckWhitelist: string[] | undefined;\r\n        if (referenceRequests.length === 0) {\r\n            deckWhitelist = requestedCards;\r\n        } else {\r\n            if (requestedCards !== undefined) {\r\n                deckWhitelist = [];\r\n\r\n                // only request cards that are in the superior list aswell as in the reference list\r\n                for (const cardId of requestedCards) {\r\n                    if (referenceRequests.indexOf(cardId) > -1) {\r\n                        deckWhitelist.push(cardId);\r\n                    }\r\n                }\r\n            } else {\r\n                deckWhitelist = referenceRequests;\r\n            }\r\n        }\r\n\r\n        return this.loadFile(url, result, deckWhitelist);\r\n    }\r\n}\r\n","export class PlayerSetting {\r\n    constructor(public playerIndex: number, public gender: GenderRequirement = \"None\") {}\r\n}\r\n\r\nexport type GenderRequirement = 'None' | 'Male' | 'Female' | 'Opposite' | 'Same';\r\n","import { GenderRequirement } from \"../cards/player-setting\";\r\n\r\nexport class ParserHelper {\r\n    /** parse a player tag, e. g. \"Player\" or \"Player2\" or \"Player5000\" and return the index (1 if none is specified) or undefined */\r\n    public static parsePlayerTag(s: string): number | undefined {\r\n        const tagName = \"Player\";\r\n\r\n        if (!s.startsWith(tagName)) {\r\n            return undefined;\r\n        }\r\n\r\n        if (s.length > tagName.length) {\r\n            const index = Number(s.substring(tagName.length));\r\n            return isNaN(index) ? undefined : index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    /** parse a gender requirement string, e. g. \"m\", \"male\", \"Male\", etc. */\r\n    public static parseGenderRequirement(s: string): GenderRequirement |undefined {\r\n        s = s.toLowerCase();\r\n\r\n        if (s in this.genderRequirementMap) {\r\n            return this.genderRequirementMap[s];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** parse a timespan in the format hh:mm:ss or mm:ss */\r\n    public static parseTimeSpanStringToSeconds(s: string): number | undefined {\r\n        const a = s.split(\":\");\r\n\r\n        if (a.length > 3) {\r\n            return undefined;\r\n        }\r\n\r\n        let result = 0;\r\n\r\n        for (let i = 0; i < a.length; i++) {\r\n            const p = Number(a[i]);\r\n            if (isNaN(p)) {\r\n                return undefined;\r\n            }\r\n\r\n            result += p * Math.pow(60, (a.length - i - 1));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static genderRequirementMap: { [id: string]: GenderRequirement } = {\r\n        m: \"Male\",\r\n        male: \"Male\",\r\n        f: \"Female\",\r\n        female: \"Female\",\r\n        o: \"Opposite\",\r\n        opposite: \"Opposite\",\r\n        s: \"Same\",\r\n        same: \"Same\",\r\n    };\r\n}\r\n","import { BaseCard } from \"../cards/base-card\";\r\nimport { Card } from \"../cards/card\";\r\nimport { GenderRequirement, PlayerSetting } from \"../cards/player-setting\";\r\nimport { CardParser } from \"./card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\n\r\nexport abstract class BaseCardParser<TCard extends BaseCard> implements CardParser {\r\n    public deserialize(xml: Element): Card {\r\n        const card = this.createCard();\r\n\r\n        const idAttr = xml.getAttribute(\"id\");\r\n        if (idAttr === null) {\r\n            throw new Error(\"The id of a card must not be null\");\r\n        }\r\n        card.id = idAttr;\r\n\r\n        card.willPower = Number(xml.getAttribute(\"willPower\"));\r\n        if (card.willPower < 1 || card.willPower > 10) {\r\n            card.willPower = undefined;\r\n        }\r\n\r\n        const tags = xml.getAttribute(\"tags\");\r\n\r\n        card.tags = tags\r\n            ? [...this.getDefaultAttributes(), ...tags.split(\",\")]\r\n            : this.getDefaultAttributes();\r\n\r\n        this.parseAttributes(xml, card);\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            if (element.tagName === `${xml.tagName}.players`) {\r\n                card.players = this.parsePlayers(element);\r\n                continue;\r\n            }\r\n\r\n            this.parseElement(element, card);\r\n        }\r\n\r\n        if (card.players === undefined) {\r\n            card.players = [];\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    protected getDefaultAttributes(): string[] {\r\n        return [];\r\n    }\r\n\r\n    protected abstract parseAttributes(rootXml: Element, card: TCard): void;\r\n    protected abstract parseElement(element: Element, card: TCard): boolean;\r\n\r\n    protected abstract createCard(): TCard;\r\n\r\n    private parsePlayers(xml: Element): PlayerSetting[] {\r\n        const players: PlayerSetting[] = [];\r\n\r\n        const subElements = xml.getElementsByTagName(\"*\");\r\n        for (let i = 0; i < subElements.length; i++) {\r\n            const element = subElements[i];\r\n\r\n            if (element.parentElement !== xml) {\r\n                continue;\r\n            }\r\n\r\n            const player = this.parsePlayer(element);\r\n            if (player !== undefined) {\r\n                players.push(player);\r\n            }\r\n        }\r\n\r\n        return players;\r\n    }\r\n\r\n    private parsePlayer(xml: Element): PlayerSetting | undefined {\r\n        const index = ParserHelper.parsePlayerTag(xml.tagName);\r\n        if (index === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        let requiredGender: GenderRequirement = \"None\";\r\n\r\n        const genderAttr = xml.getAttribute(\"gender\");\r\n        if (genderAttr) {\r\n            const genderReq = ParserHelper.parseGenderRequirement(genderAttr);\r\n\r\n            if (genderReq !== undefined) {\r\n                requiredGender = genderReq;\r\n            }\r\n        }\r\n\r\n        return new PlayerSetting(index, requiredGender);\r\n    }\r\n}\r\n","import { TextTranslation } from \"./text-translation\";\r\n\r\nexport class TextElement {\r\n    public weight: number = 1;\r\n    public translations!: TextTranslation[];\r\n}","export class TextTranslation {\r\n    constructor(public lang: string, public content: string) {}\r\n}\r\n","import { TextElement } from \"../cards/text-element\";\r\nimport { TextTranslation } from \"../cards/text-translation\";\r\n\r\n/** parses the text content of an element */\r\nexport class TextContentParser {\r\n    public result: TextElement[];\r\n\r\n    private isConditionalElement: boolean | undefined = undefined;\r\n\r\n    constructor() {\r\n        this.result = [];\r\n    }\r\n\r\n    public addElement(xml: Element): boolean {\r\n        switch (xml.tagName) {\r\n            case \"Case\":\r\n                if (this.isConditionalElement === false) {\r\n                    return false;\r\n                }\r\n                this.isConditionalElement = true;\r\n\r\n                this.result.push(this.parseTextElement(xml));\r\n                return true;\r\n            case \"Text\":\r\n                if (this.isConditionalElement === true) {\r\n                    return false;\r\n                } else if (this.isConditionalElement === undefined) {\r\n                    this.result.push({ translations: [], weight: 1 });\r\n                }\r\n\r\n                this.isConditionalElement = false;\r\n                this.result[0].translations.push(this.parseTranslation(xml));\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private parseTextElement(element: Element): TextElement {\r\n        const translations: TextTranslation[] = [];\r\n        const textElement = new TextElement();\r\n\r\n        const weight = element.getAttribute(\"weight\");\r\n        if (weight !== null && !isNaN(Number(weight))) {\r\n            textElement.weight = Number(weight);\r\n        } else {\r\n            textElement.weight = 1;\r\n        }\r\n\r\n        const texts = element.getElementsByTagName(\"Text\");\r\n        for (let i = 0; i < texts.length; i++) {\r\n            const textXmlNode = texts[i];\r\n            translations.push(this.parseTranslation(textXmlNode));\r\n        }\r\n\r\n        textElement.translations = translations;\r\n        return textElement;\r\n    }\r\n\r\n    private parseTranslation(element: Element) {\r\n        const lang = element.getAttribute(\"lang\");\r\n        if (lang === null) {\r\n            throw new Error(\"lang attribute not found on element\");\r\n        }\r\n\r\n        if (element.textContent === null) {\r\n            throw new Error(\"The text content of the element is empty.\");\r\n        }\r\n\r\n        return new TextTranslation(lang, element.textContent);\r\n    }\r\n}\r\n","import { TextCard } from \"../cards/text-card\";\r\nimport { BaseCardParser } from \"./base-card-parser\";\r\nimport { ParserHelper } from \"./parser-helper\";\r\nimport { TextContentParser } from \"./text-content-parser\";\r\n\r\nexport abstract class TextCardParser<TCard extends TextCard> extends BaseCardParser<TCard> {\r\n    private textContentParser = new TextContentParser();\r\n\r\n    protected parseAttributes(rootXml: Element, card: TCard): void {\r\n        const followUpAttr = rootXml.getAttribute(\"followUpProbability\");\r\n        if (followUpAttr !== null) {\r\n            const followUpProbability = Number(followUpAttr);\r\n            if (isNaN(followUpProbability)) {\r\n                throw new Error(\r\n                    `The follow up propability ${followUpAttr} could not be parsed as a number (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpPropability = followUpProbability;\r\n        }\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay !== null) {\r\n            const seconds = ParserHelper.parseTimeSpanStringToSeconds(followUpDelay);\r\n            if (seconds === undefined) {\r\n                throw new Error(\r\n                    `Could not parse followUpDelay ${followUpDelay} as a timespan (card: ${\r\n                        card.id\r\n                    }).`,\r\n                );\r\n            }\r\n\r\n            card.followUpDelay = seconds;\r\n        } else {\r\n            card.followUpDelay = 0;\r\n        }\r\n    }\r\n\r\n    protected parseElement(element: Element, card: TCard): boolean {\r\n        switch (element.tagName) {\r\n            case \"Text\":\r\n            case \"Case\":\r\n                card.content = this.textContentParser.result;\r\n                return this.textContentParser.addElement(element);\r\n        }\r\n\r\n        if (element.tagName === `${card.type}.followUp`) {\r\n            const parser = new TextContentParser();\r\n\r\n            const subElements = element.getElementsByTagName(\"*\");\r\n            for (let i = 0; i < subElements.length; i++) {\r\n                const subElement = subElements[i];\r\n                if (subElement.parentElement !== element) {\r\n                    continue;\r\n                }\r\n\r\n                parser.addElement(subElement);\r\n            }\r\n\r\n            card.followUp = parser.result;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { BaseCard } from \"./base-card\";\r\nimport { TextElement } from \"./text-element\";\r\nimport { GameStatus } from \"../game-status\";\r\nimport _ from \"lodash\";\r\n\r\nexport abstract class TextCard extends BaseCard {\r\n    /** the propability (0-1) that this card follows up */\r\n    public followUpPropability: number = 1;\r\n\r\n    /** the delay of the follow up in seconds */\r\n    public followUpDelay!: number;\r\n\r\n    public content!: TextElement[];\r\n    public followUp!: TextElement[];\r\n\r\n    public condition: (status: GameStatus) => boolean = status => {\r\n        return _.some(this.content, x => _.some(x.translations, y => y.lang === status.language));\r\n    };\r\n}\r\n","import { GameStatus } from \"../game-status\";\r\nimport { Card } from \"./card\";\r\nimport { PlayerSetting } from \"./player-setting\";\r\n\r\n/** A very basic implementation of Card  */\r\nexport abstract class BaseCard implements Card {\r\n  public id!: string;\r\n  public willPower!: number | undefined;\r\n  public players!: PlayerSetting[];\r\n  public tags!: string[];\r\n  public condition!: (status: GameStatus) => boolean;\r\n\r\n  public readonly abstract type: string;\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class FactCard extends TextCard {\r\n    public readonly type: string = \"FactCard\";\r\n    public isTrueFact: boolean = false;\r\n}\r\n","import { TextCardParser } from \"../../core/parsing/text-card-parser\";\r\nimport { FactCard } from \"../cards/fact-card\";\r\n\r\nexport class FactCardParser extends TextCardParser<FactCard> {\r\n    protected createCard(): FactCard {\r\n        return new FactCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: FactCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const attr = rootXml.getAttribute(\"is\");\r\n        card.isTrueFact = attr === null ? true : this.toBool(attr);\r\n    }\r\n\r\n    protected toBool(value?: string): boolean {\r\n        if (value === \"true\") {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined) {\r\n            return false;\r\n        }\r\n\r\n        return !!+value;\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class VirusCard extends TextCard {\r\n    public readonly type: string = \"VirusCard\";\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { VirusCard } from '../cards/virus-card';\r\n\r\nexport class VirusCardParser extends TextCardParser<VirusCard> {\r\n    protected createCard(): VirusCard {\r\n        return new VirusCard();\r\n    }\r\n\r\n    protected parseAttributes(rootXml: Element, card: VirusCard): void {\r\n        super.parseAttributes(rootXml, card);\r\n\r\n        const followUpDelay = rootXml.getAttribute(\"followUpDelay\");\r\n        if (followUpDelay === null) {\r\n            card.followUpDelay = 60 * 5; // 5 minutes default\r\n        }\r\n    }\r\n}\r\n","import { TextCardParser } from \"@core/parsing/text-card-parser\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DefaultTextCardParser<T extends TextCard> extends TextCardParser<T> {\r\n    constructor(private factory: new () => T) {\r\n        super();\r\n    }\r\n\r\n    protected createCard(): T {\r\n        return new this.factory();\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DownCard extends TextCard {\r\n    public readonly type: string = \"DownCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NeverEverCard extends TextCard {\r\n    public readonly type: string = \"NeverEverCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class JokeCard extends TextCard {\r\n    public readonly type: string = \"JokeCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class QuestionCard extends TextCard {\r\n    public readonly type: string = \"QuestionCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class TaskCard extends TextCard {\r\n    public readonly type: string = \"TaskCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class WouldYouRatherCard extends TextCard {\r\n    public readonly type: string = \"WyrCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class DrinkCard extends TextCard {\r\n    public readonly type: string = \"DrinkCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class GroupGameCard extends TextCard {\r\n    public readonly type: string = \"GroupGameCard\";\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\n\r\nexport class NoIdeaLosesCard extends TextCard {\r\n    public readonly type: string = \"NoIdeaLosesCard\";\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { FactCardParser } from \"./parsing/fact-card-parser\";\r\nimport { VirusCardParser } from \"./parsing/virus-card-parser\";\r\nimport { DefaultTextCardParser } from \"./parsing/default-text-card-parser\";\r\nimport { DownCard } from \"./cards/down-card\";\r\nimport { NeverEverCard } from \"./cards/never-ever-card\";\r\nimport { JokeCard } from \"./cards/joke-card\";\r\nimport { QuestionCard } from \"./cards/question-card\";\r\nimport { TaskCard } from \"./cards/task-card\";\r\nimport { WouldYouRatherCard } from \"./cards/would-you-rather-card\";\r\nimport { DrinkCard } from \"./cards/drink-card\";\r\nimport { GroupGameCard } from \"./cards/group-game-card\";\r\nimport { NoIdeaLosesCard } from \"./cards/no-idea-loses-card\";\r\n\r\ntype ParserRegistration = { [type: string]: () => CardParser };\r\n\r\nexport const parsers: ParserRegistration = {\r\n    FactCard: () => new FactCardParser(),\r\n    VirusCard: () => new VirusCardParser(),\r\n    DownCard: () => new DefaultTextCardParser<DownCard>(DownCard),\r\n    NeverEverCard: () => new DefaultTextCardParser<NeverEverCard>(NeverEverCard),\r\n    JokeCard: () => new DefaultTextCardParser<JokeCard>(JokeCard),\r\n    QuestionCard: () => new DefaultTextCardParser<QuestionCard>(QuestionCard),\r\n    TaskCard: () => new DefaultTextCardParser<TaskCard>(TaskCard),\r\n    WyrCard: () => new DefaultTextCardParser<WouldYouRatherCard>(WouldYouRatherCard),\r\n    DrinkCard: () => new DefaultTextCardParser<DrinkCard>(DrinkCard),\r\n    GroupGameCard: () => new DefaultTextCardParser<GroupGameCard>(GroupGameCard),\r\n    NoIdeaLosesCard: () => new DefaultTextCardParser<NoIdeaLosesCard>(NoIdeaLosesCard),\r\n};\r\n","import axios from \"axios\";\r\nimport { CardsLoader } from \"../../core/cards-loader\";\r\nimport { Card } from \"../../core/cards/card\";\r\nimport { DefaultCardParserFactory } from \"../../impl/default-card-parser-factory\";\r\n\r\nconst parserFactory = new DefaultCardParserFactory();\r\nconst loader = new CardsLoader(requestFile, parserFactory);\r\n\r\nasync function requestFile(url: string) : Promise<string> {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n}\r\n\r\nexport async function loadCards(url: string): Promise<Card[]> {\r\n    return loader.loadFromUrl(url);\r\n}\r\n","import { CardParser } from \"../core/parsing/card-parser\";\r\nimport { CardParserFactory } from \"../core/parsing/card-parser-factory\";\r\nimport { parsers } from \"./registrations\";\r\n\r\nexport class DefaultCardParserFactory implements CardParserFactory {\r\n    private parsers: { [type: string]: () => CardParser };\r\n\r\n    constructor() {\r\n        this.parsers = parsers;\r\n    }\r\n\r\n    public createParser(cardType: string): CardParser | undefined {\r\n        if (cardType in this.parsers) {\r\n            return this.parsers[cardType]();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","import * as cardsLoader from \"./api/cards-loader\";\r\n\r\nexport default {\r\n    api: {\r\n        cardsLoader,\r\n    },\r\n};\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { from, of } from \"rxjs\";\r\nimport { catchError, filter, map, mergeMap } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport { loadSourceAsync } from \"./actions\";\r\n\r\nexport const loadSourceEpic: Epic<RootAction, RootAction, RootState, Services> = (\r\n    action$,\r\n    _state$,\r\n    { api },\r\n) =>\r\n    action$.pipe(\r\n        filter(isActionOf(loadSourceAsync.request)),\r\n        mergeMap(action =>\r\n            from(api.cardsLoader.loadCards(action.payload)).pipe(\r\n                map(cards => loadSourceAsync.success({ url: action.payload, cards })),\r\n                catchError((message: string) =>\r\n                    of(loadSourceAsync.failure({ url: action.payload, message })),\r\n                ),\r\n            ),\r\n        ),\r\n    );\r\n","export abstract class TextFragment {}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RawTextFragment extends TextFragment {\r\n    constructor(public text: string) {\r\n        super();\r\n    }\r\n}","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport abstract class VariableFragment extends TextFragment {\r\n}","import { VariableFragment } from \"./variable-fragment\";\r\nimport { GenderRequirement } from \"@core/cards/player-setting\";\r\n\r\nexport class PlayerReferenceFragment extends VariableFragment {\r\n    constructor(public playerIndex: number = 1, public gender: GenderRequirement = \"None\") {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SipsFragment extends VariableFragment {\r\n    constructor(public minSips: number = 1, public sipsIndex: number = 1) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomNumberFragment extends TextFragment {\r\n    constructor(public numbers: RandomNumber[]) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport interface RandomNumber {\r\n    getCount(): number;\r\n}\r\n\r\nexport class NumberRange implements RandomNumber {\r\n    constructor(public min: number, public max: number) {}\r\n\r\n    getCount(): number {\r\n        return this.max - this.min;\r\n    }\r\n}\r\n\r\nexport class StaticNumber implements RandomNumber {\r\n    constructor(public i: number) {}\r\n\r\n    getCount(): number {\r\n        return 1;\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class RandomTextFragment extends TextFragment {\r\n    constructor(public texts: string[]) {\r\n        super();\r\n    }\r\n}\r\n","import { TextFragment } from \"../text-fragment\";\r\n\r\nexport class GenderBasedSelectionFragment extends TextFragment {\r\n    constructor(\r\n        public femaleText: string,\r\n        public maleText?: string,\r\n        public referencedPlayerIndex?: number,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n","import { VariableFragment } from \"./variable-fragment\";\r\n\r\nexport class SocialMediaPlatformFragment extends VariableFragment {\r\n}","import { ParserHelper } from \"./../parser-helper\";\r\nimport { CardTextDecoder } from \"./card-text-decoder\";\r\nimport { TextFragment } from \"../../text-fragment\";\r\nimport * as Consts from \"./text-decoder-consts\";\r\nimport { RawTextFragment } from \"../../fragments/raw-text-fragment\";\r\nimport { PlayerReferenceFragment } from \"../../fragments/player-reference-fragment\";\r\nimport { SipsFragment } from \"../../fragments/sips-fragment\";\r\nimport {\r\n    RandomNumberFragment,\r\n    RandomNumber,\r\n    NumberRange,\r\n    StaticNumber,\r\n} from \"../../fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"../../fragments/random-text-fragment\";\r\nimport { GenderBasedSelectionFragment } from \"../../fragments/gender-based-selection-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\n\r\nexport class DefaultTextDecoder implements CardTextDecoder {\r\n    decode(s: string): TextFragment[] {\r\n        const result: TextFragment[] = [];\r\n\r\n        let index = 0;\r\n        let lastTokenIndex = 0;\r\n\r\n        do {\r\n            if (s[index] == Consts.VarStartChar) {\r\n                if (lastTokenIndex !== index) {\r\n                    result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                }\r\n\r\n                const token = this.readToken(s, index, Consts.VarEndChar);\r\n                index = token.index;\r\n\r\n                result.push(this.parseVariableFragment(token.value));\r\n            } else if (s[index] === Consts.SelectionStartChar) {\r\n                if (index > 1 && s[index - 1] === Consts.SelectionModifierStartChar) {\r\n                    // handle !{...}\r\n                    index--;\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    index++;\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseRandomSelectionFragment(content.value));\r\n                } else {\r\n                    if (lastTokenIndex !== index) {\r\n                        result.push(new RawTextFragment(s.substring(lastTokenIndex, index)));\r\n                    }\r\n\r\n                    const content = this.readToken(s, index, Consts.SelectionEndChar);\r\n                    index = content.index;\r\n\r\n                    result.push(this.parseGenderSelectionFragment(content.value));\r\n                }\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            lastTokenIndex = index;\r\n        } while (++index < s.length);\r\n\r\n        if (lastTokenIndex !== s.length) {\r\n            result.push(new RawTextFragment(s.substring(lastTokenIndex)));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseVariableFragment(content: string): TextFragment {\r\n        content = content.toLowerCase();\r\n\r\n        if (content.startsWith(Consts.PlayerVariable)) {\r\n            // Samples:\r\n            // [Player1:f]\r\n            // [Player1]\r\n            // [Player]\r\n\r\n            const playerRef = new PlayerReferenceFragment();\r\n\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let playerTag: string;\r\n            if (parameterBegin === -1) {\r\n                playerTag = content;\r\n            } else {\r\n                playerTag = content.substring(0, parameterBegin);\r\n\r\n                const genderString = content.substring(parameterBegin + 1);\r\n                const gender = ParserHelper.parseGenderRequirement(genderString);\r\n                if (gender === undefined) {\r\n                    throw new Error(\r\n                        `Gender parameter of player tag could not be parsed: ${content}`,\r\n                    );\r\n                }\r\n\r\n                playerRef.gender = gender;\r\n            }\r\n\r\n            playerRef.playerIndex = this.parsePlayerIndex(playerTag);\r\n            return playerRef;\r\n        }\r\n\r\n        if (content.startsWith(Consts.SipsVariable)) {\r\n            const sipsFragment = new SipsFragment();\r\n            const parameterBegin = content.indexOf(Consts.VariableParametersStart);\r\n\r\n            let sipsTag: string;\r\n            if (parameterBegin === -1) {\r\n                sipsTag = content;\r\n            } else {\r\n                sipsTag = content.substring(0, parameterBegin);\r\n                sipsFragment.minSips = Number(content.substring(parameterBegin + 1));\r\n                if (isNaN(sipsFragment.minSips)) {\r\n                    throw new Error(`The sips amount of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            if (sipsTag.length > Consts.SipsVariable.length) {\r\n                sipsFragment.sipsIndex = Number(sipsTag.substring(Consts.SipsVariable.length));\r\n                if (isNaN(sipsFragment.sipsIndex)) {\r\n                    throw new Error(`The sips index of \"${sipsTag}\" could not be parsed.`);\r\n                }\r\n            }\r\n\r\n            return sipsFragment;\r\n        }\r\n\r\n        if (content === Consts.SocialMediaVariable) {\r\n            return new SocialMediaPlatformFragment();\r\n        }\r\n\r\n        return new RawTextFragment(content);\r\n    }\r\n\r\n    public parseRandomSelectionFragment(content: string): TextFragment {\r\n        // Samples:\r\n        // 12,54,56-90\r\n        // 12,hello,not,19\r\n\r\n        const isNumericSelection = /^[0-9,-]+$/.test(content);\r\n        if (isNumericSelection) {\r\n            const numbers = this.parseNumberArray(content);\r\n            return new RandomNumberFragment(numbers);\r\n        }\r\n\r\n        const texts = this.splitQuoted(content, \",\");\r\n        return new RandomTextFragment(texts);\r\n    }\r\n\r\n    public parseNumberArray(content: string): RandomNumber[] {\r\n        const result: RandomNumber[] = [];\r\n        let currentNumber: RandomNumber | null = null;\r\n\r\n        let numberStart = 0;\r\n        let isRangeToken = false;\r\n\r\n        let i = 0;\r\n        while (true) {\r\n            for (; i < content.length; i++) {\r\n                const c = content[i];\r\n\r\n                if (!isNaN(Number(c))) {\r\n                    continue;\r\n                }\r\n\r\n                if (c === \"-\") {\r\n                    if (isRangeToken) {\r\n                        throw new Error(\"Can only have one range identifier per field\");\r\n                    }\r\n                    isRangeToken = true;\r\n\r\n                    currentNumber = new NumberRange(Number(content.substring(numberStart, i)), 0);\r\n                    numberStart = i + 1;\r\n                    continue;\r\n                }\r\n\r\n                if (c === \",\") {\r\n                    break;\r\n                }\r\n\r\n                throw new Error(\"Invalid character found: \" + c);\r\n            }\r\n\r\n            if (i === numberStart) {\r\n                throw new Error(`A number was expected at position ${i} in string \"${content}\"`);\r\n            }\r\n\r\n            const num = Number(content.substring(numberStart, i));\r\n            if (isRangeToken) {\r\n                (currentNumber as NumberRange).max = num;\r\n            } else {\r\n                currentNumber = new StaticNumber(num);\r\n            }\r\n\r\n            result.push(currentNumber!);\r\n\r\n            if (i === content.length) {\r\n                break;\r\n            }\r\n\r\n            currentNumber = null;\r\n            isRangeToken = false;\r\n            numberStart = ++i;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public splitQuoted(value: string, delimiter: string): string[] {\r\n        let tokenStart = 0;\r\n        let result: string[] = [];\r\n\r\n        while (value.length > tokenStart - 1) {\r\n            let withinQuotes = false;\r\n\r\n            if (value[tokenStart] === '\"') {\r\n                withinQuotes = true;\r\n                tokenStart++;\r\n            }\r\n\r\n            let i = tokenStart;\r\n            do {\r\n                if (value[i] === delimiter) {\r\n                    if (withinQuotes) continue;\r\n\r\n                    result.push(value.substring(tokenStart, i));\r\n                    tokenStart = i + 1;\r\n                    break;\r\n                }\r\n\r\n                if (value[i] == '\"') {\r\n                    if (!withinQuotes) {\r\n                        continue; //allow quotes in the middle\r\n                    }\r\n\r\n                    if (i == value.length - 1) {\r\n                        //if its the last char\r\n                        result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                        return result;\r\n                    }\r\n\r\n                    const nextChar = value[i + 1];\r\n                    if (nextChar == '\"') {\r\n                        i++;\r\n                        continue; //escaped quotes\r\n                    }\r\n\r\n                    if (nextChar != delimiter)\r\n                        throw new Error(\"The delimiter must come after the closing quotes.\");\r\n\r\n                    result.push(value.substring(tokenStart, i).replace('\"\"', '\"'));\r\n                    tokenStart = i + 2;\r\n                    break;\r\n                }\r\n\r\n                if (i == value.length - 1) {\r\n                    if (withinQuotes) {\r\n                        throw new Error(\"The text must end with a quote\");\r\n                    }\r\n\r\n                    result.push(value.substring(tokenStart, i + 1));\r\n                    return result;\r\n                }\r\n            } while (++i < value.length);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public parseGenderSelectionFragment(content: string): GenderBasedSelectionFragment {\r\n        const fragment = new GenderBasedSelectionFragment(\"\");\r\n\r\n        const splitterIndex = content.indexOf(Consts.SelectionSplitterChar);\r\n        const reference = content.indexOf(Consts.SelectionReferenceChar);\r\n\r\n        if (reference !== -1) {\r\n            fragment.referencedPlayerIndex = this.parsePlayerIndex(\r\n                content.substring(reference + 1),\r\n            );\r\n            content = content.substring(0, reference);\r\n        }\r\n\r\n        if (splitterIndex === -1) {\r\n            fragment.femaleText = content;\r\n        } else {\r\n            fragment.maleText = content.substring(0, splitterIndex);\r\n            fragment.femaleText = content.substring(splitterIndex + 1, content.length);\r\n        }\r\n\r\n        return fragment;\r\n    }\r\n\r\n    public parsePlayerIndex(value: string): number {\r\n        if (value.length > Consts.PlayerVariable.length) {\r\n            const index = Number(value.substring(Consts.PlayerVariable.length));\r\n            if (isNaN(index)) {\r\n                throw new Error(`The player index of \"${value}\" could not be parsed.`);\r\n            }\r\n\r\n            return index;\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    public readToken(\r\n        value: string,\r\n        index: number,\r\n        endChar: string,\r\n    ): { value: string; index: number } {\r\n        const length = value.length;\r\n        const tokenStart = index;\r\n\r\n        while (++index < length) {\r\n            const char = value[index];\r\n\r\n            if (char === Consts.EscapeChar) {\r\n                index++;\r\n                continue;\r\n            }\r\n\r\n            if (char === endChar) {\r\n                index++;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { index, value: value.substring(tokenStart + 1, index - 1) };\r\n    }\r\n}\r\n","export const VarStartChar: string = \"[\";\r\nexport const VarEndChar: string = \"]\";\r\nexport const EscapeChar: string = \"\\\\\";\r\nexport const SelectionStartChar: string = \"{\";\r\nexport const SelectionModifierStartChar: string = \"!\";\r\nexport const SelectionEndChar: string = \"}\";\r\n\r\nexport const PlayerVariable: string = \"player\";\r\nexport const SipsVariable: string = \"sips\";\r\nexport const VariableParametersStart: string = \":\";\r\nexport const SocialMediaVariable: string = \"socialmediaplatform\";\r\n\r\nexport const SelectionSplitterChar: string = \"/\";\r\nexport const SelectionReferenceChar: string = \"|\";\r\nexport const ArrayDelimiter: string = \",\";\r\n","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GenderBasedSelectionFragment } from \"@core/fragments/gender-based-selection-fragment\";\r\nimport { PlayerReferenceFragment } from \"@core/fragments/player-reference-fragment\";\r\nimport { NumberRange, RandomNumberFragment, StaticNumber } from \"@core/fragments/random-number-fragment\";\r\nimport { RandomTextFragment } from \"@core/fragments/random-text-fragment\";\r\nimport { RawTextFragment } from \"@core/fragments/raw-text-fragment\";\r\nimport { SipsFragment } from \"@core/fragments/sips-fragment\";\r\nimport { SocialMediaPlatformFragment } from \"@core/fragments/social-media-platform-fragment\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { RandomUtils } from \"@core/selection/selection-algorithm\";\r\nimport { TextFragment } from \"@core/text-fragment\";\r\nimport _ from \"lodash\";\r\n\r\nexport class TextFormatter {\r\n    public static getRequiredPlayers(fragments: TextFragment[], playerSettings: PlayerSetting[]) {\r\n        const requiredPlayers = new Array<PlayerSetting>();\r\n\r\n        const players = _.groupBy(\r\n            fragments\r\n                .filter(x => x instanceof PlayerReferenceFragment)\r\n                .map(x => x as PlayerReferenceFragment),\r\n            \"playerIndex\",\r\n        );\r\n\r\n        for (const key in players) {\r\n            if (players.hasOwnProperty(key)) {\r\n                const player = players[key][0];\r\n\r\n                let requiredGender = player.gender;\r\n\r\n                if (requiredGender === \"None\") {\r\n                    const rootSetting = playerSettings.find(\r\n                        x => x.playerIndex === player.playerIndex,\r\n                    );\r\n                    if (rootSetting !== undefined) {\r\n                        requiredGender = rootSetting.gender;\r\n                    }\r\n                }\r\n\r\n                requiredPlayers.push({ playerIndex: player.playerIndex, gender: requiredGender });\r\n            }\r\n        }\r\n\r\n        return requiredPlayers;\r\n    }\r\n\r\n    public static getRequiredSips(fragments: TextFragment[]): SipsFragment[] {\r\n        const sips = _.groupBy(\r\n            fragments.filter(x => x instanceof SipsFragment).map(x => x as SipsFragment),\r\n            \"sipsIndex\",\r\n        );\r\n        return Object.values(sips).map(x => x[0]);\r\n    }\r\n\r\n    public static format(\r\n        fragments: TextFragment[],\r\n        players: { [index: number]: PlayerInfo },\r\n        sips: { [index: number]: number },\r\n        socialMediaPlatform: string,\r\n        translate: (key: string) => string,\r\n        selection: RandomUtils,\r\n        options: Partial<FormatOptions>,\r\n    ): string {\r\n        let result = \"\";\r\n        let lastPlayerFragment: PlayerReferenceFragment | null = null;\r\n\r\n        for (const fragment of fragments) {\r\n            if (fragment instanceof RawTextFragment) {\r\n                result += fragment.text;\r\n            } else if (fragment instanceof PlayerReferenceFragment) {\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n                result += players[fragment.playerIndex].name;\r\n                if (options.boldPlayerNames) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                lastPlayerFragment = fragment;\r\n            } else if (fragment instanceof SipsFragment) {\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n\r\n                const sip = sips[fragment.sipsIndex];\r\n                if (sip === 1) {\r\n                    result += translate(\"oneSip\");\r\n                } else {\r\n                    result += `${sip} ${translate(\"sips\")}`;\r\n                }\r\n\r\n                if (options.boldSips) {\r\n                    result += \"**\";\r\n                }\r\n            } else if (fragment instanceof GenderBasedSelectionFragment) {\r\n                let referencedPlayer: number;\r\n                if (fragment.referencedPlayerIndex !== undefined) {\r\n                    referencedPlayer = fragment.referencedPlayerIndex;\r\n                } else if (lastPlayerFragment !== null) {\r\n                    referencedPlayer = lastPlayerFragment.playerIndex;\r\n                } else {\r\n                    const playerKeys = Object.keys(players);\r\n                    if (playerKeys.length === 0) {\r\n                        continue;\r\n                    }\r\n\r\n                    referencedPlayer = Number(playerKeys[0]);\r\n                }\r\n\r\n                const player = players[referencedPlayer];\r\n                const text = player.gender === \"Female\" ? fragment.femaleText : fragment.maleText;\r\n                if (text !== undefined) {\r\n                    result += text;\r\n                }\r\n            } else if (fragment instanceof RandomTextFragment) {\r\n                const text = selection.selectRandomWeighted(fragment.texts, () => 1);\r\n                result += text;\r\n            } else if (fragment instanceof RandomNumberFragment) {\r\n                const number = selection.selectRandomWeighted(fragment.numbers, x => x.getCount());\r\n                if (number === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                if (number instanceof NumberRange) {\r\n                    const random =\r\n                        number.min + Math.round((number.max - number.min) * selection.getRandom());\r\n                    result += random;\r\n                } else if (number instanceof StaticNumber) {\r\n                    result += number.i;\r\n                }\r\n            } else if (fragment instanceof SocialMediaPlatformFragment) {\r\n                result += socialMediaPlatform;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport interface FormatOptions {\r\n    boldPlayerNames: boolean;\r\n    boldSips: boolean;\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { DefaultTextDecoder } from \"@core/parsing/text-decoder/default-text-decoder\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { FollowUpSlide, SelectedPlayer, Translator } from \"GameModels\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../../../store\";\r\nimport * as actions from \"../../actions\";\r\nimport { TextFormatter } from \"../../formatter/text-formatter\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { CardPresenter } from \"./card-presenter\";\r\n\r\nexport interface TextSlideState {\r\n    markdownContent: string;\r\n}\r\n\r\nexport abstract class TextSlidePresenter<\r\n    TState extends TextSlideState,\r\n    TCard extends TextCard\r\n> extends CardPresenter<TCard> {\r\n    constructor(protected translator: Translator, cardType: string, slideType: string) {\r\n        super(cardType, slideType);\r\n    }\r\n\r\n    protected initializeCard(card: TCard, cardRef: CardRef): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const result = new Array<RootAction>();\r\n\r\n        const text = this.selectText(selection, card);\r\n        const { formatted, players } = this.formatText(text, card, null, selection);\r\n\r\n        const state = this.initializeState(formatted, card, players, selection);\r\n        result.push(\r\n            actions.setSlideState({\r\n                state,\r\n                insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n            }),\r\n        );\r\n\r\n        if (_.some(card.followUp)) {\r\n            // dont check for correct translation as the language may change\r\n            if (Math.random() <= card.followUpPropability) {\r\n                const due = new Date();\r\n                due.setSeconds(due.getSeconds() + card.followUpDelay);\r\n\r\n                result.push(actions.enqueueFollowUp(this.createFollowUp(cardRef, players, due)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected initializeFollowUpCard(card: TCard, param: any): RootAction[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n\r\n        try {\r\n            const { text, players } = this.selectFollowUpText(selection, card, param);\r\n            const { formatted } = this.formatText(text, card, players || [], selection);\r\n\r\n            const state = this.initializeFollowUpState(formatted, card, selection, param);\r\n            return [\r\n                actions.setSlideState({\r\n                    state,\r\n                    insights: (selection as MelinaAlgorithm).insights.playerSelection,\r\n                }),\r\n            ];\r\n        } catch (error) {\r\n            //no follow up found\r\n            return [actions.requestSlideAsync.request(this.translator)];\r\n        }\r\n    }\r\n\r\n    protected abstract initializeState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): TState;\r\n\r\n    protected abstract initializeFollowUpState(\r\n        markdownContent: string,\r\n        card: TCard,\r\n        selection: SelectionAlgorithm,\r\n        param: any,\r\n    ): TState;\r\n\r\n    protected createFollowUp(cardRef: CardRef, players: SelectedPlayer[], due: Date): FollowUpSlide {\r\n        return {\r\n            due: due,\r\n            slideType: this.slideType,\r\n            selectedCard: cardRef,\r\n            param: { definedPlayers: players },\r\n        };\r\n    }\r\n\r\n    protected selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return selectText(selection, selectedCard, this.translator);\r\n    }\r\n\r\n    protected formatText(\r\n        text: string,\r\n        card: TCard,\r\n        definedPlayers: SelectedPlayer[] | null,\r\n        selection: SelectionAlgorithm,\r\n    ): { formatted: string; players: SelectedPlayer[] } {\r\n        return formatText(text, card, definedPlayers, selection, this.translator);\r\n    }\r\n\r\n    selectFollowUpText(\r\n        selection: SelectionAlgorithm,\r\n        selectedCard: TextCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const lang = this.translator.languageCode;\r\n\r\n        const followUps = selectedCard.followUp.filter(x =>\r\n            _.some(x.translations, y => y.lang.toLowerCase() === lang),\r\n        );\r\n        if (followUps.length === 0) {\r\n            throw new Error(\"No follow ups found\");\r\n        }\r\n\r\n        let players: SelectedPlayer[] | undefined;\r\n        if (\"definedPlayers\" in param) {\r\n            players = param.definedPlayers;\r\n        } else {\r\n            players = undefined;\r\n        }\r\n\r\n        const content = selection.selectRandomWeighted(followUps, x => x.weight)!;\r\n        const text = content.translations.find(x => x.lang === lang)!.content;\r\n        return { text, players };\r\n    }\r\n}\r\n\r\nexport function formatText<TCard extends TextCard>(\r\n    text: string,\r\n    card: TCard,\r\n    definedPlayers: SelectedPlayer[] | null,\r\n    selection: SelectionAlgorithm,\r\n    translator: Translator,\r\n): { formatted: string; players: SelectedPlayer[] } {\r\n    const fragments = new DefaultTextDecoder().decode(text);\r\n    const playerRequirements = TextFormatter.getRequiredPlayers(fragments, card.players);\r\n\r\n    const players = gameEngine.selectPlayers(\r\n        selection,\r\n        playerRequirements,\r\n        definedPlayers || [],\r\n        card.tags,\r\n    );\r\n\r\n    const requiredSips = TextFormatter.getRequiredSips(fragments);\r\n\r\n    const indexedPlayers: { [index: number]: PlayerInfo } = {};\r\n    for (const player of players) {\r\n        indexedPlayers[player.index] = player.player;\r\n    }\r\n\r\n    const sips: { [index: number]: number } = {};\r\n    for (const sipInfo of requiredSips) {\r\n        sips[sipInfo.sipsIndex] = selection.getSips(sipInfo.minSips);\r\n    }\r\n\r\n    const socialMediaPlatform = store.getState().settings.socialMediaPlatform;\r\n\r\n    const formatted = TextFormatter.format(\r\n        fragments,\r\n        indexedPlayers,\r\n        sips,\r\n        socialMediaPlatform,\r\n        x => translator.translate(`game.textFormatter.${x}`),\r\n        selection,\r\n        { boldPlayerNames: true, boldSips: true },\r\n    );\r\n\r\n    return { formatted: formatted, players };\r\n}\r\n\r\nexport function selectText(\r\n    selection: SelectionAlgorithm,\r\n    selectedCard: TextCard,\r\n    translator: Translator,\r\n): string {\r\n    const lang = translator.languageCode;\r\n\r\n    const viableContents = selectedCard.content.filter(x =>\r\n        _.some(x.translations, y => y.lang.toLocaleLowerCase() === lang),\r\n    );\r\n    const content = selection.selectRandomWeighted(viableContents, x => x.weight)!;\r\n    return content.translations.find(x => x.lang === lang)!.content;\r\n}\r\n","import { SlidePresenter } from \"./slide-presenter\";\r\nimport { Card } from \"@core/cards/card\";\r\nimport * as gameEngine from \"../../game-engine\";\r\nimport { ReactNode } from \"react\";\r\nimport * as actions from \"../../actions\";\r\nimport { ActionType } from \"typesafe-actions\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport abstract class CardPresenter<TCard extends Card> implements SlidePresenter {\r\n    abstract backgroundColor: string;\r\n    requiredCards: string[];\r\n\r\n    constructor(protected cardType: string, public slideType: string) {\r\n        this.requiredCards = [cardType];\r\n    }\r\n\r\n    initialize(): ActionType<any>[] {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm();\r\n        const cardRef = selection.selectCard(this.cardType);\r\n\r\n        return [actions.applyCard(cardRef), ...this.initializeCard(cardRef.card as TCard, cardRef)];\r\n    }\r\n\r\n    initializeFollowUp(card: CardRef | null, param: any): ActionType<any>[] {\r\n        return this.initializeFollowUpCard(card!.card as TCard, param, card!);\r\n    }\r\n\r\n    abstract render(): ReactNode;\r\n    protected abstract initializeCard(card: TCard, cardRef: CardRef): ActionType<any>[];\r\n    protected abstract initializeFollowUpCard(card: TCard, param: any, cardRef: CardRef): ActionType<any>[];\r\n}\r\n","export default {\r\n    down: \"#c23616\", //pomegrenate (red)\r\n    drink: \"#2470A3\", //belize hole (blue)\r\n    fact: \"#D5880B\", //orange\r\n    groupGame: \"#664EDF\", //green sea\r\n    neverEver: \"#C75000\", //pumpkin\r\n    noIdeaLoses: \"#192a56\", //pico void (dark blue)\r\n    truthOrDare: \"#2c3e50\", //Midnight blue\r\n    virus: \"##219150\",\r\n    wouldYouRather: \"#273c75\",\r\n    task: \"##667293\",\r\n};","import { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { PlayerSelectionInsights } from \"@core/selection/insights\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { Button, createStyles, Paper, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { compose } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport * as gameEngine from \"../game-engine\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { SlidePresenter } from \"./base/slide-presenter\";\r\nimport { formatText, selectText } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TruthOrDareSlideState,\r\n    players: state.play.players,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: actions.requestSlideAsync.request,\r\n    setState: actions.setSlideState,\r\n    applyCard: actions.applyCard,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            ...baseStyles.rootStyle(),\r\n            cursor: \"default\",\r\n        },\r\n        clickableRoot: {\r\n            ...baseStyles.rootStyle(),\r\n        },\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            marginBottom: 15,\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                fontSize: \"1.5em\",\r\n            },\r\n        },\r\n        spaceHeader: {\r\n            visibility: \"hidden\",\r\n            marginTop: 15,\r\n        },\r\n        questionPaper: {\r\n            padding: theme.spacing.unit,\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                padding: theme.spacing.unit * 2,\r\n                width: theme.spacing.unit * 50,\r\n            },\r\n        },\r\n        questionButtonsContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            marginTop: theme.spacing.unit,\r\n        },\r\n        refuseMessage: {\r\n            opacity: 0.8,\r\n            marginTop: 10,\r\n        },\r\n    });\r\n\r\ntype MappedActions = typeof dispatchProps;\r\n\r\ntype Props = MappedActions &\r\n    ReturnType<typeof mapStateToProps> &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction QuestionComponent(props: Props) {\r\n    const { state, players, nextSlide, classes } = props;\r\n    const player = players.find(x => x.id === state.selectedPlayer);\r\n    if (player === undefined) {\r\n        nextSlide(toTranslator(props));\r\n        return <div />;\r\n    }\r\n\r\n    const select = (decision: TruthOrDare) =>\r\n        new TruthOrDareSlide(toTranslator(props)).select(decision, props, player);\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"scale(1, 1)\",\r\n        from: { opacity: 0, transform: \"scale(2.5, 2.5)\" },\r\n    });\r\n\r\n    return (\r\n        <animated.div style={springProps}>\r\n            <Paper className={classes.questionPaper}>\r\n                <Typography style={{fontSize: 17, fontWeight: 500}}>\r\n                    <Translate\r\n                        id=\"slides.truthordare.playerTruthordare\"\r\n                        data={{ name: player.name }}\r\n                    />\r\n                </Typography>\r\n                <div className={classes.questionButtonsContainer}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: 15 }}\r\n                        onClick={() => select(\"Truth\")}\r\n                    >\r\n                        <Translate id=\"slides.truthordare.truth\" />\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => select(\"Dare\")}>\r\n                        <Translate id=\"slides.truthordare.dare\" />\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        </animated.div>\r\n    );\r\n}\r\n\r\nfunction DareComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h5\" color=\"inherit\">\r\n            <Translate id=\"slides.truthordare.truth\" /> <Translate id=\"slides.truthordare.or\" />{\" \"}\r\n            <b>\r\n                <Translate id=\"slides.truthordare.dare\" />\r\n            </b>\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={cardMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseDare\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\" color=\"inherit\">\r\n            <b>\r\n                <Translate id=\"slides.truthordare.truth\" />\r\n            </b>{\" \"}\r\n            <Translate id=\"slides.truthordare.or\" /> <Translate id=\"slides.truthordare.dare\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.clickableRoot} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent!} options={cardMarkdownOptions} />\r\n                <Typography className={classes.refuseMessage} color=\"inherit\">\r\n                    <Translate id=\"slides.truthordare.refuseTruth\" />\r\n                </Typography>\r\n                <div className={classes.spaceHeader}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TruthOrDareComponent(props: Props) {\r\n    const { classes, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    if (state.isDeciding) {\r\n        return <div className={classes.root}>{QuestionComponent(props)}</div>;\r\n    }\r\n\r\n    if (state.decision === \"Dare\") {\r\n        return DareComponent(props);\r\n    } else {\r\n        return TruthComponent(props);\r\n    }\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TruthOrDareComponent) as React.ComponentType;\r\n\r\ntype TruthOrDare = \"Truth\" | \"Dare\";\r\n\r\ninterface TruthOrDareSlideState {\r\n    selectedPlayer: string;\r\n    isDeciding: boolean;\r\n    decision?: TruthOrDare;\r\n    markdownContent?: string;\r\n}\r\n\r\nexport class TruthOrDareSlide implements SlidePresenter {\r\n    backgroundColor = colors.truthOrDare;\r\n\r\n    constructor(private translator: Translator) {}\r\n\r\n    public slideType = \"TruthOrDareSlide\";\r\n    public requiredCards = [\"TaskCard\", \"QuestionCard\"];\r\n\r\n    public select(decision: TruthOrDare, actions: MappedActions, player: PlayerInfo) {\r\n        const selection = gameEngine.getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const cardType = decision === \"Dare\" ? \"TaskCard\" : \"QuestionCard\";\r\n        const cardRef = selection.selectCard(cardType);\r\n        const card = cardRef.card as TextCard;\r\n\r\n        const selectedText = selectText(selection, card, this.translator);\r\n        const text = `#### ${this.translator.translate(\r\n            \"slides.truthordare.instruction\",\r\n        )}\\n${selectedText}`;\r\n\r\n        const { formatted } = formatText(\r\n            text,\r\n            card,\r\n            [{ index: 99, player }],\r\n            selection,\r\n            this.translator,\r\n        );\r\n\r\n        actions.applyCard(cardRef);\r\n\r\n        const state: TruthOrDareSlideState = {\r\n            isDeciding: false,\r\n            selectedPlayer: player.id,\r\n            markdownContent: formatted,\r\n            decision,\r\n        };\r\n        actions.setState({ state, insights: selection.insights.playerSelection });\r\n    }\r\n\r\n    initialize(): RootAction[] {\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const player = gameEngine.selectPlayers(\r\n            selection,\r\n            [new PlayerSetting(1, \"None\")],\r\n            [],\r\n            [],\r\n        )[0].player;\r\n\r\n        return [\r\n            this.setState(\r\n                { isDeciding: true, selectedPlayer: player.id },\r\n                selection.insights.playerSelection,\r\n            ),\r\n        ];\r\n    }\r\n\r\n    private setState(\r\n        state: TruthOrDareSlideState,\r\n        insights: PlayerSelectionInsights | null = null,\r\n    ): RootAction {\r\n        return actions.setSlideState({ state, insights });\r\n    }\r\n\r\n    initializeFollowUp(): RootAction[] {\r\n        throw new Error(\"Method not supported.\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spring, config } from \"react-spring/renderprops\";\r\nimport { compose } from \"redux\";\r\nimport { DownCard } from \"src/impl/cards/down-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DownSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 15,\r\n        },\r\n        hidden: baseStyles.hidden()\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DownSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.down.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Spring\r\n                    config={config.wobbly}\r\n                    from={{ transform: \"translate(-100px, 0px)\" }}\r\n                    to={{ transform: \"translate(0px, 0px)\" }}\r\n                >\r\n                    {props => (\r\n                        <div style={props as any}>\r\n                            {header}\r\n                            <Markdown\r\n                                children={state.markdownContent}\r\n                                options={cardMarkdownOptions}\r\n                            />\r\n                            <div className={classes.hidden}>{header}</div>\r\n                        </div>\r\n                    )}\r\n                </Spring>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DownSlideComponent) as React.ComponentType;\r\n\r\ninterface DownSlideState extends TextSlideState {}\r\nexport class DownSlide extends TextSlidePresenter<DownSlideState, DownCard> {\r\n    backgroundColor = colors.down;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DownCard\", \"DownSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DownSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { CardRef } from \"@core/cards/card-ref\";\r\nimport { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootAction, RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { FactCard } from \"src/impl/cards/fact-card\";\r\nimport * as actions from \"../actions\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as FactSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction FactSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h4\" color=\"inherit\">\r\n            <Translate id={`slides.fact.title${state.isFollowUp ? (state.isTrue ? \".true\" : \".false\") : \"\"}`} />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface FactSlideFollowUpParam {\r\n    mode: FactSlideMode;\r\n    players: SelectedPlayer[];\r\n    isTrue: boolean;\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize\r\n)(FactSlideComponent) as React.ComponentType;\r\n\r\ntype FactSlideMode = \"singleplayer\" | \"multiplayer\";\r\nconst availableFactSlideModes: FactSlideMode[] = [\"singleplayer\", \"multiplayer\"];\r\n\r\ninterface FactSlideState extends TextSlideState {\r\n    isFollowUp: boolean;\r\n    mode: FactSlideMode;\r\n    isTrue: boolean;\r\n}\r\n\r\nexport class FactSlide extends TextSlidePresenter<FactSlideState, FactCard> {\r\n    private selectedMode: FactSlideMode;\r\n    private players?: SelectedPlayer[];\r\n    backgroundColor = colors.fact;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"FactCard\", \"FactSlide\");\r\n\r\n        this.selectedMode =\r\n            availableFactSlideModes[Math.floor(availableFactSlideModes.length * Math.random())];\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        const cardText = super.selectText(selection, selectedCard);\r\n        const instruction = this.translator.translate(`slides.fact.${this.selectedMode}`);\r\n\r\n        return `#### ${instruction}\\n${cardText}`;\r\n    }\r\n\r\n    selectFollowUpText(\r\n        _selection: SelectionAlgorithm,\r\n        selectedCard: FactCard,\r\n        param: any,\r\n    ): { text: string; players?: SelectedPlayer[] } {\r\n        const { mode, players } = param as FactSlideFollowUpParam;\r\n        const { isTrueFact } = selectedCard;\r\n\r\n        const text = this.translator.translate(`slides.fact.${mode}.${isTrueFact}`);\r\n        return { text, players };\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        card: FactCard,\r\n        players: SelectedPlayer[],\r\n    ): FactSlideState {\r\n        this.players = players;\r\n\r\n        return {\r\n            isFollowUp: false,\r\n            markdownContent: markdownContent,\r\n            mode: this.selectedMode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string, card: FactCard,  param: any): FactSlideState {\r\n        const { mode } = param as FactSlideFollowUpParam;\r\n        return {\r\n            isFollowUp: true,\r\n            markdownContent: markdownContent,\r\n            mode,\r\n            isTrue: card.isTrueFact,\r\n        };\r\n    }\r\n\r\n    protected initializeCard(card: FactCard, cardRef: CardRef): RootAction[] {\r\n        return [...super.initializeCard(card, cardRef), actions.enqueueFollowUp({\r\n            due: new Date(),\r\n            selectedCard: cardRef,\r\n            slideType: \"FactSlide\",\r\n            param: {\r\n                mode: this.selectedMode,\r\n                players: this.players,\r\n            } as FactSlideFollowUpParam,\r\n        })];\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { compose } from \"redux\";\r\nimport { NeverEverCard } from \"src/impl/cards/never-ever-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as State,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: baseStyles.smallHeaderStyle(theme),\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NeverEverComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h6\" color=\"inherit\">\r\n            <Translate id=\"slides.neverever.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    const springProps = useSpring({\r\n        opacity: 1,\r\n        transform: \"rotate(0deg)\",\r\n        from: { opacity: 0, transform: \"rotate(20deg)\" },\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <animated.div style={springProps} className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography style={{ marginTop: 20 }} color=\"inherit\" variant=\"subtitle1\">\r\n                        <Translate id=\"slides.neverever.instruction\" data={{ sips: state.sips }} />\r\n                    </Typography>\r\n                </div>\r\n            </animated.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NeverEverComponent) as React.ComponentType;\r\n\r\ninterface State extends TextSlideState {\r\n    sips: number;\r\n}\r\n\r\nexport class NeverEverSlide extends TextSlidePresenter<State, NeverEverCard> {\r\n    backgroundColor = colors.neverEver;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NeverEverCard\", \"NeverEverSlide\");\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: NeverEverCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n        };\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): State {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer, Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WouldYouRatherCard } from \"src/impl/cards/would-you-rather-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as WouldYouRatherSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: baseStyles.smallHeaderStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction WouldYouRatherSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h6\" color=\"inherit\">\r\n            <Translate id=\"slides.wouldyourather.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Typography style={{ marginTop: 20 }} color=\"inherit\" variant=\"subtitle1\">\r\n                        <Translate\r\n                            id=\"slides.wouldyourather.instruction\"\r\n                            data={{ sips: state.sips }}\r\n                        />\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(WouldYouRatherSlideComponent) as React.ComponentType;\r\n\r\ninterface WouldYouRatherSlideState extends TextSlideState {\r\n    sips: number;\r\n}\r\n\r\nexport class WouldYouRatherSlide extends TextSlidePresenter<\r\n    WouldYouRatherSlideState,\r\n    WouldYouRatherCard\r\n> {\r\n    backgroundColor = colors.wouldYouRather;\r\n    constructor(translator: Translator) {\r\n        super(translator, \"WyrCard\", \"WouldYouRatherSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        return \"...\" + super.selectText(selection, selectedCard);\r\n    }\r\n\r\n    protected initializeState(\r\n        markdownContent: string,\r\n        _card: WouldYouRatherCard,\r\n        _players: SelectedPlayer[],\r\n        selection: SelectionAlgorithm,\r\n    ): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: selection.getSips(2), // at least two sips so the text can be plural\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): WouldYouRatherSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n            sips: 0,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { DrinkCard } from \"src/impl/cards/drink-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as DrinkSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction DrinkSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(DrinkSlideComponent) as React.ComponentType;\r\n\r\ninterface DrinkSlideState extends TextSlideState {}\r\nexport class DrinkSlide extends TextSlidePresenter<DrinkSlideState, DrinkCard> {\r\n    backgroundColor = colors.drink;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"DrinkCard\", \"DrinkSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): DrinkSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { VirusCard } from \"src/impl/cards/virus-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as VirusSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction VirusSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.virus.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(VirusSlideComponent) as React.ComponentType;\r\n\r\ninterface VirusSlideState extends TextSlideState {}\r\nexport class VirusSlide extends TextSlidePresenter<VirusSlideState, VirusCard> {\r\n    backgroundColor = colors.virus;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"VirusCard\", \"VirusSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): VirusSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { NoIdeaLosesCard } from \"src/impl/cards/no-idea-loses-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as NoIdeaLosesSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction NoIdeaLosesSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(NoIdeaLosesSlideComponent) as React.ComponentType;\r\n\r\ninterface NoIdeaLosesSlideState extends TextSlideState {}\r\nexport class NoIdeaLosesSlide extends TextSlidePresenter<NoIdeaLosesSlideState, NoIdeaLosesCard> {\r\n    backgroundColor = colors.noIdeaLoses;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"NoIdeaLosesCard\", \"NoIdeaLosesSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): NoIdeaLosesSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { GroupGameCard } from \"src/impl/cards/group-game-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as GroupGameSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction GroupGameSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.groupgame.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(GroupGameSlideComponent) as React.ComponentType;\r\n\r\ninterface GroupGameSlideState extends TextSlideState {}\r\nexport class GroupGameSlide extends TextSlidePresenter<GroupGameSlideState, GroupGameCard> {\r\n    backgroundColor = colors.groupGame;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"GroupGameCard\", \"GroupGameSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): GroupGameSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { TextCard } from \"@core/cards/text-card\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { createStyles, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { cardMarkdownOptions } from \"@utils/material-markdown\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { Translator } from \"GameModels\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport * as React from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { TaskCard } from \"src/impl/cards/task-card\";\r\nimport { requestSlideAsync } from \"../actions\";\r\nimport { toTranslator } from \"../utils\";\r\nimport * as baseStyles from \"./base/helper\";\r\nimport { TextSlidePresenter, TextSlideState } from \"./base/text-slide-presenter\";\r\nimport colors from \"./colors\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    state: state.game.slideState as TaskSlideState,\r\n});\r\n\r\nconst dispatchProps = {\r\n    nextSlide: requestSlideAsync.request,\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: baseStyles.rootStyle(),\r\n        content: baseStyles.contentStyle(theme),\r\n        header: {\r\n            ...baseStyles.headerStyle(theme),\r\n            marginBottom: 10,\r\n        },\r\n        hidden: baseStyles.hidden(),\r\n    });\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof dispatchProps &\r\n    WithStyles<typeof styles> &\r\n    LocalizeContextProps;\r\n\r\nfunction TaskSlideComponent(props: Props) {\r\n    const { classes, nextSlide, state } = props;\r\n    if (state === null) {\r\n        return <div className={classes.root} />;\r\n    }\r\n\r\n    const header = (\r\n        <Typography className={classes.header} variant=\"h3\" color=\"inherit\">\r\n            <Translate id=\"slides.task.title\" />\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} onClick={() => nextSlide(toTranslator(props))}>\r\n            <div className={classes.content}>\r\n                {header}\r\n                <Markdown children={state.markdownContent} options={cardMarkdownOptions} />\r\n                <Typography style={{ opacity: 0.8, marginTop: 10 }} color=\"inherit\">\r\n                    <Translate id=\"slides.task.instruction\" />\r\n                </Typography>\r\n                <div className={classes.hidden}>{header}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Component = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        dispatchProps,\r\n    ),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(TaskSlideComponent) as React.ComponentType;\r\n\r\ninterface TaskSlideState extends TextSlideState {}\r\nexport class TaskSlide extends TextSlidePresenter<TaskSlideState, TaskCard> {\r\n    backgroundColor = colors.task;\r\n\r\n    constructor(translator: Translator) {\r\n        super(translator, \"TaskCard\", \"TaskSlide\");\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        return <Component />;\r\n    }\r\n\r\n    selectText(selection: SelectionAlgorithm, selectedCard: TextCard): string {\r\n        let task = super.selectText(selection, selectedCard);\r\n        if (/[A-Z-a-z]$/g.test(task)) {\r\n            task = task + \".\";\r\n        }\r\n\r\n        return \"[Player99]: \" + task;\r\n    }\r\n\r\n    protected initializeState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n\r\n    protected initializeFollowUpState(markdownContent: string): TaskSlideState {\r\n        return {\r\n            markdownContent: markdownContent,\r\n        };\r\n    }\r\n}\r\n","import { TruthOrDareSlide } from './slides/TruthOrDareSlide';\r\nimport { DownSlide } from \"./slides/DownSlide\";\r\nimport { SlidePresenter } from \"./slides/base/slide-presenter\";\r\nimport { FactSlide } from \"./slides/FactSlide\";\r\nimport { NeverEverSlide } from \"./slides/NeverEverSlide\";\r\nimport { Translator } from \"GameModels\";\r\nimport { WouldYouRatherSlide } from './slides/WouldYouRatherSlide';\r\nimport { DrinkSlide } from './slides/DrinkSlide';\r\nimport { VirusSlide } from './slides/VirusSlide';\r\nimport { NoIdeaLosesSlide } from './slides/NoIdeaLosesSlide';\r\nimport { GroupGameSlide } from './slides/GroupGameSlide';\r\nimport { TaskSlide } from './slides/TaskSlide';\r\nimport { OpeningSlide } from './slides/OpeningSlide';\r\n\r\nexport type SlideComponents = { [type: string]: new(translator: Translator) => SlidePresenter };\r\n\r\nexport const slideComponents: SlideComponents = {\r\n    DownSlide,\r\n    FactSlide,\r\n    NeverEverSlide,\r\n    TruthOrDareSlide,\r\n    WouldYouRatherSlide,\r\n    DrinkSlide,\r\n    VirusSlide,\r\n    NoIdeaLosesSlide,\r\n    GroupGameSlide,\r\n    TaskSlide,\r\n    OpeningSlide,\r\n};\r\n","import { MelinaAlgorithm } from \"./../../core/selection/melina-algorithm\";\r\nimport { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { Epic } from \"redux-observable\";\r\nimport { filter, mergeMap, tap, ignoreElements } from \"rxjs/operators\";\r\nimport { isActionOf } from \"typesafe-actions\";\r\nimport _ from \"lodash\";\r\nimport store from \"../../store/index\";\r\nimport * as actions from \"./actions\";\r\nimport { getRandomSelectionAlgorithm } from \"./game-engine\";\r\nimport { slideComponents } from \"./component-registry\";\r\nimport { of } from \"rxjs\";\r\nimport { Translator } from \"GameModels\";\r\nimport { getSlideRegistrations } from \"./slides-processor\";\r\n\r\nexport const nextSlideEpic: Epic<RootAction, RootAction, RootState, Services> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.requestSlideAsync.request)),\r\n        mergeMap(x => of(...nextSlide(x.payload))),\r\n    );\r\n\r\nexport const redirectOnGameStartedEpic: Epic<\r\n    RootAction,\r\n    RootAction,\r\n    RootState,\r\n    Services\r\n> = action$ =>\r\n    action$.pipe(\r\n        filter(isActionOf(actions.startGame)),\r\n        tap(action => action.payload.push(\"/play/game\")),\r\n        ignoreElements(),\r\n    );\r\n\r\nfunction nextSlide(translator: Translator): RootAction[] {\r\n    const now = new Date();\r\n    let state = store.getState();\r\n\r\n    const dueFollowUps = state.game.followUp.filter(x => x.due < now);\r\n    if (dueFollowUps.length > 0) {\r\n        const followUp = _.sortBy(dueFollowUps, x => x.due.getSeconds())[0];\r\n\r\n        const factory = slideComponents[followUp.slideType];\r\n        const slideInitalizer = new factory(translator);\r\n        const slideActions = slideInitalizer.initializeFollowUp(\r\n            followUp.selectedCard,\r\n            followUp.param,\r\n        );\r\n\r\n        return [actions.activateFollowUp(followUp), ...slideActions];\r\n    }\r\n\r\n    let selection = getRandomSelectionAlgorithm(state);\r\n    const slides = getSlideRegistrations(slideComponents);\r\n\r\n    const { willPower, memory } = selection.recomputeWillPower(state.game.willPowerMemory);\r\n    const willPowerActions = new Array<RootAction>();\r\n\r\n    if (willPower !== state.game.currentWillPower) {\r\n        if (!state.game.isWillPowerLocked) {\r\n            willPowerActions.push(actions.setWillPower(willPower));\r\n            state = { ...state, game: { ...state.game, currentWillPower: willPower } };\r\n            selection = getRandomSelectionAlgorithm(state);\r\n        }\r\n    }\r\n\r\n    if (memory.length > 0) {\r\n        willPowerActions.push(actions.addWillPowerMemory(memory));\r\n    }\r\n\r\n    const slideType = selection.selectNextSlide(slides);\r\n    if (slideType === undefined) {\r\n        // TODO: end game\r\n        throw new Error(\"Game Finished\");\r\n    }\r\n\r\n    const factory = slideComponents[slideType];\r\n    const slideInitalizer = new factory(translator);\r\n    const slideActions = slideInitalizer.initialize();\r\n\r\n    return [\r\n        actions.requestSlideAsync.success({\r\n            slide: slideType,\r\n            insights: (selection as MelinaAlgorithm).insights.slideWeights!,\r\n        }),\r\n        ...slideActions,\r\n        ...willPowerActions\r\n    ];\r\n}\r\n","import { SlideComponents } from \"./component-registry\";\r\nimport { SlideRegistration } from \"@core/slide-registration\";\r\n\r\nexport function getSlideRegistrations(components: SlideComponents): SlideRegistration[] {\r\n    const result = new Array<SlideRegistration>();\r\n\r\n    for (const component in components) {\r\n        if (components.hasOwnProperty(component)) {\r\n            const element = components[component];\r\n            const slide = new element({ languageCode: \"en\", translate: () => \"\" });\r\n            result.push({ slideType: slide.slideType, requestedCards: slide.requiredCards });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { combineEpics } from \"redux-observable\";\r\nimport * as settingsEpics from \"../features/settings/epics\";\r\nimport * as gameEpics from \"../features/game/epics\";\r\n\r\nexport default combineEpics(...Object.values(settingsEpics), ...Object.values(gameEpics));\r\n","import { compose } from \"redux\";\r\n\r\n// @ts-ignore\r\nexport const composeEnhancers =\r\n    (process.env.NODE_ENV === \"development\" &&\r\n        window &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n","import { PlayerSelectionInsights, SlideSelectionInsights } from \"./../../core/selection/insights\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { FollowUpSlide } from \"GameModels\";\r\nimport cuid from \"cuid\";\r\nimport { CardRef } from \"@core/cards/card-ref\";\r\n\r\nexport type GameState = Readonly<{\r\n    isStarted: boolean;\r\n\r\n    selectedSlide: string | null;\r\n    selectedCard: CardRef | null;\r\n\r\n    slideState: any | null;\r\n\r\n    currentWillPower: number;\r\n    isWillPowerLocked: boolean;\r\n    willPowerMemory: string[];\r\n\r\n    playerInsights: PlayerSelectionInsights | null;\r\n    slideInsights: SlideSelectionInsights | null;\r\n\r\n    startTime: Date | null;\r\n\r\n    cardsHistory: CardRef[];\r\n    slidesHistory: string[];\r\n    followUp: FollowUpSlide[];\r\n    activeFollowUp: FollowUpSlide | null;\r\n    currentSlideStatus: string;\r\n}>;\r\n\r\nexport default combineReducers<GameState, RootAction>({\r\n    cardsHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return [action.payload, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slidesHistory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return [action.payload.slide, ...state];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    isStarted: (state = false, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.startGame):\r\n                return true;\r\n            case getType(actions.cancelGame):\r\n                return false;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedCard: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.applyCard):\r\n                return action.payload;\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.selectedCard;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    selectedSlide: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.slide;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload.slideType;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideState: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n            case getType(actions.activateFollowUp):\r\n            case getType(actions.startGame):\r\n                return null;\r\n            case getType(actions.setSlideState):\r\n                return action.payload.state;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    followUp: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.enqueueFollowUp):\r\n                return [...state, action.payload];\r\n            case getType(actions.activateFollowUp):\r\n                return state.filter(x => x.due !== action.payload.due);\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    activeFollowUp: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return null;\r\n            case getType(actions.activateFollowUp):\r\n                return action.payload;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    startTime: (state = null, action) => {\r\n        if (action.type === getType(actions.startGame)) {\r\n            return new Date();\r\n        }\r\n        return state;\r\n    },\r\n    isWillPowerLocked: (state = false, action) => {\r\n        if (action.type === getType(actions.setWillPowerLocked)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    currentWillPower: (state = 1, action) => {\r\n        if (action.type === getType(actions.setWillPower)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    willPowerMemory: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addWillPowerMemory):\r\n                return [...state, ...action.payload];\r\n            case getType(actions.startGame):\r\n                return [];\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    playerInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideState):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    slideInsights: (state = null, action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return action.payload.insights;\r\n            case getType(actions.startGame):\r\n                return null;\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    currentSlideStatus: (state = \"\", action) => {\r\n        switch (action.type) {\r\n            case getType(actions.requestSlideAsync.success):\r\n                return cuid();\r\n            case getType(actions.startGame):\r\n                return \"\";\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { Weighted } from \"@core/weighted\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport { SourceInfo } from \"SettingsModels\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getType } from \"typesafe-actions\";\r\nimport * as actions from \"./actions\";\r\nimport { slideWeights } from \"../../preferences\";\r\nimport _ from \"lodash\";\r\n\r\nexport type SettingsState = Readonly<{\r\n    preferOppositeGenders: boolean;\r\n    slides: Array<Weighted<string>>;\r\n    socialMediaPlatform: string;\r\n    sources: SourceInfo[];\r\n    tags: Array<Weighted<string>>;\r\n}>;\r\n\r\nexport default combineReducers<SettingsState, RootAction>({\r\n    sources: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addSource):\r\n                return [...state, action.payload];\r\n            case getType(actions.removeSource):\r\n                return state.filter(x => x.url !== action.payload);\r\n            case getType(actions.loadSourceAsync.request):\r\n                return state.map(item =>\r\n                    item.url === action.payload ? { ...item, isLoading: true } : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.success):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? {\r\n                              ...item,\r\n                              cards: action.payload.cards,\r\n                              errorMessage: null,\r\n                              isLoading: false,\r\n                              tags: _.uniq(_.flatten(action.payload.cards.map(x => x.tags)).map(x => (x as string).toLowerCase()))\r\n                          }\r\n                        : item,\r\n                );\r\n            case getType(actions.loadSourceAsync.failure):\r\n                return state.map(item =>\r\n                    item.url === action.payload.url\r\n                        ? { ...item, isLoading: false, errorMessage: action.payload.message }\r\n                        : item,\r\n                );\r\n            case getType(actions.setSourceWeight):\r\n                return state.map(item =>\r\n                    item.url === action.payload.value\r\n                        ? { ...item, weight: action.payload.weight }\r\n                        : item,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    preferOppositeGenders: (state = true, action) => {\r\n        if (action.type === getType(actions.setPreferOppositeGenders)) {\r\n            return action.payload;\r\n        }\r\n        return state;\r\n    },\r\n    slides: (state = GetSlideWeightedArray(), action) => {\r\n        switch (action.type) {\r\n            case getType(actions.setSlideWeight):\r\n                return state.map(x => (x.value === action.payload.value ? action.payload : x));\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    socialMediaPlatform: (state = \"Snapchat\", action) => {\r\n        if (action.type === getType(actions.setSocialMediaPlatform)) {\r\n            return action.payload;\r\n        }\r\n\r\n        return state;\r\n    },\r\n    tags: (state = [], action) => {\r\n        if (action.type === getType(actions.setTagWeight)) {\r\n            const value = action.payload.value.toLowerCase();\r\n            const existingTag = state.find(x => x.value === value);\r\n            if (existingTag !== undefined) {\r\n                return state.map(x => x.value === value ? {value, weight: action.payload.weight} : x);\r\n            } else {\r\n                return [...state, action.payload];\r\n            }\r\n        }\r\n\r\n        return state;\r\n    },\r\n});\r\n\r\nfunction GetSlideWeightedArray() {\r\n    const weightsList: Weighted<string>[] = [];\r\n    for (const key in slideWeights) {\r\n        if (slideWeights.hasOwnProperty(key)) {\r\n            const element = slideWeights[key];\r\n            weightsList.push({ value: key, weight: element });\r\n        }\r\n    }\r\n\r\n    return weightsList;\r\n}\r\n","import { PlayerArrangement } from \"@core/player-arrangement\";\r\nimport { PlayerInfo } from \"@core/player-info\";\r\nimport { combineReducers } from \"redux\";\r\nimport { RootAction } from \"DrinctetTypes\";\r\nimport * as actions from \"./actions\";\r\nimport { getType } from \"typesafe-actions\";\r\n\r\nexport type PlayState = Readonly<{\r\n    players: PlayerInfo[];\r\n    arrangements: PlayerArrangement[];\r\n}>;\r\n\r\nexport default combineReducers<PlayState, RootAction>({\r\n    players: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayer):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayer):\r\n                return state.filter(x => x.id !== action.payload);\r\n            case getType(actions.updatePlayer):\r\n                return state.map(player =>\r\n                    player.id === action.payload.id ? action.payload : player,\r\n                );\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    arrangements: (state = [], action) => {\r\n        switch (action.type) {\r\n            case getType(actions.addPlayerArrangment):\r\n                return [...state, action.payload];\r\n            case getType(actions.removePlayerArrangment):\r\n                return state.filter(x => x.p1 !== action.payload);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport gameReducer from \"../features/game/reducer\";\r\nimport settingsReducer from \"../features/settings/reducer\";\r\nimport playReducer from \"../features/play/reducer\";\r\nimport { localizeReducer } from \"react-localize-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    play: playReducer,\r\n    game: gameReducer,\r\n    settings: settingsReducer,\r\n    localize: localizeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { RootAction, RootState, Services } from \"DrinctetTypes\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport services from \"../services\";\r\nimport rootEpic from \"./root-epic\";\r\nimport { composeEnhancers } from \"./utils\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport { loadState, persistState } from \"./storage\";\r\n\r\nexport const epicMiddleware = createEpicMiddleware<RootAction, RootAction, RootState, Services>({\r\n    dependencies: services,\r\n});\r\n\r\n// configure middlewares\r\nconst middlewares = [epicMiddleware];\r\n\r\n// compose enchancers\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n// rehydrate state on app start\r\nconst initialState = loadState();\r\n\r\n// create store\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\npersistState(store);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\n// export store singleton instance\r\nexport default store;\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport { SettingsState } from \"../features/settings/reducer\";\r\n\r\nexport function persistState(store: any) {\r\n    store.subscribe(() => {\r\n        const state: RootState = store.getState();\r\n        const toStore: SettingsState = {\r\n            ...state.settings,\r\n            sources: state.settings.sources.map(x => ({\r\n                url: x.url,\r\n                weight: x.weight,\r\n                isLoading: false,\r\n                cards: null,\r\n                errorMessage: null,\r\n                tags: []\r\n            })),\r\n        };\r\n        localStorage.setItem(\"settingsState\", JSON.stringify(toStore));\r\n    });\r\n}\r\n\r\nexport function loadState(): Partial<RootState> {\r\n    const settings = localStorage.getItem(\"settingsState\");\r\n    const state = settings !== null ? JSON.parse(settings) : {};\r\n    return { settings: state };\r\n}\r\n","import { CardDeck } from \"@core/card-deck\";\r\nimport { PlayerSetting } from \"@core/cards/player-setting\";\r\nimport { GameStatus } from \"@core/game-status\";\r\nimport { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport { SelectionAlgorithm } from \"@core/selection/selection-algorithm\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport { SelectedPlayer } from \"GameModels\";\r\nimport seedrandom from \"seedrandom\";\r\nimport store from \"../../store\";\r\n\r\nexport function selectPlayers(\r\n    selection: SelectionAlgorithm,\r\n    players: PlayerSetting[],\r\n    predefined: SelectedPlayer[],\r\n    tags: string[],\r\n): SelectedPlayer[] {\r\n    const result = selection.selectPlayers(\r\n        players.map(x => x.gender),\r\n        players.map(x => {\r\n            const p = predefined.find(y => y.index === x.playerIndex);\r\n            if (p === undefined) {\r\n                return null;\r\n            }\r\n\r\n            return p.player;\r\n        }),\r\n        tags,\r\n    );\r\n    const selected = result.map((x, i) => ({ index: players[i].playerIndex, player: x }));\r\n\r\n    return selected;\r\n}\r\n\r\nexport function getRandomSelectionAlgorithm(state?: RootState): SelectionAlgorithm {\r\n    if (state === undefined) {\r\n        state = store.getState();\r\n    }\r\n\r\n    const random = seedrandom();\r\n    return new MelinaAlgorithm(extractGameStatus(state), random);\r\n}\r\n\r\nfunction extractGameStatus(state: RootState): GameStatus {\r\n    const currentStatus: GameStatus = {\r\n        decks: state.settings.sources\r\n            .filter(x => x.cards !== undefined)\r\n            .map(item => {\r\n                const result: CardDeck = { ...item, cards: item.cards || [] };\r\n                return result;\r\n            }),\r\n        cardsHistory: state.game.cardsHistory,\r\n        language: state.localize.languages.find(x => x.active)!.code,\r\n        players: state.play.players,\r\n        slides: state.settings.slides,\r\n        tags: state.settings.tags,\r\n        arrangements: state.play.arrangements,\r\n        preferOppositeGenders: state.settings.preferOppositeGenders,\r\n        slidesHistory: state.game.slidesHistory,\r\n        startTime: state.game.startTime!,\r\n        willPower: state.game.currentWillPower,\r\n    };\r\n\r\n    return currentStatus;\r\n}\r\n","import { MelinaAlgorithm } from \"@core/selection/melina-algorithm\";\r\nimport {\r\n    createStyles,\r\n    Typography,\r\n    withStyles,\r\n    WithStyles,\r\n    FormControl,\r\n    Select,\r\n    Input,\r\n    MenuItem,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { percentageFixedTotal } from \"@utils/statistics\";\r\nimport { toFixedEnd } from \"@utils/string-extensions\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Cell,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { compose } from \"redux\";\r\nimport { getRandomSelectionAlgorithm } from \"../game-engine\";\r\nimport { parsers } from \"../../../impl/registrations\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    currentWillPower: state.game.currentWillPower,\r\n});\r\n\r\nconst styles = createStyles({\r\n    chart: {\r\n        width: 200,\r\n        height: 300,\r\n    },\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & LocalizeContextProps;\r\ntype State = { selectedCardType: string | null };\r\n\r\nclass InsightsCards extends Component<Props, State> {\r\n    readonly state = { selectedCardType: null };\r\n\r\n    setSelectedCardType = (type: string) => {\r\n        this.setState({ selectedCardType: type === \"\" ? null : type });\r\n    };\r\n\r\n    render() {\r\n        const { translate, currentWillPower } = this.props;\r\n        const { selectedCardType } = this.state;\r\n\r\n        const cardTypes = [\"\", ...Object.keys(parsers)];\r\n\r\n        const selection = getRandomSelectionAlgorithm() as MelinaAlgorithm;\r\n        const insights = selection.getAllCardDeckStatistics(selectedCardType);\r\n\r\n        const decksStatistics = percentageFixedTotal(insights.decks, x => x.weight, 1000).map(\r\n            x => ({\r\n                value: x.part / 10,\r\n                name: x.value.value.url,\r\n            }),\r\n        );\r\n\r\n        const willPowerStatistics = percentageFixedTotal(\r\n            insights.willPower,\r\n            x => x.weight,\r\n            1000,\r\n        ).map(x => ({\r\n            value: x.part / 10,\r\n            name: x.value.value.willPower || translate(\"insights.universal\"),\r\n            info: x.value.value,\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.cardsDist\" />\r\n                </Typography>\r\n                <Grid container alignItems=\"flex-end\" spacing={16}>\r\n                    <Grid item>\r\n                        <FormControl>\r\n                            <Select\r\n                                style={{ width: 200, marginTop: 10 }}\r\n                                value={selectedCardType || \"\"}\r\n                                displayEmpty={true}\r\n                                renderValue={x => x || translate(\"insights.allCards\")}\r\n                                onChange={ev => this.setSelectedCardType(ev.target.value)}\r\n                                input={<Input />}\r\n                            >\r\n                                {cardTypes.map(x => (\r\n                                    <MenuItem key={x} value={x}>\r\n                                        {x || translate(\"insights.allCards\")}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography>{`${translate(\"insights.cards\")}: ${insights.totalCards}`}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={decksStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" tickFormatter={x => toFixedEnd(x, 18)} />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={x => x + \"%\"}\r\n                            labelFormatter={url =>\r\n                                translate(\"insights.cardDeckName\", {\r\n                                    url,\r\n                                    cards: insights.decks.find(x => x.value.url === url)!.value\r\n                                        .cards.length,\r\n                                })\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            name={translate(\"insights.part\") as string}\r\n                            dataKey=\"value\"\r\n                            fill=\"#8884d8\"\r\n                            maxBarSize={20}\r\n                        />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n                <Typography variant=\"h5\">\r\n                    <Translate id=\"insights.willPowerDist\" />\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <BarChart data={willPowerStatistics}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis tickFormatter={x => x + \"%\"} />\r\n                        <Tooltip\r\n                            formatter={(x, _, e) =>\r\n                                `${x}% (${e.payload.info.count} ${translate(\"insights.cards\")})`\r\n                            }\r\n                        />\r\n                        <Bar\r\n                            dataKey=\"value\"\r\n                            maxBarSize={20}\r\n                            name={translate(\"insights.part\") as string}\r\n                        >\r\n                            {willPowerStatistics.map((entry, index) => (\r\n                                <Cell\r\n                                    fill={\r\n                                        entry.info.willPower === currentWillPower\r\n                                            ? \"#e74c3c\"\r\n                                            : \"#8884d8\"\r\n                                    }\r\n                                    key={index}\r\n                                />\r\n                            ))}\r\n                        </Bar>\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles),\r\n    withLocalize,\r\n)(InsightsCards) as React.ComponentType;\r\n","export function toFixedEnd(s: string, length: number) {\r\n    if (length > s.length) {\r\n        return s;\r\n    }\r\n\r\n    return \"..\" + s.substring(s.length - length - 2, s.length);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InsightsCurrentSlide from \"./InsightsCurrentSlide\";\r\nimport InsightsWillPowerView from \"./InsightsWillPowerView\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport InsightsCards from \"./InsightsCards\";\r\n\r\nexport default class InsightsView extends Component {\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <InsightsWillPowerView />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 10}}>\r\n                    <InsightsCurrentSlide />\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: 20}}>\r\n                    <InsightsCards />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport {\r\n    AppBar,\r\n    Slide,\r\n    createStyles,\r\n    WithStyles,\r\n    withStyles,\r\n    Toolbar,\r\n    Button,\r\n    Typography,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { withLocalize, LocalizeContextProps, Translate } from \"react-localize-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport InsightsView from \"./InsightsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing.unit,\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction InsightsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.push(\"/play/game\")}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.insights\" />\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/play/game\")}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <InsightsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(InsightsDialog) as React.ComponentType;\r\n","import { AppBar, Tab, Tabs, Theme } from \"@material-ui/core\";\r\nimport { createStyles, withStyles, WithStyles, WithTheme } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport PlayerArrangementsDialog from \"../../play/components/PlayerArrangementsDialog\";\r\nimport ConfigurationRoute from \"../../../routes/ConfigurationRoute\";\r\nimport PlayRoute from \"../../../routes/PlayRoute\";\r\nimport SourcesRoute from \"../../../routes/SourcesRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n        },\r\n        tabContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n        },\r\n        firstChildMargins: {\r\n            marginTop: 24,\r\n            marginLeft: 24,\r\n            marginRight: 24,\r\n        },\r\n        fillRemaining: {\r\n            flexGrow: 1,\r\n            height: 0,\r\n        },\r\n    });\r\n\r\ntype Props = WithStyles<typeof styles> & WithTheme & LocalizeContextProps;\r\n\r\ninterface State {\r\n    value: number;\r\n}\r\n\r\nclass SettingsView extends React.Component<Props, State> {\r\n    readonly state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (_event: any, value: number) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleChangeIndex = (index: number) => {\r\n        this.setState({ value: index });\r\n    };\r\n\r\n    render() {\r\n        const { classes, translate } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab label={translate(\"settings.players\")} />\r\n                        <Tab label={translate(\"settings.sources\")} />\r\n                        <Tab label={translate(\"settings.configuration\")} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && <PlayRoute />}\r\n                {value === 1 && <SourcesRoute />}\r\n                {value === 2 && <ConfigurationRoute />}\r\n\r\n                <Route path=\"/play/game/settings/arrangements\" component={PlayerArrangementsDialog} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withLocalize,\r\n    withStyles(styles, { withTheme: true }),\r\n)(SettingsView) as React.ComponentType;\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    IconButton,\r\n    Slide,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport withMobileDialog, { InjectedProps } from \"@material-ui/core/withMobileDialog\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, Translate, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport SettingsView from \"./SettingsView\";\r\n\r\nfunction Transition(props: any) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = createStyles({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n    },\r\n    dialogPaper: {\r\n        minHeight: \"80vh\",\r\n    },\r\n});\r\n\r\ninterface Props\r\n    extends InjectedProps,\r\n        Partial<WithWidth>,\r\n        WithStyles<typeof styles>,\r\n        LocalizeContextProps,\r\n        RouteComponentProps {}\r\n\r\nfunction SettingsDialog({ fullScreen, classes, history }: Props) {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClose={() => history.push(\"/play/game\")}\r\n                TransitionComponent={Transition}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                classes={{\r\n                    paperScrollPaper: classes.dialogPaper,\r\n                }}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                            <Translate id=\"game.options.settings\" />\r\n                        </Typography>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={() => history.push(\"/play/game/settings/arrangements\")}\r\n                        >\r\n                            <PeopleIcon />\r\n                        </IconButton>\r\n                        <Button color=\"inherit\" onClick={() => history.goBack()}>\r\n                            <Translate id=\"close\" />\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.content}>\r\n                    <SettingsView />\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    withMobileDialog({ breakpoint: \"sm\" }),\r\n    withStyles(styles),\r\n    withLocalize,\r\n    withRouter,\r\n)(SettingsDialog) as React.ComponentType;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { slideComponents } from \"../component-registry\";\r\nimport { toTranslator } from \"../utils\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & LocalizeContextProps;\r\n\r\nfunction SlideWrapper(props: Props) {\r\n    const { selectedSlide } = props;\r\n\r\n    if (selectedSlide === null) {\r\n        return <Typography variant=\"h3\">Loading game...</Typography>;\r\n    }\r\n\r\n    const factory = slideComponents[selectedSlide];\r\n    const slideInitalizer = new factory(toTranslator(props));\r\n    const springProps = useSpring({backgroundColor: slideInitalizer.backgroundColor, height: \"100%\"});\r\n\r\n    return <animated.div style={springProps}>{slideInitalizer.render()}</animated.div>;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(SlideWrapper) as React.ComponentType;\r\n","import { RootState } from \"DrinctetTypes\";\r\nimport React, { Component } from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { connect, DispatchProp } from \"react-redux\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { OpeningSlide } from \"../slides/OpeningSlide\";\r\nimport GameOptions from \"./GameOptions\";\r\nimport InsightsDialog from \"./InsightsDialog\";\r\nimport SettingsDialog from \"./SettingsDialog\";\r\nimport SlideWrapper from \"./SlideWrapper\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    current: state.game.currentSlideStatus,\r\n    selectedSlide: state.game.selectedSlide,\r\n});\r\n\r\ntype Props = LocalizeContextProps & ReturnType<typeof mapStateToProps> & DispatchProp;\r\n\r\nclass GameComponent extends Component<Props> {\r\n    public componentDidMount() {\r\n        if (this.props.selectedSlide !== null) {\r\n            return;\r\n        }\r\n        const openingSlide = new OpeningSlide();\r\n        const slideActions = openingSlide.initialize();\r\n\r\n        this.props.dispatch(\r\n            actions.requestSlideAsync.success({\r\n                slide: openingSlide.slideType,\r\n                insights: null,\r\n            }),\r\n        );\r\n\r\n        for (const action of slideActions) {\r\n            this.props.dispatch(action);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div\r\n                style={{ width: \"100%\", height: \"100%\", position: \"relative\", overflow: \"hidden\" }}\r\n            >\r\n                <SlideWrapper />\r\n                <div style={{ top: 10, right: 10, position: \"absolute\", zIndex: 100 }}>\r\n                    <GameOptions />\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/play/game/settings\" component={SettingsDialog} />\r\n                    <Route path=\"/play/game/insights\" component={InsightsDialog} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps),\r\n    withLocalize,\r\n)(GameComponent) as React.ComponentType;\r\n","import { CircularProgress, createStyles, Fade, Paper, Theme, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { markdownOptions } from \"@utils/material-markdown\";\r\nimport Axios from \"axios\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport React from \"react\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { DrinkingGame } from \"./registrations\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    paper: {\r\n        ...theme.mixins.gutters(),\r\n        padding: theme.spacing.unit * 2,\r\n        margin: theme.spacing.unit * 2,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\ninterface Props extends RouteComponentProps, LocalizeContextProps, WithStyles<typeof styles> {\r\n    game: DrinkingGame;\r\n}\r\n\r\ninterface State {\r\n    isLoadingLang: string | null;\r\n    content: string | null;\r\n}\r\n\r\nclass DrinkingGameComponent extends React.Component<Props, State> {\r\n    readonly state: State = {\r\n        isLoadingLang: null,\r\n        content: null,\r\n    };\r\n\r\n    getLang(): string | null {\r\n        const { history, activeLanguage, game } = this.props;\r\n\r\n        const path = history.location.pathname;\r\n        if (path !== `/drinkingGames/${game.name}`) {\r\n            return null;\r\n        }\r\n\r\n        const lang = activeLanguage === undefined ? null : activeLanguage.code;\r\n\r\n        const translation =\r\n            game.translations.find(x => x.lang === lang) ||\r\n            game.translations.find(x => x.lang === \"en\") ||\r\n            game.translations[0];\r\n\r\n        return translation.lang;\r\n    }\r\n\r\n    render() {\r\n        const { content, isLoadingLang } = this.state;\r\n        const { game, classes } = this.props;\r\n\r\n        const lang = this.getLang();\r\n        if (lang === null) {\r\n            return null;\r\n        }\r\n\r\n        if (content !== null && isLoadingLang === lang) {\r\n            return (\r\n                <Paper className={classes.paper}>\r\n                    <Markdown children={content} options={markdownOptions} />\r\n                </Paper>\r\n            );\r\n        }\r\n\r\n        if (isLoadingLang !== lang) {\r\n            Axios.get(`${process.env.PUBLIC_URL}/explanations/${game.name}.${lang}.md`).then(response => {\r\n                const currentLang = this.getLang();\r\n\r\n                if (currentLang !== lang) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    content: response.data,\r\n                    isLoadingLang: currentLang\r\n                });\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Fade\r\n                in={true}\r\n                style={{\r\n                    transitionDelay: \"800ms\",\r\n                    margin: 20,\r\n                }}\r\n                unmountOnExit\r\n            >\r\n                <CircularProgress />\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withLocalize(withStyles(styles)(DrinkingGameComponent)));\r\n","import React from \"react\";\r\nimport DrinkingGame from \"../features/drinking-games/DrinkingGame\";\r\nimport game from \"../features/drinking-games/registrations\";\r\n\r\nexport default function DrinkingGameRoute() {\r\n    return (\r\n        <div>\r\n            {game.map(x => (\r\n                <DrinkingGame key={x.name} game={x} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    createStyles,\r\n    CssBaseline,\r\n    WithStyles,\r\n    withStyles,\r\n    WithTheme,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"DrinctetTypes\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport AppDrawerContainer from \"./AppDrawerContainer\";\r\nimport PlayRoute from \"../routes/PlayRoute\";\r\nimport SourcesRoute from \"../routes/SourcesRoute\";\r\nimport ConfigurationRoute from \"../routes/ConfigurationRoute\";\r\nimport GameComponent from \"../features/game/components/GameComponent\";\r\nimport DrinkingGameRoute from \"../routes/DrinkingGameRoute\";\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        root: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n        },\r\n        toolbar: {\r\n            ...theme.mixins.toolbar,\r\n            flex: \"0 1 auto\",\r\n        },\r\n    });\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    isStarted: state.game.isStarted,\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & WithStyles<typeof styles> & WithTheme;\r\n\r\nfunction App(props: Props) {\r\n    const { classes, isStarted } = props;\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div className={classes.root}>\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/play/game\"\r\n                        render={() => (!isStarted ? <Redirect to=\"/play\" /> : <GameComponent />)}\r\n                    />\r\n                    <Route\r\n                        path=\"/\"\r\n                        render={() => (\r\n                            <React.Fragment>\r\n                                <CssBaseline />\r\n                                <AppDrawerContainer />\r\n                                <main className={classes.content}>\r\n                                    <div className={classes.toolbar} />\r\n                                    <div style={{ flex: \"1 1 auto\" }}>\r\n                                        <Switch>\r\n                                            <Route\r\n                                                exact\r\n                                                path=\"/\"\r\n                                                render={() => <Redirect to=\"/play\" />}\r\n                                            />\r\n                                            <Route path=\"/play\" component={PlayRoute} />\r\n                                            <Route path=\"/sources\" component={SourcesRoute} />\r\n                                            <Route\r\n                                                path=\"/configuration\"\r\n                                                component={ConfigurationRoute}\r\n                                            />\r\n                                            <Route\r\n                                                path=\"/drinkingGames\"\r\n                                                component={DrinkingGameRoute}\r\n                                            />\r\n                                        </Switch>\r\n                                    </div>\r\n                                </main>\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withStyles(styles, { withTheme: true }),\r\n)(App) as React.ComponentType;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"tslib\";\r\nimport \"typeface-roboto\";\r\nimport App from \"./app/App\";\r\nimport \"./env\";\r\nimport { addSource, loadSourceAsync } from \"./features/settings/actions\";\r\nimport { addPlayer } from \"./features/play/actions\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport { initialize, LocalizeProvider, NamedLanguage } from \"react-localize-redux\";\r\nimport drinctetTranslations from \"./loc/drinctet.json\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { defaultSources } from \"./preferences\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst state = store.getState();\r\n\r\nif (state.settings.sources.length === 0) {\r\n    for (const src of defaultSources) {\r\n        const url = `${process.env.PUBLIC_URL}/${src}`;\r\n        store.dispatch(addSource(url));\r\n        store.dispatch(loadSourceAsync.request(url));\r\n    }\r\n}\r\nelse {\r\n    for (const src of state.settings.sources) {\r\n        store.dispatch(loadSourceAsync.request(src.url));\r\n    }\r\n}\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n    store.dispatch(addPlayer({ name: \"Vincent\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Melina\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Bursod\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Larny\", gender: \"Female\" }));\r\n    store.dispatch(addPlayer({ name: \"Sven\", gender: \"Male\" }));\r\n    store.dispatch(addPlayer({ name: \"Hufeld\", gender: \"Male\" }));\r\n}\r\n\r\nvar userLang = (navigator.language || ((navigator as any).userLanguage as string) || \"en\").split(\r\n    \"-\",\r\n)[0];\r\n\r\nconst languages: NamedLanguage[] = [\r\n    { code: \"en\", name: \"English\" },\r\n    { code: \"de\", name: \"Deutsch\" },\r\n];\r\nstore.dispatch(\r\n    initialize({\r\n        languages,\r\n        translation: drinctetTranslations,\r\n        options: { renderToStaticMarkup, defaultLanguage: userLang },\r\n    }),\r\n);\r\n\r\nconst Root = () => (\r\n    <div style={{ height: \"100%\" }}>\r\n        <Provider store={store}>\r\n            <LocalizeProvider store={store}>\r\n                <App />\r\n            </LocalizeProvider>\r\n        </Provider>\r\n    </div>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}